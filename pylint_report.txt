************* Module check_dependencies
check_dependencies.py:13:0: C0301: Line too long (102/100) (line-too-long)
check_dependencies.py:29:0: C0303: Trailing whitespace (trailing-whitespace)
check_dependencies.py:74:0: C0303: Trailing whitespace (trailing-whitespace)
check_dependencies.py:81:0: C0303: Trailing whitespace (trailing-whitespace)
check_dependencies.py:94:0: C0303: Trailing whitespace (trailing-whitespace)
check_dependencies.py:118:0: C0303: Trailing whitespace (trailing-whitespace)
check_dependencies.py:122:0: C0303: Trailing whitespace (trailing-whitespace)
check_dependencies.py:125:0: C0301: Line too long (109/100) (line-too-long)
check_dependencies.py:129:0: C0303: Trailing whitespace (trailing-whitespace)
check_dependencies.py:132:0: C0303: Trailing whitespace (trailing-whitespace)
check_dependencies.py:135:0: C0303: Trailing whitespace (trailing-whitespace)
check_dependencies.py:140:0: C0303: Trailing whitespace (trailing-whitespace)
check_dependencies.py:143:0: C0303: Trailing whitespace (trailing-whitespace)
check_dependencies.py:57:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
check_dependencies.py:59:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
check_dependencies.py:62:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
check_dependencies.py:80:12: W0632: Possible unbalanced tuple unpacking with sequence defined at line 19: left side has 3 labels, right side has 2 values (unbalanced-tuple-unpacking)
check_dependencies.py:83:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
check_dependencies.py:91:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
check_dependencies.py:93:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
check_dependencies.py:106:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
check_dependencies.py:107:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
check_dependencies.py:121:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
check_dependencies.py:127:4: W0702: No exception type(s) specified (bare-except)
check_dependencies.py:126:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
check_dependencies.py:137:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
check_dependencies.py:10:0: W0611: Unused List imported from typing (unused-import)
check_dependencies.py:10:0: W0611: Unused Dict imported from typing (unused-import)
check_dependencies.py:10:0: W0611: Unused Optional imported from typing (unused-import)
************* Module run_migration
run_migration.py:39:11: W0718: Catching too general exception Exception (broad-exception-caught)
run_migration.py:26:8: C0415: Import outside toplevel (migrations.db_migrations.run_all_migrations) (import-outside-toplevel)
run_migration.py:35:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_migration.py:37:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_migration.py:40:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module services.proxy_service
services/proxy_service.py:28:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/proxy_service.py:29:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/proxy_service.py:47:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/proxy_service.py:48:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/proxy_service.py:51:0: R0913: Too many arguments (8/5) (too-many-arguments)
services/proxy_service.py:51:0: R0917: Too many positional arguments (8/5) (too-many-positional-arguments)
services/proxy_service.py:85:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/proxy_service.py:83:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/proxy_service.py:87:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/proxy_service.py:115:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/proxy_service.py:104:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/proxy_service.py:113:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/proxy_service.py:117:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/proxy_service.py:140:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/proxy_service.py:133:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/proxy_service.py:138:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/proxy_service.py:142:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/proxy_service.py:218:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/proxy_service.py:204:15: W0718: Catching too general exception Exception (broad-exception-caught)
services/proxy_service.py:184:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
services/proxy_service.py:219:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/proxy_service.py:268:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/proxy_service.py:269:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/proxy_service.py:11:0: C0411: standard import "time" should be placed before third party import "requests" (wrong-import-order)
services/proxy_service.py:7:0: W0611: Unused import logging (unused-import)
services/proxy_service.py:8:0: W0611: Unused Tuple imported from typing (unused-import)
************* Module services.push_queue_worker
services/push_queue_worker.py:60:0: C0301: Line too long (110/100) (line-too-long)
services/push_queue_worker.py:23:0: C0103: Constant name "_worker_thread" doesn't conform to UPPER_CASE naming style (invalid-name)
services/push_queue_worker.py:25:0: C0103: Constant name "_last_run_time" doesn't conform to UPPER_CASE naming style (invalid-name)
services/push_queue_worker.py:32:4: W0603: Using the global statement (global-statement)
services/push_queue_worker.py:40:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/push_queue_worker.py:41:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_worker.py:105:15: W0718: Catching too general exception Exception (broad-exception-caught)
services/push_queue_worker.py:83:19: W0718: Catching too general exception Exception (broad-exception-caught)
services/push_queue_worker.py:53:16: C0415: Import outside toplevel (sys) (import-outside-toplevel)
services/push_queue_worker.py:60:16: C0415: Import outside toplevel (services.push_queue_service.process_notification_queue, services.push_queue_service.retry_failed_notifications) (import-outside-toplevel)
services/push_queue_worker.py:61:16: C0415: Import outside toplevel (web_app.app) (import-outside-toplevel)
services/push_queue_worker.py:68:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_worker.py:80:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_worker.py:82:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_worker.py:84:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_worker.py:106:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_worker.py:30:0: R0912: Too many branches (13/12) (too-many-branches)
services/push_queue_worker.py:114:4: W0603: Using the global statement (global-statement)
services/push_queue_worker.py:119:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/push_queue_worker.py:120:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_worker.py:141:4: W0603: Using the global statement (global-statement)
services/push_queue_worker.py:150:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
services/push_queue_worker.py:164:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/push_queue_worker.py:165:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module services.test_service
services/test_service.py:74:0: C0301: Line too long (104/100) (line-too-long)
services/test_service.py:199:0: C0301: Line too long (130/100) (line-too-long)
services/test_service.py:325:0: C0301: Line too long (107/100) (line-too-long)
services/test_service.py:353:0: C0301: Line too long (119/100) (line-too-long)
services/test_service.py:84:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/test_service.py:40:12: C0415: Import outside toplevel (twitter.scraper.TwitterScraper) (import-outside-toplevel)
services/test_service.py:78:15: W0718: Catching too general exception Exception (broad-exception-caught)
services/test_service.py:79:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:85:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:91:0: R0914: Too many local variables (19/15) (too-many-locals)
services/test_service.py:221:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/test_service.py:123:12: C0415: Import outside toplevel (langchain_openai.ChatOpenAI) (import-outside-toplevel)
services/test_service.py:124:12: C0415: Import outside toplevel (langchain_core.messages.HumanMessage, langchain_core.messages.SystemMessage) (import-outside-toplevel)
services/test_service.py:148:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:164:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:167:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:167:24: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
services/test_service.py:192:15: W0718: Catching too general exception Exception (broad-exception-caught)
services/test_service.py:177:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:178:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:179:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:194:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
services/test_service.py:195:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:196:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:197:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:198:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:199:16: W0707: Consider explicitly re-raising using 'raise Exception(f'{api_provider}返回404错误。请检查:\n1. API基础URL是否正确\n2. 模型名称是否正确\n3. 您是否有访问该模型的权限\n\n错误详情: {error_str}') from api_error' (raise-missing-from)
services/test_service.py:199:16: W0719: Raising too general exception: Exception (broad-exception-raised)
services/test_service.py:218:23: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
services/test_service.py:222:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:91:0: R0912: Too many branches (18/12) (too-many-branches)
services/test_service.py:91:0: R0915: Too many statements (59/50) (too-many-statements)
services/test_service.py:124:12: W0611: Unused SystemMessage imported from langchain_core.messages (unused-import)
services/test_service.py:228:0: R0914: Too many local variables (23/15) (too-many-locals)
services/test_service.py:410:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/test_service.py:241:12: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
services/test_service.py:247:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:251:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:289:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:293:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:332:19: W0718: Catching too general exception Exception (broad-exception-caught)
services/test_service.py:333:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:360:19: W0718: Catching too general exception Exception (broad-exception-caught)
services/test_service.py:361:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:411:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:228:0: R0915: Too many statements (57/50) (too-many-statements)
services/test_service.py:501:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/test_service.py:440:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:446:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:454:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:459:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:502:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:565:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/test_service.py:532:13: R1714: Consider merging these comparisons with 'in' by using 'response.status_code not in (200, 204)'. Use a set instead if elements are hashable. (consider-using-in)
services/test_service.py:547:12: W0702: No exception type(s) specified (bare-except)
services/test_service.py:566:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:621:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/test_service.py:622:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:657:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/test_service.py:651:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
services/test_service.py:658:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/test_service.py:6:0: W0611: Unused import os (unused-import)
services/test_service.py:8:0: W0611: Unused import json (unused-import)
************* Module services.push_queue_service
services/push_queue_service.py:102:0: C0301: Line too long (102/100) (line-too-long)
services/push_queue_service.py:113:0: C0301: Line too long (101/100) (line-too-long)
services/push_queue_service.py:20:0: R0913: Too many arguments (9/5) (too-many-arguments)
services/push_queue_service.py:20:0: R0917: Too many positional arguments (9/5) (too-many-positional-arguments)
services/push_queue_service.py:68:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:71:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:174:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/push_queue_service.py:96:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:103:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:162:19: W0718: Catching too general exception Exception (broad-exception-caught)
services/push_queue_service.py:117:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:133:31: W0718: Catching too general exception Exception (broad-exception-caught)
services/push_queue_service.py:88:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
services/push_queue_service.py:140:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:144:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:147:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:158:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:161:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:171:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:175:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:75:0: R0912: Too many branches (14/12) (too-many-branches)
services/push_queue_service.py:75:0: R0915: Too many statements (52/50) (too-many-statements)
services/push_queue_service.py:215:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/push_queue_service.py:205:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:216:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:239:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/push_queue_service.py:237:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:240:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/push_queue_service.py:7:0: W0611: Unused import time (unused-import)
************* Module services.system_status_service
services/system_status_service.py:31:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:40:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:45:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:50:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:54:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:65:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:79:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:84:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:95:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:120:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:134:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:138:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:148:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:158:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:168:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:182:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:187:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:198:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:209:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:219:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:233:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:238:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:242:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:248:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:254:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:267:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:279:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:294:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:301:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:308:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:315:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:317:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:323:0: C0303: Trailing whitespace (trailing-whitespace)
services/system_status_service.py:66:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/system_status_service.py:39:8: C0415: Import outside toplevel (web_app.AnalysisResult, web_app.SocialAccount, web_app.db, web_app.app) (import-outside-toplevel)
services/system_status_service.py:67:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/system_status_service.py:39:8: W0611: Unused db imported from web_app (unused-import)
services/system_status_service.py:121:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/system_status_service.py:78:8: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
services/system_status_service.py:109:15: W0718: Catching too general exception Exception (broad-exception-caught)
services/system_status_service.py:98:12: C0415: Import outside toplevel (modules.langchain.llm.get_llm_response_with_cache) (import-outside-toplevel)
services/system_status_service.py:122:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/system_status_service.py:98:12: W0611: Unused get_llm_response_with_cache imported from modules.langchain.llm (unused-import)
services/system_status_service.py:169:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/system_status_service.py:133:8: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
services/system_status_service.py:170:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/system_status_service.py:220:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/system_status_service.py:181:8: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
services/system_status_service.py:221:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/system_status_service.py:280:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/system_status_service.py:232:8: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
services/system_status_service.py:244:12: C0415: Import outside toplevel (modules.socialmedia.twitter) (import-outside-toplevel)
services/system_status_service.py:250:12: C0415: Import outside toplevel (modules.socialmedia.twitter_twikit) (import-outside-toplevel)
services/system_status_service.py:281:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/system_status_service.py:244:12: W0611: Unused twitter imported from modules.socialmedia (unused-import)
services/system_status_service.py:250:12: W0611: Unused twitter_twikit imported from modules.socialmedia (unused-import)
services/system_status_service.py:324:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/system_status_service.py:296:12: C0415: Import outside toplevel (main) (import-outside-toplevel)
services/system_status_service.py:300:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/system_status_service.py:303:12: C0415: Import outside toplevel (modules.socialmedia.post.Post) (import-outside-toplevel)
services/system_status_service.py:307:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/system_status_service.py:310:12: C0415: Import outside toplevel (modules.socialmedia.twitter_utils.extract_media_info) (import-outside-toplevel)
services/system_status_service.py:314:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/system_status_service.py:325:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/system_status_service.py:296:12: W0611: Unused import main (unused-import)
services/system_status_service.py:303:12: W0611: Unused Post imported from modules.socialmedia.post (unused-import)
services/system_status_service.py:310:12: W0611: Unused extract_media_info imported from modules.socialmedia.twitter_utils (unused-import)
************* Module services.state_service
services/state_service.py:62:15: W0718: Catching too general exception Exception (broad-exception-caught)
services/state_service.py:63:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/state_service.py:83:19: W0718: Catching too general exception Exception (broad-exception-caught)
services/state_service.py:84:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module services.repository
services/repository/__init__.py:7:0: E0401: Unable to import 'sqlalchemy.orm' (import-error)
services/repository/__init__.py:8:0: E0401: Unable to import 'sqlalchemy' (import-error)
services/repository/__init__.py:31:24: W0622: Redefining built-in 'id' (redefined-builtin)
services/repository/__init__.py:132:15: W0718: Catching too general exception Exception (broad-exception-caught)
services/repository/__init__.py:136:27: W0622: Redefining built-in 'id' (redefined-builtin)
services/repository/__init__.py:211:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
************* Module services.repository.notification_service_repository
services/repository/notification_service_repository.py:50:0: C0301: Line too long (109/100) (line-too-long)
services/repository/notification_service_repository.py:6:0: W0611: Unused Tuple imported from typing (unused-import)
************* Module services.repository.social_account_repository
services/repository/social_account_repository.py:79:0: C0301: Line too long (106/100) (line-too-long)
services/repository/social_account_repository.py:167:0: C0301: Line too long (102/100) (line-too-long)
services/repository/social_account_repository.py:6:0: W0611: Unused Tuple imported from typing (unused-import)
************* Module services.repository.ai_provider_repository
services/repository/ai_provider_repository.py:67:0: C0301: Line too long (103/100) (line-too-long)
services/repository/ai_provider_repository.py:51:33: C0121: Comparison 'AIProvider.is_active == True' should be 'AIProvider.is_active is True' if checking for the singleton value True, or 'bool(AIProvider.is_active)' if testing for truthiness (singleton-comparison)
services/repository/ai_provider_repository.py:6:0: W0611: Unused Tuple imported from typing (unused-import)
************* Module services.repository.user_repository
services/repository/user_repository.py:6:0: W0611: Unused Dict imported from typing (unused-import)
services/repository/user_repository.py:6:0: W0611: Unused Any imported from typing (unused-import)
services/repository/user_repository.py:6:0: W0611: Unused Tuple imported from typing (unused-import)
************* Module services.repository.system_config_repository
services/repository/system_config_repository.py:43:0: C0301: Line too long (112/100) (line-too-long)
services/repository/system_config_repository.py:58:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
services/repository/system_config_repository.py:6:0: W0611: Unused List imported from typing (unused-import)
************* Module services.repository.system_state_repository
services/repository/system_state_repository.py:70:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
services/repository/system_state_repository.py:6:0: W0611: Unused List imported from typing (unused-import)
services/repository/system_state_repository.py:6:0: W0611: Unused Tuple imported from typing (unused-import)
************* Module services.repository.factory
services/repository/factory.py:22:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/factory.py:25:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/factory.py:35:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/factory.py:45:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/factory.py:55:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/factory.py:65:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/factory.py:75:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/factory.py:85:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/factory.py:95:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/factory.py:108:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/factory.py:111:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/factory.py:113:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/factory.py:6:0: W0611: Unused Any imported from typing (unused-import)
services/repository/factory.py:6:0: W0611: Unused Optional imported from typing (unused-import)
************* Module services.repository.analysis_result_repository
services/repository/analysis_result_repository.py:14:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:18:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:30:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:44:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:57:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:58:0: C0301: Line too long (116/100) (line-too-long)
services/repository/analysis_result_repository.py:78:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:92:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:96:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:100:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:111:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:116:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:122:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:126:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:130:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:134:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:137:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:141:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:145:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:154:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:156:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:166:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:173:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:180:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:187:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:191:0: C0301: Line too long (136/100) (line-too-long)
services/repository/analysis_result_repository.py:192:0: C0301: Line too long (149/100) (line-too-long)
services/repository/analysis_result_repository.py:193:0: C0301: Line too long (156/100) (line-too-long)
services/repository/analysis_result_repository.py:195:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:207:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:221:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:224:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:227:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:230:0: C0303: Trailing whitespace (trailing-whitespace)
services/repository/analysis_result_repository.py:8:0: E0401: Unable to import 'sqlalchemy' (import-error)
services/repository/analysis_result_repository.py:79:4: R0912: Too many branches (14/12) (too-many-branches)
services/repository/analysis_result_repository.py:171:53: E0602: Undefined variable 'db' (undefined-variable)
services/repository/analysis_result_repository.py:178:53: E0602: Undefined variable 'db' (undefined-variable)
services/repository/analysis_result_repository.py:185:53: E0602: Undefined variable 'db' (undefined-variable)
services/repository/analysis_result_repository.py:223:33: C0121: Comparison 'AnalysisResult.is_relevant == False' should be 'AnalysisResult.is_relevant is False' if checking for the singleton value False, or 'not AnalysisResult.is_relevant' if testing for falsiness (singleton-comparison)
services/repository/analysis_result_repository.py:6:0: W0611: Unused List imported from typing (unused-import)
services/repository/analysis_result_repository.py:6:0: W0611: Unused Tuple imported from typing (unused-import)
services/repository/analysis_result_repository.py:8:0: W0611: Unused or_ imported from sqlalchemy (unused-import)
services/repository/analysis_result_repository.py:8:0: W0611: Unused cast imported from sqlalchemy (unused-import)
services/repository/analysis_result_repository.py:8:0: W0611: Unused Date imported from sqlalchemy (unused-import)
************* Module services.ai_polling_service
services/ai_polling_service.py:307:0: C0301: Line too long (104/100) (line-too-long)
services/ai_polling_service.py:542:0: C0301: Line too long (102/100) (line-too-long)
services/ai_polling_service.py:559:0: C0301: Line too long (111/100) (line-too-long)
services/ai_polling_service.py:562:0: C0301: Line too long (107/100) (line-too-long)
services/ai_polling_service.py:572:0: C0301: Line too long (124/100) (line-too-long)
services/ai_polling_service.py:638:0: C0301: Line too long (112/100) (line-too-long)
services/ai_polling_service.py:371:13: W0511: TODO: 实现批处理逻辑 (fixme)
services/ai_polling_service.py:22:4: C0415: Import outside toplevel (web_app.db) (import-outside-toplevel)
services/ai_polling_service.py:27:4: C0415: Import outside toplevel (models.ai_provider.AIProvider) (import-outside-toplevel)
services/ai_polling_service.py:32:4: C0415: Import outside toplevel (models.ai_request_log.AIRequestLog) (import-outside-toplevel)
services/ai_polling_service.py:36:0: C0413: Import "from utils.logger import get_logger" should be placed at the top of the module (wrong-import-position)
services/ai_polling_service.py:54:0: C0103: Constant name "_worker_thread" doesn't conform to UPPER_CASE naming style (invalid-name)
services/ai_polling_service.py:55:0: C0103: Constant name "_worker_running" doesn't conform to UPPER_CASE naming style (invalid-name)
services/ai_polling_service.py:56:0: C0103: Constant name "_last_run_time" doesn't conform to UPPER_CASE naming style (invalid-name)
services/ai_polling_service.py:57:0: C0103: Constant name "_health_check_count" doesn't conform to UPPER_CASE naming style (invalid-name)
services/ai_polling_service.py:58:0: C0103: Constant name "_cache_hit_count" doesn't conform to UPPER_CASE naming style (invalid-name)
services/ai_polling_service.py:59:0: C0103: Constant name "_cache_miss_count" doesn't conform to UPPER_CASE naming style (invalid-name)
services/ai_polling_service.py:60:0: C0103: Constant name "_batch_processed_count" doesn't conform to UPPER_CASE naming style (invalid-name)
services/ai_polling_service.py:99:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/ai_polling_service.py:100:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:122:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/ai_polling_service.py:114:8: C0415: Import outside toplevel (web_app.app, web_app.db) (import-outside-toplevel)
services/ai_polling_service.py:123:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:127:8: W0702: No exception type(s) specified (bare-except)
services/ai_polling_service.py:125:12: C0415: Import outside toplevel (web_app.db) (import-outside-toplevel)
services/ai_polling_service.py:159:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/ai_polling_service.py:160:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:197:4: W0603: Using the global statement (global-statement)
services/ai_polling_service.py:209:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
services/ai_polling_service.py:343:4: W0603: Using the global statement (global-statement)
services/ai_polling_service.py:362:13: W0612: Unused variable 'provider_id' (unused-variable)
services/ai_polling_service.py:362:26: W0612: Unused variable 'model' (unused-variable)
services/ai_polling_service.py:369:12: W0612: Unused variable 'contents' (unused-variable)
services/ai_polling_service.py:390:4: W0602: Using global for '_health_check_count' but no assignment is done (global-variable-not-assigned)
services/ai_polling_service.py:403:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/ai_polling_service.py:394:8: E0401: Unable to import 'flask' (import-error)
services/ai_polling_service.py:394:8: C0415: Import outside toplevel (flask.current_app) (import-outside-toplevel)
services/ai_polling_service.py:397:12: C0415: Import outside toplevel (web_app.app) (import-outside-toplevel)
services/ai_polling_service.py:404:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:407:0: R0914: Too many local variables (24/15) (too-many-locals)
services/ai_polling_service.py:414:4: W0603: Using the global statement (global-statement)
services/ai_polling_service.py:613:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/ai_polling_service.py:423:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:587:19: W0718: Catching too general exception Exception (broad-exception-caught)
services/ai_polling_service.py:552:23: W0718: Catching too general exception Exception (broad-exception-caught)
services/ai_polling_service.py:458:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:514:31: W0718: Catching too general exception Exception (broad-exception-caught)
services/ai_polling_service.py:416:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
services/ai_polling_service.py:502:28: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
services/ai_polling_service.py:513:36: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:515:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:416:4: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
services/ai_polling_service.py:416:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
services/ai_polling_service.py:559:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:562:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:588:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:611:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:614:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:407:0: R0912: Too many branches (19/12) (too-many-branches)
services/ai_polling_service.py:407:0: R0915: Too many statements (80/50) (too-many-statements)
services/ai_polling_service.py:619:4: W0602: Using global for '_worker_running' but no assignment is done (global-variable-not-assigned)
services/ai_polling_service.py:622:4: C0415: Import outside toplevel (web_app.app) (import-outside-toplevel)
services/ai_polling_service.py:671:15: W0718: Catching too general exception Exception (broad-exception-caught)
services/ai_polling_service.py:643:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:651:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:672:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:680:4: W0603: Using the global statement (global-statement)
services/ai_polling_service.py:685:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/ai_polling_service.py:686:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:708:4: W0603: Using the global statement (global-statement)
services/ai_polling_service.py:717:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
services/ai_polling_service.py:768:15: W0718: Catching too general exception Exception (broad-exception-caught)
services/ai_polling_service.py:759:12: E0401: Unable to import 'flask' (import-error)
services/ai_polling_service.py:759:12: C0415: Import outside toplevel (flask.current_app) (import-outside-toplevel)
services/ai_polling_service.py:762:16: C0415: Import outside toplevel (web_app.app) (import-outside-toplevel)
services/ai_polling_service.py:769:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/ai_polling_service.py:14:0: C0411: standard import "datetime.datetime" should be placed before third party import "requests" (wrong-import-order)
services/ai_polling_service.py:15:0: C0411: standard import "typing.Dict" should be placed before third party import "requests" (wrong-import-order)
services/ai_polling_service.py:10:0: W0611: Unused import logging (unused-import)
services/ai_polling_service.py:12:0: W0611: Unused import traceback (unused-import)
services/ai_polling_service.py:15:0: W0611: Unused Tuple imported from typing (unused-import)
services/ai_polling_service.py:15:0: W0611: Unused Union imported from typing (unused-import)
************* Module services.config_service
services/config_service.py:135:0: C0301: Line too long (114/100) (line-too-long)
services/config_service.py:242:0: C0303: Trailing whitespace (trailing-whitespace)
services/config_service.py:245:0: C0303: Trailing whitespace (trailing-whitespace)
services/config_service.py:250:0: C0301: Line too long (112/100) (line-too-long)
services/config_service.py:265:0: C0303: Trailing whitespace (trailing-whitespace)
services/config_service.py:281:0: C0303: Trailing whitespace (trailing-whitespace)
services/config_service.py:284:0: C0303: Trailing whitespace (trailing-whitespace)
services/config_service.py:288:0: C0303: Trailing whitespace (trailing-whitespace)
services/config_service.py:490:0: C0301: Line too long (120/100) (line-too-long)
services/config_service.py:589:0: C0301: Line too long (116/100) (line-too-long)
services/config_service.py:625:0: C0301: Line too long (103/100) (line-too-long)
services/config_service.py:14:0: E0401: Unable to import 'sqlalchemy' (import-error)
services/config_service.py:24:0: C0103: Constant name "_config_cache_timestamp" doesn't conform to UPPER_CASE naming style (invalid-name)
services/config_service.py:25:0: C0103: Constant name "_config_cache_ttl" doesn't conform to UPPER_CASE naming style (invalid-name)
services/config_service.py:26:0: C0103: Constant name "_config_initialized" doesn't conform to UPPER_CASE naming style (invalid-name)
services/config_service.py:27:0: C0103: Constant name "_config_refreshing" doesn't conform to UPPER_CASE naming style (invalid-name)
services/config_service.py:58:0: R0914: Too many local variables (19/15) (too-many-locals)
services/config_service.py:148:12: W0621: Redefining name 'sqlite3' from outer scope (line 13) (redefined-outer-name)
services/config_service.py:68:4: W0602: Using global for '_config_meta' but no assignment is done (global-variable-not-assigned)
services/config_service.py:92:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:168:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:122:15: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:117:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:124:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:136:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:137:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:141:23: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:140:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:140:32: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
services/config_service.py:142:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:144:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:148:12: W0404: Reimport 'sqlite3' (imported line 13) (reimported)
services/config_service.py:148:12: C0415: Import outside toplevel (sqlite3) (import-outside-toplevel)
services/config_service.py:157:28: R1721: Unnecessary use of a comprehension, use dict(configs) instead. (unnecessary-comprehension)
services/config_service.py:159:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:172:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:58:0: R0915: Too many statements (61/50) (too-many-statements)
services/config_service.py:226:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:206:19: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:207:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:217:15: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:218:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:227:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:247:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:246:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:248:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:291:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:289:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:292:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:373:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:382:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:385:20: W0602: Using global for '_config_cache' but no assignment is done (global-variable-not-assigned)
services/config_service.py:391:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:415:4: W0603: Using the global statement (global-statement)
services/config_service.py:435:4: W0603: Using the global statement (global-statement)
services/config_service.py:465:19: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:466:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:486:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:490:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:501:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:506:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:394:0: R0912: Too many branches (16/12) (too-many-branches)
services/config_service.py:394:0: R0915: Too many statements (56/50) (too-many-statements)
services/config_service.py:521:0: R0914: Too many local variables (26/15) (too-many-locals)
services/config_service.py:694:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:540:15: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:537:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:539:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:541:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:586:23: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:565:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:566:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:566:36: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
services/config_service.py:578:31: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:577:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:578:24: W0621: Redefining name 'e' from outer scope (line 540) (redefined-outer-name)
services/config_service.py:579:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:584:28: W0702: No exception type(s) specified (bare-except)
services/config_service.py:586:16: W0621: Redefining name 'e' from outer scope (line 540) (redefined-outer-name)
services/config_service.py:587:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:590:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:591:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:595:23: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:594:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:594:32: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
services/config_service.py:595:16: W0621: Redefining name 'e' from outer scope (line 540) (redefined-outer-name)
services/config_service.py:596:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:598:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:603:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:646:27: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:625:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:626:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:626:40: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
services/config_service.py:638:35: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:637:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:638:28: W0621: Redefining name 'e' from outer scope (line 540) (redefined-outer-name)
services/config_service.py:639:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:644:32: W0702: No exception type(s) specified (bare-except)
services/config_service.py:646:20: W0621: Redefining name 'e' from outer scope (line 540) (redefined-outer-name)
services/config_service.py:647:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:650:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:654:27: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:653:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:653:36: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
services/config_service.py:654:20: W0621: Redefining name 'e' from outer scope (line 540) (redefined-outer-name)
services/config_service.py:655:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:660:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:676:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:678:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:687:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:695:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:521:0: R0912: Too many branches (28/12) (too-many-branches)
services/config_service.py:521:0: R0915: Too many statements (111/50) (too-many-statements)
services/config_service.py:725:11: W0718: Catching too general exception Exception (broad-exception-caught)
services/config_service.py:713:12: C0415: Import outside toplevel (yaml) (import-outside-toplevel)
services/config_service.py:713:12: E0401: Unable to import 'yaml' (import-error)
services/config_service.py:719:16: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
services/config_service.py:721:22: R1714: Consider merging these comparisons with 'in' by using 'account_type in ('ai', 'tech')'. Use a set instead if elements are hashable. (consider-using-in)
services/config_service.py:726:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
services/config_service.py:730:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
services/config_service.py:740:9: R1714: Consider merging these comparisons with 'in' by using 'account_type in ('ai', 'tech')'. Use a set instead if elements are hashable. (consider-using-in)
services/config_service.py:16:0: C0411: standard import "functools.lru_cache" should be placed before third party import "sqlalchemy.text" and first party import "models.db"  (wrong-import-order)
services/config_service.py:9:0: W0611: Unused import json (unused-import)
services/config_service.py:12:0: W0611: Unused import threading (unused-import)
services/config_service.py:14:0: W0611: Unused text imported from sqlalchemy (unused-import)
services/config_service.py:15:0: W0611: Unused db imported from models (unused-import)
services/config_service.py:16:0: W0611: Unused lru_cache imported from functools (unused-import)
************* Module utils.yaml_utils
utils/yaml_utils.py:7:0: E0401: Unable to import 'yaml' (import-error)
utils/yaml_utils.py:33:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/yaml_utils.py:34:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/yaml_utils.py:47:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
utils/yaml_utils.py:94:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/yaml_utils.py:92:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/yaml_utils.py:95:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/yaml_utils.py:176:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/yaml_utils.py:108:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/yaml_utils.py:171:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/yaml_utils.py:124:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/yaml_utils.py:148:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/yaml_utils.py:168:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/yaml_utils.py:173:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/yaml_utils.py:177:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/yaml_utils.py:8:0: C0411: standard import "logging" should be placed before third party import "yaml" (wrong-import-order)
utils/yaml_utils.py:10:0: W0611: Unused get_config imported from services.config_service (unused-import)
************* Module utils.api_decorators
utils/api_decorators.py:64:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/api_decorators.py:52:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_decorators.py:56:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_decorators.py:60:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_decorators.py:68:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_decorators.py:70:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_decorators.py:72:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_decorators.py:113:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_decorators.py:123:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_decorators.py:130:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
utils/api_decorators.py:131:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_decorators.py:165:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
utils/api_decorators.py:166:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_decorators.py:184:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_decorators.py:206:12: C0415: Import outside toplevel (signal) (import-outside-toplevel)
utils/api_decorators.py:16:0: W0611: Unused ConnectionAPIError imported from utils.api_utils (unused-import)
utils/api_decorators.py:20:4: W0611: Unused ErrorTypes imported from utils.error_types (unused-import)
utils/api_decorators.py:20:4: W0611: Unused RETRYABLE_ERROR_TYPES imported from utils.error_types (unused-import)
************* Module utils.test_utils
utils/test_utils.py:146:0: C0301: Line too long (103/100) (line-too-long)
utils/test_utils.py:193:0: C0301: Line too long (115/100) (line-too-long)
utils/test_utils.py:482:0: C0301: Line too long (120/100) (line-too-long)
utils/test_utils.py:567:0: C0301: Line too long (104/100) (line-too-long)
utils/test_utils.py:579:0: C0301: Line too long (133/100) (line-too-long)
utils/test_utils.py:758:0: C0301: Line too long (115/100) (line-too-long)
utils/test_utils.py:1:0: C0114: Missing module docstring (missing-module-docstring)
utils/test_utils.py:68:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:27:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:31:20: C0415: Import outside toplevel (socksio) (import-outside-toplevel)
utils/test_utils.py:40:27: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:36:24: C0415: Import outside toplevel (pip) (import-outside-toplevel)
utils/test_utils.py:41:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:50:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:53:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
utils/test_utils.py:69:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:31:20: W0611: Unused import socksio (unused-import)
utils/test_utils.py:107:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:97:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:91:12: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
utils/test_utils.py:98:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:108:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:223:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:125:12: C0415: Import outside toplevel (modules.socialmedia.twitter.fetch, modules.socialmedia.twitter.reinit_twitter_client) (import-outside-toplevel)
utils/test_utils.py:131:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:150:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:144:12: C0415: Import outside toplevel (modules.socialmedia.twitter.app) (import-outside-toplevel)
utils/test_utils.py:149:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:151:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:157:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:160:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:162:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:187:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
utils/test_utils.py:188:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:210:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:224:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:112:0: R0912: Too many branches (18/12) (too-many-branches)
utils/test_utils.py:112:0: R0915: Too many statements (56/50) (too-many-statements)
utils/test_utils.py:306:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:248:8: E0401: Unable to import 'langchain_openai' (import-error)
utils/test_utils.py:248:8: C0415: Import outside toplevel (langchain_openai.ChatOpenAI) (import-outside-toplevel)
utils/test_utils.py:249:8: E0401: Unable to import 'langchain_core.messages' (import-error)
utils/test_utils.py:249:8: C0415: Import outside toplevel (langchain_core.messages.HumanMessage, langchain_core.messages.SystemMessage) (import-outside-toplevel)
utils/test_utils.py:250:8: C0415: Import outside toplevel (modules.langchain.llm.get_llm_response) (import-outside-toplevel)
utils/test_utils.py:261:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:268:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:278:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:283:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
utils/test_utils.py:284:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:296:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:307:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:248:8: W0611: Unused ChatOpenAI imported from langchain_openai (unused-import)
utils/test_utils.py:249:8: W0611: Unused HumanMessage imported from langchain_core.messages (unused-import)
utils/test_utils.py:249:8: W0611: Unused SystemMessage imported from langchain_core.messages (unused-import)
utils/test_utils.py:326:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:321:8: C0415: Import outside toplevel (pip) (import-outside-toplevel)
utils/test_utils.py:327:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:401:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:346:8: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
utils/test_utils.py:352:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:391:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:392:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:402:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:415:0: R0914: Too many local variables (28/15) (too-many-locals)
utils/test_utils.py:460:8: W0621: Redefining name 'datetime' from outer scope (line 6) (redefined-outer-name)
utils/test_utils.py:423:4: C0415: Import outside toplevel (platform) (import-outside-toplevel)
utils/test_utils.py:470:4: W0702: No exception type(s) specified (bare-except)
utils/test_utils.py:460:8: W0404: Reimport 'datetime' (imported line 6) (reimported)
utils/test_utils.py:460:8: C0415: Import outside toplevel (datetime) (import-outside-toplevel)
utils/test_utils.py:501:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:475:8: C0415: Import outside toplevel (modules.socialmedia.twitter.app, modules.socialmedia.twitter.reinit_twitter_client) (import-outside-toplevel)
utils/test_utils.py:498:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:502:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:523:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:517:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:514:16: C0415: Import outside toplevel (modules.langchain.llm.get_llm_response) (import-outside-toplevel)
utils/test_utils.py:524:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:602:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:532:12: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
utils/test_utils.py:568:27: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:529:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
utils/test_utils.py:586:23: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:599:23: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:603:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:658:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:620:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:616:16: C0415: Import outside toplevel (importlib) (import-outside-toplevel)
utils/test_utils.py:621:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:652:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:626:16: C0415: Import outside toplevel (apprise) (import-outside-toplevel)
utils/test_utils.py:640:31: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:641:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:608:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
utils/test_utils.py:659:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:415:0: R0912: Too many branches (42/12) (too-many-branches)
utils/test_utils.py:415:0: R0915: Too many statements (159/50) (too-many-statements)
utils/test_utils.py:514:16: W0611: Unused get_llm_response imported from modules.langchain.llm (unused-import)
utils/test_utils.py:776:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:679:12: C0415: Import outside toplevel (modules.socialmedia.twitter_twikit) (import-outside-toplevel)
utils/test_utils.py:682:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:698:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:700:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:706:8: C0415: Import outside toplevel (asyncio) (import-outside-toplevel)
utils/test_utils.py:720:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:726:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/test_utils.py:727:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:742:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:752:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
utils/test_utils.py:753:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:769:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:777:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/test_utils.py:2:0: W0611: Unused import json (unused-import)
utils/test_utils.py:4:0: W0611: Unused import urllib.request (unused-import)
utils/test_utils.py:5:0: W0611: Unused import urllib.error (unused-import)
utils/test_utils.py:6:0: W0611: Unused import datetime (unused-import)
************* Module utils.redisClient
utils/redisClient.py:7:0: C0301: Line too long (102/100) (line-too-long)
utils/redisClient.py:50:0: C0301: Line too long (102/100) (line-too-long)
utils/redisClient.py:1:0: C0114: Missing module docstring (missing-module-docstring)
utils/redisClient.py:1:0: C0103: Module name "redisClient" doesn't conform to snake_case naming style (invalid-name)
utils/redisClient.py:15:0: C0115: Missing class docstring (missing-class-docstring)
utils/redisClient.py:29:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/redisClient.py:45:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/redisClient.py:50:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/redisClient.py:57:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/redisClient.py:92:31: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
utils/redisClient.py:93:27: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
utils/redisClient.py:1:0: W0611: Unused import os (unused-import)
utils/redisClient.py:4:0: W0611: Unused datetime imported from datetime (unused-import)
utils/redisClient.py:4:0: W0611: Unused timedelta imported from datetime (unused-import)
************* Module utils.url_utils
utils/url_utils.py:71:0: C0301: Line too long (105/100) (line-too-long)
utils/url_utils.py:118:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module utils.ssl_fix
utils/ssl_fix.py:11:0: C0103: Constant name "logger" doesn't conform to UPPER_CASE naming style (invalid-name)
utils/ssl_fix.py:15:4: W0603: Using the global statement (global-statement)
utils/ssl_fix.py:18:12: C0415: Import outside toplevel (utils.logger.get_logger) (import-outside-toplevel)
utils/ssl_fix.py:38:8: W0621: Redefining name 'logger' from outer scope (line 11) (redefined-outer-name)
utils/ssl_fix.py:151:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/ssl_fix.py:51:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ssl_fix.py:74:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/ssl_fix.py:57:16: W0212: Access to a protected member _original_create_default_https_context of a client class (protected-access)
utils/ssl_fix.py:61:26: W0212: Access to a protected member _original_create_default_https_context of a client class (protected-access)
utils/ssl_fix.py:69:12: W0212: Access to a protected member _create_default_https_context of a client class (protected-access)
utils/ssl_fix.py:75:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ssl_fix.py:99:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/ssl_fix.py:79:12: C0415: Import outside toplevel (urllib3) (import-outside-toplevel)
utils/ssl_fix.py:100:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ssl_fix.py:137:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/ssl_fix.py:104:12: C0415: Import outside toplevel (requests) (import-outside-toplevel)
utils/ssl_fix.py:105:12: C0415: Import outside toplevel (requests.adapters.HTTPAdapter) (import-outside-toplevel)
utils/ssl_fix.py:106:12: C0415: Import outside toplevel (urllib3.util.retry.Retry) (import-outside-toplevel)
utils/ssl_fix.py:118:16: C0115: Missing class docstring (missing-class-docstring)
utils/ssl_fix.py:138:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ssl_fix.py:142:12: C0415: Import outside toplevel (httpx) (import-outside-toplevel)
utils/ssl_fix.py:152:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ssl_fix.py:27:0: R0915: Too many statements (61/50) (too-many-statements)
utils/ssl_fix.py:109:12: W0612: Unused variable 'create_ssl_adapter' (unused-variable)
utils/ssl_fix.py:142:12: W0611: Unused import httpx (unused-import)
utils/ssl_fix.py:175:8: W0621: Redefining name 'logger' from outer scope (line 11) (redefined-outer-name)
utils/ssl_fix.py:174:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/ssl_fix.py:176:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ssl_fix.py:190:4: W0621: Redefining name 'logger' from outer scope (line 11) (redefined-outer-name)
utils/ssl_fix.py:207:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/ssl_fix.py:192:8: C0415: Import outside toplevel (requests) (import-outside-toplevel)
utils/ssl_fix.py:204:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ssl_fix.py:208:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ssl_fix.py:216:4: W0621: Redefining name 'logger' from outer scope (line 11) (redefined-outer-name)
utils/ssl_fix.py:232:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/ssl_fix.py:220:41: W0212: Access to a protected member _original_create_default_https_context of a client class (protected-access)
utils/ssl_fix.py:221:12: W0212: Access to a protected member _create_default_https_context of a client class (protected-access)
utils/ssl_fix.py:221:48: W0212: Access to a protected member _original_create_default_https_context of a client class (protected-access)
utils/ssl_fix.py:233:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module utils.config
utils/config.py:10:0: C0301: Line too long (102/100) (line-too-long)
utils/config.py:42:11: W1114: Positional arguments appear to be out of order (arguments-out-of-order)
utils/config.py:6:0: W0611: Unused import os (unused-import)
************* Module utils.error_types
utils/error_types.py:30:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_types.py:84:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_types.py:114:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_types.py:116:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_types.py:119:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_types.py:146:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_types.py:151:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_types.py:154:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_types.py:161:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_types.py:166:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_types.py:189:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_types.py:192:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_types.py:195:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_types.py:7:0: R0903: Too few public methods (0/2) (too-few-public-methods)
utils/error_types.py:86:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
utils/error_types.py:93:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
utils/error_types.py:72:0: R0911: Too many return statements (7/6) (too-many-return-statements)
utils/error_types.py:155:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
************* Module utils.error_utils
utils/error_utils.py:44:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_utils.py:47:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_utils.py:51:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_utils.py:100:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_utils.py:104:0: C0303: Trailing whitespace (trailing-whitespace)
utils/error_utils.py:41:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/error_utils.py:50:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/error_utils.py:97:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/error_utils.py:103:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module utils.logger
utils/logger.py:52:0: C0301: Line too long (104/100) (line-too-long)
utils/logger.py:29:0: E0401: Unable to import 'dotenv' (import-error)
utils/logger.py:46:24: W1508: os.getenv default type is builtins.int. Expected str or None. (invalid-envvar-default)
utils/logger.py:47:28: W1508: os.getenv default type is builtins.int. Expected str or None. (invalid-envvar-default)
utils/logger.py:72:0: C0103: Constant name "_root_logger_initialized" doesn't conform to UPPER_CASE naming style (invalid-name)
utils/logger.py:91:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/logger.py:99:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/logger.py:116:4: W0603: Using the global statement (global-statement)
utils/logger.py:172:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/logger.py:200:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/logger.py:192:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
utils/logger.py:192:41: W0612: Unused variable 'f' (unused-variable)
utils/logger.py:228:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/logger.py:292:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/logger.py:288:27: W0718: Catching too general exception Exception (broad-exception-caught)
utils/logger.py:424:4: W0603: Using the global statement (global-statement)
utils/logger.py:466:4: W0622: Redefining built-in 'format' (redefined-builtin)
utils/logger.py:470:4: W0603: Using the global statement (global-statement)
utils/logger.py:495:19: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
utils/logger.py:496:21: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
utils/logger.py:497:24: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
utils/logger.py:498:20: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
utils/logger.py:499:21: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
utils/logger.py:500:23: C3001: Lambda expression assigned to a variable. Define a function using the "def" keyword instead. (unnecessary-lambda-assignment)
************* Module utils.db_utils
utils/db_utils.py:13:0: C0301: Line too long (110/100) (line-too-long)
utils/db_utils.py:26:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:35:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:42:27: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:44:20: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:62:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:66:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:70:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:72:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:80:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:82:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:83:0: C0301: Line too long (101/100) (line-too-long)
utils/db_utils.py:84:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:87:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:95:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:98:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:103:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:110:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:114:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:162:27: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:164:20: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:165:21: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:186:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:192:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:230:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:236:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:262:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:269:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:278:0: C0301: Line too long (124/100) (line-too-long)
utils/db_utils.py:292:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:296:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:300:0: C0303: Trailing whitespace (trailing-whitespace)
utils/db_utils.py:25:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:38:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:41:0: R0914: Too many local variables (20/15) (too-many-locals)
utils/db_utils.py:64:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:83:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:109:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:113:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:161:0: R0913: Too many arguments (6/5) (too-many-arguments)
utils/db_utils.py:161:0: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
utils/db_utils.py:184:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:198:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/db_utils.py:193:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:196:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:199:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:203:0: R0913: Too many arguments (6/5) (too-many-arguments)
utils/db_utils.py:203:0: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
utils/db_utils.py:228:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:242:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/db_utils.py:237:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:240:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:243:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:273:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/db_utils.py:271:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:274:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:303:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/db_utils.py:301:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:304:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/db_utils.py:7:0: W0611: Unused import logging (unused-import)
utils/db_utils.py:8:0: W0611: Unused Optional imported from typing (unused-import)
utils/db_utils.py:8:0: W0611: Unused Dict imported from typing (unused-import)
utils/db_utils.py:8:0: W0611: Unused Any imported from typing (unused-import)
************* Module utils.api_utils
utils/api_utils.py:344:0: C0325: Unnecessary parens after '=' keyword (superfluous-parens)
utils/api_utils.py:592:0: C0301: Line too long (104/100) (line-too-long)
utils/api_utils.py:749:0: C0301: Line too long (109/100) (line-too-long)
utils/api_utils.py:750:0: C0301: Line too long (113/100) (line-too-long)
utils/api_utils.py:765:0: C0301: Line too long (124/100) (line-too-long)
utils/api_utils.py:788:0: C0301: Line too long (102/100) (line-too-long)
utils/api_utils.py:1:0: C0302: Too many lines in module (1026/1000) (too-many-lines)
utils/api_utils.py:24:0: W0622: Redefining built-in 'ConnectionError' (redefined-builtin)
utils/api_utils.py:31:0: C0413: Import "from utils.error_types import ErrorTypes, ERROR_TYPE_MAPPING, ERROR_MESSAGES, RETRYABLE_ERROR_TYPES, NON_RETRYABLE_ERROR_TYPES, get_error_type_from_status_code, get_error_message, is_retryable_error, classify_error_from_exception, create_error_response" should be placed at the top of the module (wrong-import-position)
utils/api_utils.py:41:0: C0103: Constant name "_cache_ttl" doesn't conform to UPPER_CASE naming style (invalid-name)
utils/api_utils.py:51:0: C0103: Constant name "_proxy_manager" doesn't conform to UPPER_CASE naming style (invalid-name)
utils/api_utils.py:62:4: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
utils/api_utils.py:65:8: R0913: Too many arguments (9/5) (too-many-arguments)
utils/api_utils.py:65:8: R0917: Too many positional arguments (9/5) (too-many-positional-arguments)
utils/api_utils.py:127:4: R0913: Too many arguments (8/5) (too-many-arguments)
utils/api_utils.py:127:4: R0917: Too many positional arguments (8/5) (too-many-positional-arguments)
utils/api_utils.py:159:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
utils/api_utils.py:162:4: R0913: Too many arguments (7/5) (too-many-arguments)
utils/api_utils.py:162:4: R0917: Too many positional arguments (7/5) (too-many-positional-arguments)
utils/api_utils.py:229:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/api_utils.py:222:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
utils/api_utils.py:223:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:226:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:230:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:257:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
utils/api_utils.py:295:23: W0718: Catching too general exception Exception (broad-exception-caught)
utils/api_utils.py:296:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:337:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:353:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:360:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
utils/api_utils.py:392:4: W0603: Using the global statement (global-statement)
utils/api_utils.py:431:23: W0718: Catching too general exception Exception (broad-exception-caught)
utils/api_utils.py:403:20: C0415: Import outside toplevel (services.proxy_service.get_all_proxies) (import-outside-toplevel)
utils/api_utils.py:409:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:427:39: W0718: Catching too general exception Exception (broad-exception-caught)
utils/api_utils.py:428:36: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:432:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:396:12: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
utils/api_utils.py:461:31: W0718: Catching too general exception Exception (broad-exception-caught)
utils/api_utils.py:462:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:487:31: W0718: Catching too general exception Exception (broad-exception-caught)
utils/api_utils.py:488:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:500:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:382:0: R0912: Too many branches (15/12) (too-many-branches)
utils/api_utils.py:382:0: R0915: Too many statements (51/50) (too-many-statements)
utils/api_utils.py:514:4: W0107: Unnecessary pass statement (unnecessary-pass)
utils/api_utils.py:518:4: W0107: Unnecessary pass statement (unnecessary-pass)
utils/api_utils.py:522:4: W0107: Unnecessary pass statement (unnecessary-pass)
utils/api_utils.py:526:4: W0107: Unnecessary pass statement (unnecessary-pass)
utils/api_utils.py:530:4: W0107: Unnecessary pass statement (unnecessary-pass)
utils/api_utils.py:534:4: W0107: Unnecessary pass statement (unnecessary-pass)
utils/api_utils.py:538:4: W0107: Unnecessary pass statement (unnecessary-pass)
utils/api_utils.py:596:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
utils/api_utils.py:577:0: R0911: Too many return statements (8/6) (too-many-return-statements)
utils/api_utils.py:615:0: R0913: Too many arguments (13/5) (too-many-arguments)
utils/api_utils.py:615:0: R0917: Too many positional arguments (13/5) (too-many-positional-arguments)
utils/api_utils.py:615:0: R0914: Too many local variables (33/15) (too-many-locals)
utils/api_utils.py:651:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
utils/api_utils.py:652:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:710:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/api_utils.py:675:12: C0415: Import outside toplevel (services.proxy_service.find_working_proxy) (import-outside-toplevel)
utils/api_utils.py:697:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:708:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/api_utils.py:707:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:709:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:711:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:730:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:732:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:738:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:769:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:798:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:808:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:812:16: W0707: Consider explicitly re-raising using 'raise error from e' (raise-missing-from)
utils/api_utils.py:818:4: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
utils/api_utils.py:615:0: R0912: Too many branches (31/12) (too-many-branches)
utils/api_utils.py:615:0: R0915: Too many statements (95/50) (too-many-statements)
utils/api_utils.py:881:4: W0603: Using the global statement (global-statement)
utils/api_utils.py:886:0: R0913: Too many arguments (12/5) (too-many-arguments)
utils/api_utils.py:886:0: R0917: Too many positional arguments (12/5) (too-many-positional-arguments)
utils/api_utils.py:886:0: R0914: Too many local variables (20/15) (too-many-locals)
utils/api_utils.py:963:8: W0707: Consider explicitly re-raising using 'raise error from e' (raise-missing-from)
utils/api_utils.py:967:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/api_utils.py:968:8: W0707: Consider explicitly re-raising using 'raise APIError(f'代理请求时出错: {str(e)}') from e' (raise-missing-from)
utils/api_utils.py:887:17: W0613: Unused argument 'retries' (unused-argument)
utils/api_utils.py:887:28: W0613: Unused argument 'retry_delay' (unused-argument)
utils/api_utils.py:887:60: W0613: Unused argument 'cache_ttl' (unused-argument)
utils/api_utils.py:18:0: C0411: standard import "hashlib" should be placed before third party import "requests" (wrong-import-order)
utils/api_utils.py:19:0: C0411: standard import "threading" should be placed before third party import "requests" (wrong-import-order)
utils/api_utils.py:20:0: C0411: standard import "functools.wraps" should be placed before third party import "requests" (wrong-import-order)
utils/api_utils.py:21:0: C0411: standard import "urllib.parse.urlparse" should be placed before third party import "requests" (wrong-import-order)
utils/api_utils.py:22:0: C0411: standard import "concurrent.futures.ThreadPoolExecutor" should be placed before third party import "requests" (wrong-import-order)
utils/api_utils.py:23:0: C0411: standard import "typing.List" should be placed before third party import "requests" (wrong-import-order)
utils/api_utils.py:16:0: W0611: Unused import logging (unused-import)
utils/api_utils.py:20:0: W0611: Unused wraps imported from functools (unused-import)
utils/api_utils.py:23:0: W0611: Unused Dict imported from typing (unused-import)
utils/api_utils.py:23:0: W0611: Unused Union imported from typing (unused-import)
utils/api_utils.py:23:0: W0611: Unused Any imported from typing (unused-import)
utils/api_utils.py:23:0: W0611: Unused Callable imported from typing (unused-import)
utils/api_utils.py:24:0: W0611: Unused Timeout imported from requests.exceptions (unused-import)
utils/api_utils.py:24:0: W0611: Unused ConnectionError imported from requests.exceptions (unused-import)
utils/api_utils.py:31:0: W0611: Unused ERROR_TYPE_MAPPING imported from utils.error_types (unused-import)
utils/api_utils.py:31:0: W0611: Unused ERROR_MESSAGES imported from utils.error_types (unused-import)
utils/api_utils.py:31:0: W0611: Unused RETRYABLE_ERROR_TYPES imported from utils.error_types (unused-import)
utils/api_utils.py:31:0: W0611: Unused NON_RETRYABLE_ERROR_TYPES imported from utils.error_types (unused-import)
utils/api_utils.py:31:0: W0611: Unused is_retryable_error imported from utils.error_types (unused-import)
utils/api_utils.py:31:0: W0611: Unused create_error_response imported from utils.error_types (unused-import)
************* Module routes.ai_settings
routes/ai_settings.py:37:0: C0301: Line too long (103/100) (line-too-long)
routes/ai_settings.py:200:0: C0301: Line too long (104/100) (line-too-long)
routes/ai_settings.py:321:0: C0301: Line too long (110/100) (line-too-long)
routes/ai_settings.py:482:0: C0301: Line too long (130/100) (line-too-long)
routes/ai_settings.py:9:0: E0401: Unable to import 'flask' (import-error)
routes/ai_settings.py:10:0: E0401: Unable to import 'flask_login' (import-error)
routes/ai_settings.py:11:0: E0401: Unable to import 'sqlalchemy' (import-error)
routes/ai_settings.py:94:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/ai_settings.py:135:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/ai_settings.py:108:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:128:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:137:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:179:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/ai_settings.py:228:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/ai_settings.py:251:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/ai_settings.py:270:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/ai_settings.py:302:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/ai_settings.py:329:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/ai_settings.py:315:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:323:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:330:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:355:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/ai_settings.py:342:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:348:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:356:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:417:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/ai_settings.py:369:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:378:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:411:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:419:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:455:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/ai_settings.py:432:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:439:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:449:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:457:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:494:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/ai_settings.py:470:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:482:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:488:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:496:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:551:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/ai_settings.py:508:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:527:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:538:12: C0415: Import outside toplevel (services.ai_polling_service) (import-outside-toplevel)
routes/ai_settings.py:539:12: W0212: Access to a protected member _health_check_count of a client class (protected-access)
routes/ai_settings.py:540:12: W0212: Access to a protected member _cache_hit_count of a client class (protected-access)
routes/ai_settings.py:541:12: W0212: Access to a protected member _cache_miss_count of a client class (protected-access)
routes/ai_settings.py:542:12: W0212: Access to a protected member _batch_processed_count of a client class (protected-access)
routes/ai_settings.py:553:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/ai_settings.py:6:0: W0611: Unused import os (unused-import)
routes/ai_settings.py:7:0: W0611: Unused import json (unused-import)
routes/ai_settings.py:11:0: W0611: Unused or_ imported from sqlalchemy (unused-import)
************* Module routes.push_notifications
routes/push_notifications.py:126:0: C0301: Line too long (101/100) (line-too-long)
routes/push_notifications.py:150:0: C0301: Line too long (102/100) (line-too-long)
routes/push_notifications.py:208:0: C0301: Line too long (107/100) (line-too-long)
routes/push_notifications.py:209:0: C0301: Line too long (102/100) (line-too-long)
routes/push_notifications.py:9:0: E0401: Unable to import 'flask' (import-error)
routes/push_notifications.py:10:0: E0401: Unable to import 'flask_login' (import-error)
routes/push_notifications.py:11:0: E0401: Unable to import 'sqlalchemy' (import-error)
routes/push_notifications.py:27:4: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
routes/push_notifications.py:112:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/push_notifications.py:108:8: C0415: Import outside toplevel (services.push_queue_worker.get_worker_status) (import-outside-toplevel)
routes/push_notifications.py:234:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/push_notifications.py:204:8: C0415: Import outside toplevel (services.config_service.set_config) (import-outside-toplevel)
routes/push_notifications.py:219:12: C0415: Import outside toplevel (services.push_queue_worker.stop_push_queue_worker, services.push_queue_worker.start_push_queue_worker) (import-outside-toplevel)
routes/push_notifications.py:242:0: R0914: Too many local variables (17/15) (too-many-locals)
routes/push_notifications.py:358:11: W0718: Catching too general exception Exception (broad-exception-caught)
routes/push_notifications.py:256:16: C0415: Import outside toplevel (services.push_queue_service.queue_notification) (import-outside-toplevel)
routes/push_notifications.py:280:16: C0415: Import outside toplevel (modules.bots.apprise_adapter.send_to_specific_url) (import-outside-toplevel)
routes/push_notifications.py:286:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/push_notifications.py:290:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
routes/push_notifications.py:316:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
routes/push_notifications.py:340:16: C0415: Import outside toplevel (modules.bots.apprise_adapter.send_notification) (import-outside-toplevel)
routes/push_notifications.py:348:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
routes/push_notifications.py:242:0: R0911: Too many return statements (7/6) (too-many-return-statements)
routes/push_notifications.py:242:0: R0912: Too many branches (17/12) (too-many-branches)
routes/push_notifications.py:9:0: W0611: Unused current_app imported from flask (unused-import)
routes/push_notifications.py:10:0: W0611: Unused current_user imported from flask_login (unused-import)
************* Module main
main.py:193:0: C0301: Line too long (116/100) (line-too-long)
main.py:295:0: C0301: Line too long (129/100) (line-too-long)
main.py:352:0: C0301: Line too long (101/100) (line-too-long)
main.py:382:0: C0301: Line too long (101/100) (line-too-long)
main.py:491:0: C0301: Line too long (102/100) (line-too-long)
main.py:493:0: C0301: Line too long (110/100) (line-too-long)
main.py:504:0: C0301: Line too long (110/100) (line-too-long)
main.py:662:0: C0301: Line too long (102/100) (line-too-long)
main.py:687:0: C0301: Line too long (106/100) (line-too-long)
main.py:830:0: C0301: Line too long (120/100) (line-too-long)
main.py:837:0: C0301: Line too long (124/100) (line-too-long)
main.py:838:0: C0301: Line too long (124/100) (line-too-long)
main.py:848:0: C0301: Line too long (102/100) (line-too-long)
main.py:854:0: C0301: Line too long (107/100) (line-too-long)
main.py:859:0: C0301: Line too long (121/100) (line-too-long)
main.py:865:0: C0301: Line too long (109/100) (line-too-long)
main.py:870:0: C0301: Line too long (128/100) (line-too-long)
main.py:875:0: C0301: Line too long (127/100) (line-too-long)
main.py:880:0: C0301: Line too long (104/100) (line-too-long)
main.py:891:0: C0301: Line too long (127/100) (line-too-long)
main.py:914:0: C0301: Line too long (159/100) (line-too-long)
main.py:1010:0: C0301: Line too long (112/100) (line-too-long)
main.py:1031:0: C0301: Line too long (113/100) (line-too-long)
main.py:1125:0: C0301: Line too long (180/100) (line-too-long)
main.py:1181:0: C0301: Line too long (107/100) (line-too-long)
main.py:1204:0: C0301: Line too long (158/100) (line-too-long)
main.py:1258:0: C0301: Line too long (102/100) (line-too-long)
main.py:1281:0: C0301: Line too long (134/100) (line-too-long)
main.py:1372:0: C0301: Line too long (111/100) (line-too-long)
main.py:1442:0: C0301: Line too long (108/100) (line-too-long)
main.py:1543:0: C0301: Line too long (122/100) (line-too-long)
main.py:1555:0: C0301: Line too long (116/100) (line-too-long)
main.py:1561:0: C0301: Line too long (114/100) (line-too-long)
main.py:1571:0: C0301: Line too long (112/100) (line-too-long)
main.py:1:0: C0302: Too many lines in module (1577/1000) (too-many-lines)
main.py:1:0: C0114: Missing module docstring (missing-module-docstring)
main.py:12:0: E0401: Unable to import 'dotenv' (import-error)
main.py:23:7: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:24:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:27:0: C0413: Import "from modules.socialmedia.twitter import fetch as fetchTwitter, auto_reply" should be placed at the top of the module (wrong-import-position)
main.py:37:0: C0413: Import "from modules.langchain.llm import get_llm_response_with_cache, LLMAPIError, LLMRateLimitError" should be placed at the top of the module (wrong-import-position)
main.py:38:0: C0413: Import "from utils.yaml_utils import load_config_with_env" should be placed at the top of the module (wrong-import-position)
main.py:65:11: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:57:8: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
main.py:63:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:66:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:71:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:102:19: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:100:16: C0415: Import outside toplevel (modules.socialmedia.twitter.get_timeline_posts_async) (import-outside-toplevel)
main.py:103:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:109:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
main.py:117:23: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:115:20: C0415: Import outside toplevel (modules.socialmedia.twitter.get_timeline_posts_async) (import-outside-toplevel)
main.py:118:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:129:19: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:124:16: C0415: Import outside toplevel (modules.socialmedia.twitter.get_timeline_posts_async) (import-outside-toplevel)
main.py:130:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:141:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
main.py:142:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:149:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
main.py:150:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:156:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:81:0: R0911: Too many return statements (16/6) (too-many-return-statements)
main.py:81:0: R0912: Too many branches (20/12) (too-many-branches)
main.py:198:11: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:184:8: C0415: Import outside toplevel (services.config_service.init_config) (import-outside-toplevel)
main.py:191:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:193:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:195:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:199:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:242:16: W0621: Redefining name 're' from outer scope (line 3) (redefined-outer-name)
main.py:231:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:235:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:235:29: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
main.py:236:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:242:16: W0404: Reimport 're' (imported line 3) (reimported)
main.py:242:16: C0415: Import outside toplevel (re) (import-outside-toplevel)
main.py:269:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:270:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:274:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
main.py:281:12: C0415: Import outside toplevel (utils.prompts.default_prompts.get_default_prompt) (import-outside-toplevel)
main.py:290:19: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:287:16: C0415: Import outside toplevel (services.config_service.get_default_prompt_template) (import-outside-toplevel)
main.py:291:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:338:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:338:23: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
main.py:365:4: C0103: Variable name "rawData" doesn't conform to snake_case naming style (invalid-name)
main.py:423:15: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:373:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:391:19: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:382:16: C0103: Variable name "rawData" doesn't conform to snake_case naming style (invalid-name)
main.py:386:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:388:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:390:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:393:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:394:16: C0103: Variable name "rawData" doesn't conform to snake_case naming style (invalid-name)
main.py:401:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:401:28: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
main.py:410:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:410:31: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
main.py:416:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:421:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:425:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:352:0: R0912: Too many branches (14/12) (too-many-branches)
main.py:352:37: W0613: Unused argument 'account_type' (unused-argument)
main.py:352:56: W0613: Unused argument 'account_id' (unused-argument)
main.py:436:8: C0415: Import outside toplevel (services.config_service.ensure_env_vars) (import-outside-toplevel)
main.py:450:0: R0913: Too many arguments (6/5) (too-many-arguments)
main.py:450:0: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
main.py:450:0: R0914: Too many local variables (24/15) (too-many-locals)
main.py:549:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:581:11: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:575:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
main.py:582:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:450:0: R0912: Too many branches (14/12) (too-many-branches)
main.py:522:16: W0612: Unused variable 'i' (unused-variable)
main.py:585:0: R0913: Too many arguments (10/5) (too-many-arguments)
main.py:585:0: R0917: Too many positional arguments (10/5) (too-many-positional-arguments)
main.py:585:0: R0914: Too many local variables (27/15) (too-many-locals)
main.py:634:20: W0621: Redefining name 'json' from outer scope (line 1) (redefined-outer-name)
main.py:720:11: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:619:8: C0415: Import outside toplevel (web_app.AnalysisResult, web_app.db, web_app.app) (import-outside-toplevel)
main.py:634:20: W0404: Reimport 'json' (imported line 1) (reimported)
main.py:634:20: C0415: Import outside toplevel (json) (import-outside-toplevel)
main.py:636:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:658:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:663:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:721:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:734:15: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:735:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:585:0: R0912: Too many branches (20/12) (too-many-branches)
main.py:585:0: R0915: Too many statements (68/50) (too-many-statements)
main.py:742:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:746:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:750:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:754:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:757:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:764:0: R0914: Too many local variables (26/15) (too-many-locals)
main.py:779:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:823:11: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:824:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:902:11: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:894:15: R1714: Consider merging these comparisons with 'in' by using 'area_type in ('impact_areas', 'tech_areas')'. Use a set instead if elements are hashable. (consider-using-in)
main.py:900:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:903:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:764:0: R0912: Too many branches (21/12) (too-many-branches)
main.py:764:0: R0915: Too many statements (79/50) (too-many-statements)
main.py:914:0: R0914: Too many local variables (25/15) (too-many-locals)
main.py:938:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:942:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1121:11: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:1009:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1048:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1051:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1075:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1077:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1099:19: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:1093:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1100:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1122:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:914:0: R0915: Too many statements (74/50) (too-many-statements)
main.py:1125:0: R0914: Too many local variables (17/15) (too-many-locals)
main.py:1151:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1156:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1200:11: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:1167:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1188:19: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:1180:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1189:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1195:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1198:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1201:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1204:0: R0914: Too many local variables (16/15) (too-many-locals)
main.py:1219:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1224:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1277:11: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:1238:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1242:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1265:19: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:1257:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1266:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1272:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1275:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1278:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1281:0: R0914: Too many local variables (22/15) (too-many-locals)
main.py:1314:8: W0621: Redefining name 'fetch_twitter_posts_smart' from outer scope (line 81) (redefined-outer-name)
main.py:1316:8: W0621: Redefining name 'load_config_with_env' from outer scope (line 38) (redefined-outer-name)
main.py:1298:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1391:11: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:1314:8: C0415: Import outside toplevel (modules.socialmedia.smart_fetch.fetch_twitter_posts_smart) (import-outside-toplevel)
main.py:1315:8: C0415: Import outside toplevel (modules.socialmedia.async_utils.safe_asyncio_run) (import-outside-toplevel)
main.py:1316:8: W0404: Reimport 'load_config_with_env' (imported line 38) (reimported)
main.py:1316:8: C0415: Import outside toplevel (utils.yaml_utils.load_config_with_env) (import-outside-toplevel)
main.py:1317:8: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
main.py:1321:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1324:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1327:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1379:19: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:1371:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1380:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1386:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1389:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1392:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1281:0: R0912: Too many branches (13/12) (too-many-branches)
main.py:1281:0: R0915: Too many statements (58/50) (too-many-statements)
main.py:1444:11: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:1413:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1421:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1427:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1442:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1445:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1504:11: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:1486:8: C0415: Import outside toplevel (web_app.AnalysisResult, web_app.db, web_app.app) (import-outside-toplevel)
main.py:1496:15: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:1493:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1497:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1501:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1505:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1486:8: W0611: Unused db imported from web_app (unused-import)
main.py:1510:0: R0914: Too many local variables (17/15) (too-many-locals)
main.py:1539:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1554:23: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:1555:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1570:19: W0718: Catching too general exception Exception (broad-exception-caught)
main.py:1560:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1568:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:1571:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main.py:12:0: C0411: third party import "dotenv.load_dotenv" should be placed before first party import "utils.logger.get_logger"  (wrong-import-order)
main.py:13:0: C0411: standard import "typing.Dict" should be placed before third party import "dotenv.load_dotenv" and first party import "utils.logger.get_logger"  (wrong-import-order)
main.py:20:4: C0412: Imports from package utils are not grouped (ungrouped-imports)
main.py:38:0: C0412: Imports from package utils are not grouped (ungrouped-imports)
main.py:42:4: C0412: Imports from package modules are not grouped (ungrouped-imports)
main.py:8:0: W0611: Unused datetime imported from datetime (unused-import)
main.py:13:0: W0611: Unused Union imported from typing (unused-import)
************* Module check_db
check_db.py:13:0: C0303: Trailing whitespace (trailing-whitespace)
check_db.py:16:0: C0303: Trailing whitespace (trailing-whitespace)
check_db.py:23:0: C0303: Trailing whitespace (trailing-whitespace)
check_db.py:27:0: C0303: Trailing whitespace (trailing-whitespace)
check_db.py:31:0: C0303: Trailing whitespace (trailing-whitespace)
check_db.py:1:0: C0114: Missing module docstring (missing-module-docstring)
check_db.py:34:11: W0718: Catching too general exception Exception (broad-exception-caught)
check_db.py:2:0: W0611: Unused import sys (unused-import)
************* Module web_app
web_app.py:150:0: C0301: Line too long (115/100) (line-too-long)
web_app.py:696:0: C0301: Line too long (167/100) (line-too-long)
web_app.py:720:0: C0301: Line too long (191/100) (line-too-long)
web_app.py:816:0: C0301: Line too long (120/100) (line-too-long)
web_app.py:895:0: C0301: Line too long (107/100) (line-too-long)
web_app.py:917:0: C0301: Line too long (103/100) (line-too-long)
web_app.py:975:0: C0301: Line too long (101/100) (line-too-long)
web_app.py:976:0: C0301: Line too long (109/100) (line-too-long)
web_app.py:977:0: C0301: Line too long (113/100) (line-too-long)
web_app.py:978:0: C0301: Line too long (113/100) (line-too-long)
web_app.py:979:0: C0301: Line too long (105/100) (line-too-long)
web_app.py:1096:0: C0301: Line too long (109/100) (line-too-long)
web_app.py:1097:0: C0301: Line too long (117/100) (line-too-long)
web_app.py:1098:0: C0301: Line too long (121/100) (line-too-long)
web_app.py:1099:0: C0301: Line too long (121/100) (line-too-long)
web_app.py:1100:0: C0301: Line too long (113/100) (line-too-long)
web_app.py:1276:0: C0301: Line too long (113/100) (line-too-long)
web_app.py:1280:0: C0301: Line too long (101/100) (line-too-long)
web_app.py:1284:0: C0301: Line too long (102/100) (line-too-long)
web_app.py:1289:0: C0301: Line too long (108/100) (line-too-long)
web_app.py:1293:0: C0301: Line too long (123/100) (line-too-long)
web_app.py:1297:0: C0301: Line too long (123/100) (line-too-long)
web_app.py:1302:0: C0301: Line too long (122/100) (line-too-long)
web_app.py:1310:0: C0301: Line too long (103/100) (line-too-long)
web_app.py:1314:0: C0301: Line too long (108/100) (line-too-long)
web_app.py:1318:0: C0301: Line too long (109/100) (line-too-long)
web_app.py:1443:0: C0301: Line too long (141/100) (line-too-long)
web_app.py:1683:0: C0301: Line too long (105/100) (line-too-long)
web_app.py:1754:0: C0301: Line too long (102/100) (line-too-long)
web_app.py:1:0: C0302: Too many lines in module (1783/1000) (too-many-lines)
web_app.py:1:0: C0114: Missing module docstring (missing-module-docstring)
web_app.py:7:0: E0401: Unable to import 'yaml' (import-error)
web_app.py:17:7: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:18:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:20:0: E0401: Unable to import 'flask' (import-error)
web_app.py:20:0: C0413: Import "from flask import Flask, render_template, request, redirect, url_for, flash, jsonify, session" should be placed at the top of the module (wrong-import-position)
web_app.py:21:0: E0401: Unable to import 'flask_wtf.csrf' (import-error)
web_app.py:21:0: C0413: Import "from flask_wtf.csrf import CSRFProtect" should be placed at the top of the module (wrong-import-position)
web_app.py:22:0: E0401: Unable to import 'flask_login' (import-error)
web_app.py:22:0: C0413: Import "from flask_login import LoginManager, login_user, logout_user, login_required, current_user" should be placed at the top of the module (wrong-import-position)
web_app.py:23:0: E0401: Unable to import 'sqlalchemy' (import-error)
web_app.py:23:0: C0413: Import "from sqlalchemy import func, cast, Date" should be placed at the top of the module (wrong-import-position)
web_app.py:26:0: C0413: Import "from models import db" should be placed at the top of the module (wrong-import-position)
web_app.py:27:0: C0413: Import "from models.user import User" should be placed at the top of the module (wrong-import-position)
web_app.py:28:0: C0413: Import "from models.social_account import SocialAccount" should be placed at the top of the module (wrong-import-position)
web_app.py:29:0: C0413: Import "from models.analysis_result import AnalysisResult" should be placed at the top of the module (wrong-import-position)
web_app.py:30:0: C0413: Import "from models.system_config import SystemConfig" should be placed at the top of the module (wrong-import-position)
web_app.py:31:0: C0413: Import "from models.system_state import SystemState" should be placed at the top of the module (wrong-import-position)
web_app.py:32:0: C0413: Import "from models.ai_provider import AIProvider" should be placed at the top of the module (wrong-import-position)
web_app.py:33:0: C0413: Import "from services.config_service import get_config, set_config, get_system_config, load_configs_to_env, get_default_prompt_template, init_config as service_init_config" should be placed at the top of the module (wrong-import-position)
web_app.py:38:0: C0413: Import "from services.state_service import DBStateStore" should be placed at the top of the module (wrong-import-position)
web_app.py:39:0: C0413: Import "from services.test_service import check_system_status" should be placed at the top of the module (wrong-import-position)
web_app.py:40:0: C0413: Import "from utils.yaml_utils import sync_accounts_to_yaml, import_accounts_from_yaml" should be placed at the top of the module (wrong-import-position)
web_app.py:65:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:79:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
web_app.py:96:0: C0116: Missing function or method docstring (missing-function-docstring)
web_app.py:100:0: C0413: Import "from api import api_blueprint" should be placed at the top of the module (wrong-import-position)
web_app.py:112:7: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:111:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:113:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:123:7: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:122:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:124:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:142:7: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:141:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:143:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:190:11: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:175:15: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:174:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:176:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:183:15: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:182:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:184:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:188:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:191:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:211:15: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:212:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:285:11: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:236:16: W0702: No exception type(s) specified (bare-except)
web_app.py:242:16: W0702: No exception type(s) specified (bare-except)
web_app.py:248:16: W0702: No exception type(s) specified (bare-except)
web_app.py:286:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:289:8: W0702: No exception type(s) specified (bare-except)
web_app.py:303:0: C0116: Missing function or method docstring (missing-function-docstring)
web_app.py:303:0: R0914: Too many local variables (17/15) (too-many-locals)
web_app.py:313:12: W0621: Redefining name 'db_path' from outer scope (line 52) (redefined-outer-name)
web_app.py:403:11: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:309:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:315:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:319:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:330:19: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:331:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:382:19: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:379:27: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:358:33: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
web_app.py:360:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:362:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:304:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
web_app.py:376:29: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
web_app.py:378:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:380:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:383:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:391:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:304:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
web_app.py:404:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:303:0: R0912: Too many branches (15/12) (too-many-branches)
web_app.py:303:0: R0915: Too many statements (63/50) (too-many-statements)
web_app.py:426:4: C0415: Import outside toplevel (services.system_status_service.get_system_status) (import-outside-toplevel)
web_app.py:554:11: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:477:15: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:473:12: E0401: Unable to import 'sqlalchemy' (import-error)
web_app.py:473:12: C0415: Import outside toplevel (sqlalchemy.text) (import-outside-toplevel)
web_app.py:478:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:484:19: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:484:12: W0621: Redefining name 'e' from outer scope (line 477) (redefined-outer-name)
web_app.py:485:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:491:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:546:19: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:506:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:528:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:548:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:555:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:464:0: R0911: Too many return statements (8/6) (too-many-return-statements)
web_app.py:464:0: R0915: Too many statements (58/50) (too-many-statements)
web_app.py:559:0: C0116: Missing function or method docstring (missing-function-docstring)
web_app.py:573:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:576:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:582:0: C0116: Missing function or method docstring (missing-function-docstring)
web_app.py:594:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:599:0: C0116: Missing function or method docstring (missing-function-docstring)
web_app.py:656:4: W0621: Redefining name 'accounts' from outer scope (line 946) (redefined-outer-name)
web_app.py:616:15: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:617:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:623:11: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:624:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:645:11: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:646:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:725:11: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:689:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:692:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:696:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:702:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:713:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:721:15: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:720:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:722:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:726:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:759:11: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:760:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:764:0: C0116: Missing function or method docstring (missing-function-docstring)
web_app.py:764:0: R0914: Too many local variables (20/15) (too-many-locals)
web_app.py:856:4: W0621: Redefining name 'results' from outer scope (line 764) (redefined-outer-name)
web_app.py:859:4: W0621: Redefining name 'accounts' from outer scope (line 946) (redefined-outer-name)
web_app.py:786:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:793:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:809:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:812:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:817:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:820:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:825:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:862:4: C0115: Missing class docstring (missing-class-docstring)
web_app.py:862:4: R0903: Too few public methods (0/2) (too-few-public-methods)
web_app.py:764:0: R0912: Too many branches (21/12) (too-many-branches)
web_app.py:764:0: R0915: Too many statements (77/50) (too-many-statements)
web_app.py:913:4: W0621: Redefining name 'config' from outer scope (line 599) (redefined-outer-name)
web_app.py:946:0: C0116: Missing function or method docstring (missing-function-docstring)
web_app.py:950:4: W0621: Redefining name 'accounts' from outer scope (line 946) (redefined-outer-name)
web_app.py:954:0: C0116: Missing function or method docstring (missing-function-docstring)
web_app.py:954:0: R0914: Too many local variables (16/15) (too-many-locals)
web_app.py:1017:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1050:0: C0116: Missing function or method docstring (missing-function-docstring)
web_app.py:1059:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1064:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1066:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1073:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1075:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1107:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1140:0: C0116: Missing function or method docstring (missing-function-docstring)
web_app.py:1152:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1156:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1160:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1184:11: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:1173:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1186:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1201:0: R0914: Too many local variables (19/15) (too-many-locals)
web_app.py:1211:12: E0401: Unable to import 'sqlalchemy' (import-error)
web_app.py:1211:12: C0415: Import outside toplevel (sqlalchemy.inspect) (import-outside-toplevel)
web_app.py:1216:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1228:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1237:19: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:1236:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1238:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1261:19: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:1260:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1262:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1268:15: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:1269:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1321:15: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:1322:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1330:15: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:1331:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1339:15: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:1340:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1349:15: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:1344:12: C0415: Import outside toplevel (migrations.db_migrations.run_all_migrations) (import-outside-toplevel)
web_app.py:1350:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1201:0: R0912: Too many branches (29/12) (too-many-branches)
web_app.py:1201:0: R0915: Too many statements (98/50) (too-many-statements)
web_app.py:1358:0: R0914: Too many local variables (18/15) (too-many-locals)
web_app.py:1369:8: W0621: Redefining name 'accounts' from outer scope (line 946) (redefined-outer-name)
web_app.py:1382:12: W0621: Redefining name 'config' from outer scope (line 599) (redefined-outer-name)
web_app.py:1427:8: W0621: Redefining name 'export_data' from outer scope (line 1358) (redefined-outer-name)
web_app.py:1445:11: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:1446:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1358:0: R0912: Too many branches (14/12) (too-many-branches)
web_app.py:1461:0: R0914: Too many local variables (22/15) (too-many-locals)
web_app.py:1490:8: W0621: Redefining name 'import_data' from outer scope (line 1461) (redefined-outer-name)
web_app.py:1580:20: W0621: Redefining name 'config' from outer scope (line 599) (redefined-outer-name)
web_app.py:1733:11: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:1501:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1585:20: E0633: Attempting to unpack a non-sequence defined at line 290 of services.config_service (unpacking-non-sequence)
web_app.py:1594:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1596:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1604:20: E0633: Attempting to unpack a non-sequence defined at line 290 of services.config_service (unpacking-non-sequence)
web_app.py:1613:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1615:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1623:20: E0633: Attempting to unpack a non-sequence defined at line 290 of services.config_service (unpacking-non-sequence)
web_app.py:1632:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1634:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1642:20: E0633: Attempting to unpack a non-sequence defined at line 290 of services.config_service (unpacking-non-sequence)
web_app.py:1651:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1653:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1658:20: E0633: Attempting to unpack a non-sequence defined at line 290 of services.config_service (unpacking-non-sequence)
web_app.py:1667:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1669:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1702:24: E0633: Attempting to unpack a non-sequence defined at line 290 of services.config_service (unpacking-non-sequence)
web_app.py:1709:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1709:40: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
web_app.py:1712:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1712:41: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
web_app.py:1488:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
web_app.py:1717:20: E0633: Attempting to unpack a non-sequence defined at line 290 of services.config_service (unpacking-non-sequence)
web_app.py:1724:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1724:36: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
web_app.py:1727:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1727:37: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
web_app.py:1734:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1461:0: R0911: Too many return statements (8/6) (too-many-return-statements)
web_app.py:1461:0: R0912: Too many branches (56/12) (too-many-branches)
web_app.py:1461:0: R0915: Too many statements (122/50) (too-many-statements)
web_app.py:1585:20: W0612: Unused variable 'config_obj' (unused-variable)
web_app.py:1780:11: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:1747:19: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:1748:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1769:19: W0718: Catching too general exception Exception (broad-exception-caught)
web_app.py:1757:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1761:24: C0103: Constant name "missing_configs" doesn't conform to UPPER_CASE naming style (invalid-name)
web_app.py:1762:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1767:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1770:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1775:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:1781:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
web_app.py:7:0: C0411: third party import "yaml" should be placed before first party import "utils.logger.get_logger"  (wrong-import-order)
web_app.py:20:0: C0411: third party import "flask.Flask" should be placed before first party import "utils.logger.get_logger"  (wrong-import-order)
web_app.py:21:0: C0411: third party import "flask_wtf.csrf.CSRFProtect" should be placed before first party import "utils.logger.get_logger"  (wrong-import-order)
web_app.py:22:0: C0411: third party import "flask_login.LoginManager" should be placed before first party import "utils.logger.get_logger"  (wrong-import-order)
web_app.py:23:0: C0411: third party import "sqlalchemy.func" should be placed before first party import "utils.logger.get_logger"  (wrong-import-order)
web_app.py:14:4: C0412: Imports from package utils are not grouped (ungrouped-imports)
web_app.py:40:0: C0412: Imports from package utils are not grouped (ungrouped-imports)
web_app.py:130:4: C0412: Imports from package services are not grouped (ungrouped-imports)
web_app.py:3:0: W0611: Unused timedelta imported from datetime (unused-import)
web_app.py:22:0: W0611: Unused login_required imported from flask_login (unused-import)
web_app.py:22:0: W0611: Unused current_user imported from flask_login (unused-import)
web_app.py:23:0: W0611: Unused func imported from sqlalchemy (unused-import)
web_app.py:23:0: W0611: Unused cast imported from sqlalchemy (unused-import)
web_app.py:23:0: W0611: Unused Date imported from sqlalchemy (unused-import)
web_app.py:31:0: W0611: Unused SystemState imported from models.system_state (unused-import)
web_app.py:33:0: W0611: Unused load_configs_to_env imported from services.config_service (unused-import)
web_app.py:38:0: W0611: Unused DBStateStore imported from services.state_service (unused-import)
web_app.py:39:0: W0611: Unused check_system_status imported from services.test_service (unused-import)
************* Module run_all
run_all.py:71:0: C0301: Line too long (114/100) (line-too-long)
run_all.py:92:0: C0301: Line too long (112/100) (line-too-long)
run_all.py:170:0: C0301: Line too long (112/100) (line-too-long)
run_all.py:190:0: C0301: Line too long (107/100) (line-too-long)
run_all.py:272:0: C0301: Line too long (155/100) (line-too-long)
run_all.py:299:0: C0301: Line too long (136/100) (line-too-long)
run_all.py:307:0: C0301: Line too long (132/100) (line-too-long)
run_all.py:8:0: E0401: Unable to import 'dotenv' (import-error)
run_all.py:26:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:27:14: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
run_all.py:115:11: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:59:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:110:15: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:72:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:73:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:77:23: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:76:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:76:32: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
run_all.py:78:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:80:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:83:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:86:16: C0415: Import outside toplevel (sqlite3) (import-outside-toplevel)
run_all.py:104:23: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:101:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:103:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:105:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:111:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:116:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:37:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
run_all.py:119:0: R0914: Too many local variables (34/15) (too-many-locals)
run_all.py:322:11: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:167:19: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:146:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:147:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:147:32: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
run_all.py:159:27: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:158:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:160:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:165:24: W0702: No exception type(s) specified (bare-except)
run_all.py:168:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:171:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:172:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:176:19: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:175:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:175:28: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
run_all.py:177:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:179:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:182:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:184:12: C0415: Import outside toplevel (sqlite3) (import-outside-toplevel)
run_all.py:316:19: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:202:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:224:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:235:39: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:232:36: C0415: Import outside toplevel (pip) (import-outside-toplevel)
run_all.py:236:36: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:181:8: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
run_all.py:254:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:304:35: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:256:32: C0415: Import outside toplevel (requests) (import-outside-toplevel)
run_all.py:269:32: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
run_all.py:278:36: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:289:47: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:286:44: C0415: Import outside toplevel (pip) (import-outside-toplevel)
run_all.py:290:44: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:303:36: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:311:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:317:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:323:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:353:11: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:181:8: R1702: Too many nested blocks (9/5) (too-many-nested-blocks)
run_all.py:327:8: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
run_all.py:335:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
run_all.py:337:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:348:23: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:345:20: C0415: Import outside toplevel (pip) (import-outside-toplevel)
run_all.py:349:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:354:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:359:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:370:19: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:367:16: C0415: Import outside toplevel (pip) (import-outside-toplevel)
run_all.py:371:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:119:0: R0912: Too many branches (37/12) (too-many-branches)
run_all.py:119:0: R0915: Too many statements (156/50) (too-many-statements)
run_all.py:245:79: W0612: Unused variable 'is_active' (unused-variable)
run_all.py:416:15: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:417:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_all.py:437:19: W0718: Catching too general exception Exception (broad-exception-caught)
run_all.py:438:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module install_dependencies
install_dependencies.py:43:9: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
install_dependencies.py:116:11: W0718: Catching too general exception Exception (broad-exception-caught)
install_dependencies.py:98:12: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
install_dependencies.py:108:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
install_dependencies.py:123:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
install_dependencies.py:131:0: C0116: Missing function or method docstring (missing-function-docstring)
install_dependencies.py:151:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
install_dependencies.py:155:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
************* Module test_twitter
test_twitter.py:51:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:63:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:69:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:74:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:77:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:81:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:85:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:89:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:94:0: C0301: Line too long (121/100) (line-too-long)
test_twitter.py:95:0: C0301: Line too long (120/100) (line-too-long)
test_twitter.py:98:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:115:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:119:0: C0301: Line too long (113/100) (line-too-long)
test_twitter.py:120:0: C0301: Line too long (116/100) (line-too-long)
test_twitter.py:126:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:131:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:143:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:145:0: C0301: Line too long (119/100) (line-too-long)
test_twitter.py:147:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:148:0: C0301: Line too long (119/100) (line-too-long)
test_twitter.py:150:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:153:0: C0301: Line too long (123/100) (line-too-long)
test_twitter.py:155:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:159:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:171:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:176:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:179:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:183:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:197:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:203:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:209:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:213:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:219:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:222:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:226:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:230:0: C0303: Trailing whitespace (trailing-whitespace)
test_twitter.py:14:0: C0115: Missing class docstring (missing-class-docstring)
test_twitter.py:14:0: R0903: Too few public methods (0/2) (too-few-public-methods)
test_twitter.py:43:15: W0718: Catching too general exception Exception (broad-exception-caught)
test_twitter.py:39:12: C0415: Import outside toplevel (pip) (import-outside-toplevel)
test_twitter.py:132:11: W0718: Catching too general exception Exception (broad-exception-caught)
test_twitter.py:60:19: W0718: Catching too general exception Exception (broad-exception-caught)
test_twitter.py:57:16: C0415: Import outside toplevel (pip) (import-outside-toplevel)
test_twitter.py:76:8: E0401: Unable to import 'tweety' (import-error)
test_twitter.py:76:8: C0415: Import outside toplevel (tweety.Twitter) (import-outside-toplevel)
test_twitter.py:87:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
test_twitter.py:96:19: W0718: Catching too general exception Exception (broad-exception-caught)
test_twitter.py:123:19: W0718: Catching too general exception Exception (broad-exception-caught)
test_twitter.py:109:27: W0718: Catching too general exception Exception (broad-exception-caught)
test_twitter.py:113:31: W0718: Catching too general exception Exception (broad-exception-caught)
test_twitter.py:113:24: W0621: Redefining name 'e' from outer scope (line 109) (redefined-outer-name)
test_twitter.py:117:32: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
test_twitter.py:48:0: R0912: Too many branches (15/12) (too-many-branches)
test_twitter.py:48:0: R0915: Too many statements (61/50) (too-many-statements)
test_twitter.py:162:11: W0718: Catching too general exception Exception (broad-exception-caught)
test_twitter.py:186:11: W0718: Catching too general exception Exception (broad-exception-caught)
test_twitter.py:6:0: W0611: Unused import sys (unused-import)
************* Module run_scheduler
run_scheduler.py:111:0: C0301: Line too long (111/100) (line-too-long)
run_scheduler.py:123:0: C0301: Line too long (112/100) (line-too-long)
run_scheduler.py:137:0: C0301: Line too long (102/100) (line-too-long)
run_scheduler.py:154:0: C0301: Line too long (107/100) (line-too-long)
run_scheduler.py:7:0: E0401: Unable to import 'schedule' (import-error)
run_scheduler.py:11:0: E0401: Unable to import 'dotenv' (import-error)
run_scheduler.py:22:0: C0413: Import "from utils.logger import setup_third_party_logging" should be placed at the top of the module (wrong-import-position)
run_scheduler.py:77:11: W0718: Catching too general exception Exception (broad-exception-caught)
run_scheduler.py:68:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_scheduler.py:69:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_scheduler.py:78:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_scheduler.py:128:11: W0718: Catching too general exception Exception (broad-exception-caught)
run_scheduler.py:92:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_scheduler.py:102:12: C0415: Import outside toplevel (models.social_account.SocialAccount) (import-outside-toplevel)
run_scheduler.py:109:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_scheduler.py:110:16: C0415: Import outside toplevel (modules.socialmedia.async_utils.safe_asyncio_run) (import-outside-toplevel)
run_scheduler.py:113:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_scheduler.py:116:20: C0415: Import outside toplevel (main.process_posts_for_account) (import-outside-toplevel)
run_scheduler.py:123:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_scheduler.py:125:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_scheduler.py:129:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_scheduler.py:162:11: W0718: Catching too general exception Exception (broad-exception-caught)
run_scheduler.py:137:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_scheduler.py:147:12: C0415: Import outside toplevel (main.process_timeline_posts) (import-outside-toplevel)
run_scheduler.py:157:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_scheduler.py:163:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_scheduler.py:196:11: W0718: Catching too general exception Exception (broad-exception-caught)
run_scheduler.py:172:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_scheduler.py:173:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_scheduler.py:197:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_scheduler.py:8:0: C0411: standard import "os" should be placed before third party import "schedule" (wrong-import-order)
run_scheduler.py:9:0: C0411: standard import "subprocess" should be placed before third party import "schedule" (wrong-import-order)
run_scheduler.py:10:0: C0411: standard import "threading" should be placed before third party import "schedule" (wrong-import-order)
run_scheduler.py:12:0: C0411: standard import "sys" should be placed before third party imports "schedule", "dotenv.load_dotenv" (wrong-import-order)
run_scheduler.py:13:0: C0411: standard import "logging" should be placed before third party imports "schedule", "dotenv.load_dotenv" (wrong-import-order)
run_scheduler.py:14:0: C0411: standard import "datetime.datetime" should be placed before third party imports "schedule", "dotenv.load_dotenv" (wrong-import-order)
run_scheduler.py:30:4: C0412: Imports from package services are not grouped (ungrouped-imports)
run_scheduler.py:37:4: C0412: Imports from package web_app are not grouped (ungrouped-imports)
run_scheduler.py:9:0: W0611: Unused import subprocess (unused-import)
run_scheduler.py:14:0: W0611: Unused datetime imported from datetime (unused-import)
************* Module api.test
api/test.py:14:0: C0301: Line too long (117/100) (line-too-long)
api/test.py:79:0: C0301: Line too long (107/100) (line-too-long)
api/test.py:111:0: C0301: Line too long (107/100) (line-too-long)
api/test.py:144:0: C0301: Line too long (107/100) (line-too-long)
api/test.py:236:0: C0301: Line too long (104/100) (line-too-long)
api/test.py:241:0: C0301: Line too long (133/100) (line-too-long)
api/test.py:416:0: C0301: Line too long (111/100) (line-too-long)
api/test.py:605:0: C0301: Line too long (111/100) (line-too-long)
api/test.py:663:0: C0301: Line too long (111/100) (line-too-long)
api/test.py:754:0: C0301: Line too long (111/100) (line-too-long)
api/test.py:780:0: C0301: Line too long (110/100) (line-too-long)
api/test.py:795:0: C0301: Line too long (128/100) (line-too-long)
api/test.py:799:0: C0301: Line too long (133/100) (line-too-long)
api/test.py:892:0: C0301: Line too long (111/100) (line-too-long)
api/test.py:973:0: C0301: Line too long (138/100) (line-too-long)
api/test.py:974:0: C0301: Line too long (107/100) (line-too-long)
api/test.py:1037:0: C0301: Line too long (111/100) (line-too-long)
api/test.py:1047:0: C0301: Line too long (106/100) (line-too-long)
api/test.py:1064:0: C0301: Line too long (131/100) (line-too-long)
api/test.py:1071:0: C0301: Line too long (111/100) (line-too-long)
api/test.py:1073:0: C0301: Line too long (102/100) (line-too-long)
api/test.py:1083:0: C0301: Line too long (131/100) (line-too-long)
api/test.py:1090:0: C0301: Line too long (119/100) (line-too-long)
api/test.py:1092:0: C0301: Line too long (106/100) (line-too-long)
api/test.py:1108:0: C0301: Line too long (113/100) (line-too-long)
api/test.py:1119:0: C0301: Line too long (150/100) (line-too-long)
api/test.py:1126:0: C0301: Line too long (111/100) (line-too-long)
api/test.py:1128:0: C0301: Line too long (105/100) (line-too-long)
api/test.py:1138:0: C0301: Line too long (150/100) (line-too-long)
api/test.py:1145:0: C0301: Line too long (119/100) (line-too-long)
api/test.py:1147:0: C0301: Line too long (109/100) (line-too-long)
api/test.py:1183:0: C0301: Line too long (105/100) (line-too-long)
api/test.py:1246:0: C0301: Line too long (111/100) (line-too-long)
api/test.py:1289:0: C0301: Line too long (110/100) (line-too-long)
api/test.py:1:0: C0302: Too many lines in module (1324/1000) (too-many-lines)
api/test.py:13:0: E0401: Unable to import 'flask' (import-error)
api/test.py:33:8: W0621: Redefining name 'get_system_status' from outer scope (line 723) (redefined-outer-name)
api/test.py:47:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:33:8: C0415: Import outside toplevel (services.system_status_service.get_system_status) (import-outside-toplevel)
api/test.py:48:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:72:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:71:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:73:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:76:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:78:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:83:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:89:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:104:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:103:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:105:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:108:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:110:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:116:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:122:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:127:0: R0914: Too many local variables (18/15) (too-many-locals)
api/test.py:137:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:136:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:138:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:141:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:143:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:150:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:184:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:153:12: C0415: Import outside toplevel (services.proxy_service.get_all_proxies, services.proxy_service.test_proxy) (import-outside-toplevel)
api/test.py:154:12: C0415: Import outside toplevel (urllib.parse.urlparse) (import-outside-toplevel)
api/test.py:174:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/test.py:175:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:179:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:179:31: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
api/test.py:185:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:188:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:191:4: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
api/test.py:192:4: C0415: Import outside toplevel (utils.api_decorators.handle_api_errors) (import-outside-toplevel)
api/test.py:196:4: R0914: Too many local variables (21/15) (too-many-locals)
api/test.py:307:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:203:16: C0415: Import outside toplevel (utils.api_utils.ProxyConfig) (import-outside-toplevel)
api/test.py:204:16: C0415: Import outside toplevel (urllib.parse.urlparse) (import-outside-toplevel)
api/test.py:226:39: W0212: Access to a protected member _test_proxy of a client class (protected-access)
api/test.py:228:20: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/test.py:235:28: C0415: Import outside toplevel (requests) (import-outside-toplevel)
api/test.py:240:28: C0415: Import outside toplevel (requests) (import-outside-toplevel)
api/test.py:308:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:226:29: W0612: Unused variable 'elapsed' (unused-variable)
api/test.py:328:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:325:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:330:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:127:0: R0912: Too many branches (14/12) (too-many-branches)
api/test.py:127:0: R0915: Too many statements (90/50) (too-many-statements)
api/test.py:390:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:349:8: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
api/test.py:360:31: W0212: Access to a protected member _test_proxy of a client class (protected-access)
api/test.py:391:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:398:0: R0914: Too many local variables (24/15) (too-many-locals)
api/test.py:584:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:409:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:408:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:410:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:413:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:415:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:426:19: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:423:16: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
api/test.py:425:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:425:28: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
api/test.py:427:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:432:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:432:28: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
api/test.py:438:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:438:24: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
api/test.py:442:12: C0415: Import outside toplevel (apprise) (import-outside-toplevel)
api/test.py:463:23: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:459:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:462:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:465:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:541:19: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:494:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:504:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/test.py:526:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:534:20: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
api/test.py:536:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:543:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:547:16: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
api/test.py:549:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:585:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:398:0: R0911: Too many return statements (8/6) (too-many-return-statements)
api/test.py:398:0: R0912: Too many branches (34/12) (too-many-branches)
api/test.py:398:0: R0915: Too many statements (103/50) (too-many-statements)
api/test.py:637:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:598:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:597:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:599:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:602:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:604:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:616:12: C0415: Import outside toplevel (modules.socialmedia.twitter.generate_reply) (import-outside-toplevel)
api/test.py:624:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/test.py:638:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:718:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:656:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:655:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:657:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:660:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:662:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:672:12: C0415: Import outside toplevel (modules.bots.apprise_adapter.send_notification) (import-outside-toplevel)
api/test.py:678:8: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
api/test.py:684:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:684:24: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
api/test.py:691:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:691:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
api/test.py:698:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:701:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/test.py:719:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:645:0: R0911: Too many return statements (8/6) (too-many-return-statements)
api/test.py:736:0: R0914: Too many local variables (21/15) (too-many-locals)
api/test.py:774:12: W0621: Redefining name 'AnalysisResult' from outer scope (line 15) (redefined-outer-name)
api/test.py:866:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:747:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:746:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:748:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:751:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:753:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:768:12: C0415: Import outside toplevel (models.SocialAccount) (import-outside-toplevel)
api/test.py:774:12: W0404: Reimport 'AnalysisResult' (imported line 15) (reimported)
api/test.py:774:12: C0415: Import outside toplevel (models.AnalysisResult) (import-outside-toplevel)
api/test.py:806:12: C0415: Import outside toplevel (models.SystemConfig) (import-outside-toplevel)
api/test.py:841:12: C0415: Import outside toplevel (models.NotificationService) (import-outside-toplevel)
api/test.py:867:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:736:0: R0912: Too many branches (20/12) (too-many-branches)
api/test.py:736:0: R0915: Too many statements (58/50) (too-many-statements)
api/test.py:1004:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:885:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:884:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:886:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:889:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:891:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1005:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:874:0: R0912: Too many branches (22/12) (too-many-branches)
api/test.py:874:0: R0915: Too many statements (61/50) (too-many-statements)
api/test.py:1019:0: R0914: Too many local variables (16/15) (too-many-locals)
api/test.py:1222:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:1030:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:1029:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1031:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1034:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1036:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1047:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1049:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1073:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1092:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1095:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1105:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1110:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1128:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1147:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1150:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1158:24: C0121: Comparison 'AnalysisResult.is_relevant == False' should be 'AnalysisResult.is_relevant is False' if checking for the singleton value False, or 'not AnalysisResult.is_relevant' if testing for falsiness (singleton-comparison)
api/test.py:1161:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1166:24: C0121: Comparison 'AnalysisResult.is_relevant == False' should be 'AnalysisResult.is_relevant is False' if checking for the singleton value False, or 'not AnalysisResult.is_relevant' if testing for falsiness (singleton-comparison)
api/test.py:1169:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1177:20: C0121: Comparison 'AnalysisResult.is_relevant == False' should be 'AnalysisResult.is_relevant is False' if checking for the singleton value False, or 'not AnalysisResult.is_relevant' if testing for falsiness (singleton-comparison)
api/test.py:1180:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1183:60: C0121: Comparison 'AnalysisResult.is_relevant == False' should be 'AnalysisResult.is_relevant is False' if checking for the singleton value False, or 'not AnalysisResult.is_relevant' if testing for falsiness (singleton-comparison)
api/test.py:1185:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1190:12: E0401: Unable to import 'sqlalchemy' (import-error)
api/test.py:1190:12: C0415: Import outside toplevel (sqlalchemy.text) (import-outside-toplevel)
api/test.py:1210:15: R1714: Consider merging these comparisons with 'in' by using 'clean_type not in ('truncate', 'all_irrelevant')'. Use a set instead if elements are hashable. (consider-using-in)
api/test.py:1223:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1019:0: R0912: Too many branches (34/12) (too-many-branches)
api/test.py:1019:0: R0915: Too many statements (111/50) (too-many-statements)
api/test.py:1322:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:1239:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:1238:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1240:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1243:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1245:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1257:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1270:23: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:1267:25: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
api/test.py:1271:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1273:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1282:23: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:1283:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1285:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1303:23: W0718: Catching too general exception Exception (broad-exception-caught)
api/test.py:1299:25: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
api/test.py:1304:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1306:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1323:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/test.py:1228:0: R0912: Too many branches (16/12) (too-many-branches)
api/test.py:12:0: W0611: Unused import json (unused-import)
api/test.py:13:0: W0611: Unused current_app imported from flask (unused-import)
api/test.py:14:0: W0611: Unused test_proxy_connection imported from utils.test_utils (unused-import)
************* Module api.logs
api/logs.py:125:0: C0301: Line too long (119/100) (line-too-long)
api/logs.py:281:0: C0301: Line too long (119/100) (line-too-long)
api/logs.py:493:0: C0301: Line too long (102/100) (line-too-long)
api/logs.py:582:0: C0301: Line too long (125/100) (line-too-long)
api/logs.py:11:0: E0401: Unable to import 'flask' (import-error)
api/logs.py:35:8: W0702: No exception type(s) specified (bare-except)
api/logs.py:43:8: W0702: No exception type(s) specified (bare-except)
api/logs.py:54:8: W0702: No exception type(s) specified (bare-except)
api/logs.py:64:0: R0914: Too many local variables (22/15) (too-many-locals)
api/logs.py:241:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:101:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:108:19: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:107:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:109:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:111:16: C0415: Import outside toplevel (tempfile) (import-outside-toplevel)
api/logs.py:113:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:120:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:119:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:121:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:131:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:135:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:214:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:149:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:155:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:188:23: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:185:31: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:186:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:189:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:215:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:242:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:64:0: R0912: Too many branches (23/12) (too-many-branches)
api/logs.py:64:0: R0915: Too many statements (91/50) (too-many-statements)
api/logs.py:246:0: R0914: Too many local variables (23/15) (too-many-locals)
api/logs.py:390:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:266:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:273:19: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:272:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:274:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:276:16: C0415: Import outside toplevel (tempfile) (import-outside-toplevel)
api/logs.py:278:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:287:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:292:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:371:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:307:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:313:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:346:23: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:343:31: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:344:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:347:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:372:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:382:8: E0401: Unable to import 'flask' (import-error)
api/logs.py:382:8: C0415: Import outside toplevel (flask.Response) (import-outside-toplevel)
api/logs.py:391:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:246:0: R0912: Too many branches (22/12) (too-many-branches)
api/logs.py:246:0: R0915: Too many statements (80/50) (too-many-statements)
api/logs.py:396:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
api/logs.py:432:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:441:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:440:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:442:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:444:12: C0415: Import outside toplevel (tempfile) (import-outside-toplevel)
api/logs.py:446:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:478:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:465:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
api/logs.py:466:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
api/logs.py:467:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
api/logs.py:468:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
api/logs.py:474:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:473:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:475:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:477:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:479:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:495:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:494:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:496:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:519:0: R0914: Too many local variables (22/15) (too-many-locals)
api/logs.py:527:8: W0621: Redefining name 'glob' from outer scope (line 9) (redefined-outer-name)
api/logs.py:529:8: W0621: Redefining name 're' from outer scope (line 8) (redefined-outer-name)
api/logs.py:609:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:527:8: W0404: Reimport 'glob' (imported line 9) (reimported)
api/logs.py:527:8: C0415: Import outside toplevel (glob) (import-outside-toplevel)
api/logs.py:528:8: C0415: Import outside toplevel (time) (import-outside-toplevel)
api/logs.py:529:8: W0404: Reimport 're' (imported line 8) (reimported)
api/logs.py:529:8: C0415: Import outside toplevel (re) (import-outside-toplevel)
api/logs.py:530:8: C0415: Import outside toplevel (utils.logger.clean_old_logs) (import-outside-toplevel)
api/logs.py:544:8: C0415: Import outside toplevel (utils.logger.CORE_LOG_FILES) (import-outside-toplevel)
api/logs.py:593:23: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:592:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:594:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:610:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:530:8: W0611: Unused clean_old_logs imported from utils.logger (unused-import)
api/logs.py:614:0: R0914: Too many local variables (22/15) (too-many-locals)
api/logs.py:622:8: W0621: Redefining name 'glob' from outer scope (line 9) (redefined-outer-name)
api/logs.py:624:8: W0621: Redefining name 're' from outer scope (line 8) (redefined-outer-name)
api/logs.py:625:8: W0621: Redefining name 'datetime' from outer scope (line 10) (redefined-outer-name)
api/logs.py:739:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:622:8: W0404: Reimport 'glob' (imported line 9) (reimported)
api/logs.py:622:8: C0415: Import outside toplevel (glob) (import-outside-toplevel)
api/logs.py:623:8: C0415: Import outside toplevel (time) (import-outside-toplevel)
api/logs.py:624:8: W0404: Reimport 're' (imported line 8) (reimported)
api/logs.py:624:8: C0415: Import outside toplevel (re) (import-outside-toplevel)
api/logs.py:625:8: W0404: Reimport 'datetime' (imported line 10) (reimported)
api/logs.py:625:8: C0415: Import outside toplevel (datetime.datetime) (import-outside-toplevel)
api/logs.py:634:8: C0415: Import outside toplevel (utils.logger.CORE_LOG_FILES) (import-outside-toplevel)
api/logs.py:740:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:614:0: R0912: Too many branches (13/12) (too-many-branches)
api/logs.py:614:0: R0915: Too many statements (54/50) (too-many-statements)
api/logs.py:746:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
api/logs.py:758:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
api/logs.py:786:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/logs.py:829:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/logs.py:10:0: W0611: Unused timedelta imported from datetime (unused-import)
************* Module api.twitter
api/twitter.py:7:0: E0401: Unable to import 'flask' (import-error)
api/twitter.py:44:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/twitter.py:25:8: C0415: Import outside toplevel (modules.socialmedia.twitter_client_manager.get_twitter_manager) (import-outside-toplevel)
api/twitter.py:33:8: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
api/twitter.py:45:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/twitter.py:101:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/twitter.py:59:8: E0401: Unable to import 'flask' (import-error)
api/twitter.py:59:8: C0415: Import outside toplevel (flask.request) (import-outside-toplevel)
api/twitter.py:70:8: C0415: Import outside toplevel (modules.socialmedia.twitter_client_manager.get_twitter_manager) (import-outside-toplevel)
api/twitter.py:84:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/twitter.py:86:12: C0415: Import outside toplevel (services.config_service.set_config) (import-outside-toplevel)
api/twitter.py:87:70: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
api/twitter.py:102:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/twitter.py:143:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/twitter.py:117:8: C0415: Import outside toplevel (modules.socialmedia.twitter_client_manager.get_twitter_manager) (import-outside-toplevel)
api/twitter.py:121:8: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
api/twitter.py:130:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/twitter.py:144:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/twitter.py:223:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/twitter.py:159:8: C0415: Import outside toplevel (modules.socialmedia.twitter_client_manager.get_twitter_manager) (import-outside-toplevel)
api/twitter.py:175:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/twitter.py:171:12: C0415: Import outside toplevel (modules.socialmedia.twitter) (import-outside-toplevel)
api/twitter.py:176:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/twitter.py:179:8: C0415: Import outside toplevel (os) (import-outside-toplevel)
api/twitter.py:186:23: W0718: Catching too general exception Exception (broad-exception-caught)
api/twitter.py:185:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/twitter.py:187:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/twitter.py:197:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/twitter.py:191:12: C0415: Import outside toplevel (utils.redisClient.redis_client) (import-outside-toplevel)
api/twitter.py:196:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/twitter.py:198:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/twitter.py:201:8: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
api/twitter.py:210:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/twitter.py:224:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/twitter.py:7:0: W0611: Unused jsonify imported from flask (unused-import)
api/twitter.py:7:0: W0611: Unused session imported from flask (unused-import)
************* Module api.analytics
api/analytics.py:11:0: C0301: Line too long (101/100) (line-too-long)
api/analytics.py:56:0: C0301: Line too long (133/100) (line-too-long)
api/analytics.py:57:0: C0301: Line too long (148/100) (line-too-long)
api/analytics.py:58:0: C0301: Line too long (161/100) (line-too-long)
api/analytics.py:61:0: C0301: Line too long (103/100) (line-too-long)
api/analytics.py:62:0: C0301: Line too long (117/100) (line-too-long)
api/analytics.py:63:0: C0301: Line too long (129/100) (line-too-long)
api/analytics.py:143:0: C0301: Line too long (110/100) (line-too-long)
api/analytics.py:192:0: C0301: Line too long (101/100) (line-too-long)
api/analytics.py:355:0: C0301: Line too long (104/100) (line-too-long)
api/analytics.py:371:0: C0301: Line too long (113/100) (line-too-long)
api/analytics.py:372:0: C0301: Line too long (113/100) (line-too-long)
api/analytics.py:459:0: C0301: Line too long (109/100) (line-too-long)
api/analytics.py:464:0: C0301: Line too long (111/100) (line-too-long)
api/analytics.py:511:0: C0301: Line too long (142/100) (line-too-long)
api/analytics.py:520:0: C0301: Line too long (106/100) (line-too-long)
api/analytics.py:540:0: C0301: Line too long (141/100) (line-too-long)
api/analytics.py:547:0: C0301: Line too long (142/100) (line-too-long)
api/analytics.py:568:0: C0301: Line too long (120/100) (line-too-long)
api/analytics.py:591:0: C0301: Line too long (149/100) (line-too-long)
api/analytics.py:597:0: C0301: Line too long (140/100) (line-too-long)
api/analytics.py:601:0: C0301: Line too long (119/100) (line-too-long)
api/analytics.py:11:0: E0401: Unable to import 'flask' (import-error)
api/analytics.py:12:0: E0401: Unable to import 'sqlalchemy' (import-error)
api/analytics.py:22:0: R0914: Too many local variables (44/15) (too-many-locals)
api/analytics.py:220:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/analytics.py:47:12: C0121: Comparison 'AnalysisResult.is_relevant == True' should be 'AnalysisResult.is_relevant is True' if checking for the singleton value True, or 'bool(AnalysisResult.is_relevant)' if testing for truthiness (singleton-comparison)
api/analytics.py:221:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/analytics.py:229:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/analytics.py:22:0: R0915: Too many statements (59/50) (too-many-statements)
api/analytics.py:244:0: R0914: Too many local variables (19/15) (too-many-locals)
api/analytics.py:330:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/analytics.py:262:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/analytics.py:331:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/analytics.py:380:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/analytics.py:381:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/analytics.py:385:0: R0914: Too many local variables (21/15) (too-many-locals)
api/analytics.py:553:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/analytics.py:456:8: C0206: Consider iterating with .items() (consider-using-dict-items)
api/analytics.py:461:8: C0206: Consider iterating with .items() (consider-using-dict-items)
api/analytics.py:507:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
api/analytics.py:554:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/analytics.py:385:0: R0912: Too many branches (22/12) (too-many-branches)
api/analytics.py:385:0: R0915: Too many statements (65/50) (too-many-statements)
api/analytics.py:395:8: W0612: Unused variable 'include_charts' (unused-variable)
api/analytics.py:658:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/analytics.py:591:11: R0916: Too many boolean expressions in if statement (6/5) (too-many-boolean-expressions)
api/analytics.py:619:19: W0718: Catching too general exception Exception (broad-exception-caught)
api/analytics.py:594:16: C0415: Import outside toplevel (models.ai_provider.AIProvider) (import-outside-toplevel)
api/analytics.py:612:20: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
api/analytics.py:620:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/analytics.py:649:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/analytics.py:660:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/analytics.py:558:0: R0912: Too many branches (18/12) (too-many-branches)
api/analytics.py:11:0: W0611: Unused current_app imported from flask (unused-import)
api/analytics.py:11:0: W0611: Unused Response imported from flask (unused-import)
api/analytics.py:12:0: W0611: Unused cast imported from sqlalchemy (unused-import)
api/analytics.py:12:0: W0611: Unused Date imported from sqlalchemy (unused-import)
************* Module api.media
api/media.py:30:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:32:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:35:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:40:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:47:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:49:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:56:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:70:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:72:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:79:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:84:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:90:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:95:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:99:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:103:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:106:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:132:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:135:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:142:0: C0303: Trailing whitespace (trailing-whitespace)
api/media.py:8:0: E0401: Unable to import 'flask' (import-error)
api/media.py:9:0: E0401: Unable to import 'flask_login' (import-error)
api/media.py:10:0: E0401: Unable to import 'werkzeug.utils' (import-error)
api/media.py:50:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
api/media.py:114:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/media.py:107:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/media.py:115:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/media.py:146:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/media.py:147:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/media.py:11:0: C0411: standard import "logging" should be placed before third party imports "flask.Blueprint", "flask_login.login_required", "werkzeug.utils.secure_filename" (wrong-import-order)
************* Module api.utils
api/utils.py:9:0: E0401: Unable to import 'flask' (import-error)
api/utils.py:68:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/utils.py:70:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/utils.py:71:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/utils.py:72:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/utils.py:73:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/utils.py:74:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/utils.py:75:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/utils.py:78:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/utils.py:113:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/utils.py:137:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/utils.py:158:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/utils.py:13:4: W0611: Unused ErrorTypes imported from utils.error_types (unused-import)
api/utils.py:13:4: W0611: Unused is_retryable_error imported from utils.error_types (unused-import)
************* Module api
api/__init__.py:6:0: E0401: Unable to import 'flask' (import-error)
api/__init__.py:20:0: C0413: Import "from .system import system_api" should be placed at the top of the module (wrong-import-position)
api/__init__.py:23:0: C0413: Import "from .settings import settings_api" should be placed at the top of the module (wrong-import-position)
api/__init__.py:24:0: C0413: Import "from .test import test_api" should be placed at the top of the module (wrong-import-position)
api/__init__.py:25:0: C0413: Import "from .accounts import accounts_api" should be placed at the top of the module (wrong-import-position)
api/__init__.py:26:0: C0413: Import "from .analytics import analytics_api" should be placed at the top of the module (wrong-import-position)
api/__init__.py:27:0: C0413: Import "from .logs import logs_api" should be placed at the top of the module (wrong-import-position)
api/__init__.py:28:0: C0413: Import "from .notifications import notifications_api" should be placed at the top of the module (wrong-import-position)
api/__init__.py:29:0: C0413: Import "from .tasks import tasks_api" should be placed at the top of the module (wrong-import-position)
api/__init__.py:30:0: C0413: Import "from .ai_provider import ai_provider_bp" should be placed at the top of the module (wrong-import-position)
api/__init__.py:31:0: C0413: Import "from .proxy import proxy_api" should be placed at the top of the module (wrong-import-position)
api/__init__.py:32:0: C0413: Import "from .twitter import twitter_api" should be placed at the top of the module (wrong-import-position)
************* Module api.accounts
api/accounts.py:7:0: E0401: Unable to import 'flask' (import-error)
api/accounts.py:32:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/accounts.py:33:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:57:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/accounts.py:58:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:96:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/accounts.py:74:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:79:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:81:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:87:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:89:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:97:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:101:0: R0914: Too many local variables (16/15) (too-many-locals)
api/accounts.py:168:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/accounts.py:161:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:170:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:247:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/accounts.py:186:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:191:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:193:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:199:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:201:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:240:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:249:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:174:0: R0912: Too many branches (21/12) (too-many-branches)
api/accounts.py:174:0: R0915: Too many statements (51/50) (too-many-statements)
api/accounts.py:299:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/accounts.py:265:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:270:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:272:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:278:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:280:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:293:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:301:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:404:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/accounts.py:315:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:320:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:324:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:334:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/accounts.py:329:12: C0415: Import outside toplevel (utils.redisClient.redis_client) (import-outside-toplevel)
api/accounts.py:333:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:335:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:381:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/accounts.py:343:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:346:16: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
api/accounts.py:382:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:392:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:398:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:405:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:305:0: R0911: Too many return statements (13/6) (too-many-return-statements)
api/accounts.py:305:0: R0912: Too many branches (14/12) (too-many-branches)
api/accounts.py:423:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/accounts.py:424:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/accounts.py:7:0: W0611: Unused current_app imported from flask (unused-import)
************* Module api.system
api/system.py:7:0: E0401: Unable to import 'flask' (import-error)
api/system.py:25:8: W0621: Redefining name 'get_system_status' from outer scope (line 19) (redefined-outer-name)
api/system.py:63:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/system.py:25:8: C0415: Import outside toplevel (services.system_status_service.get_system_status) (import-outside-toplevel)
api/system.py:64:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module api.settings
api/settings.py:38:0: C0301: Line too long (111/100) (line-too-long)
api/settings.py:59:0: C0301: Line too long (105/100) (line-too-long)
api/settings.py:68:0: C0301: Line too long (101/100) (line-too-long)
api/settings.py:75:0: C0301: Line too long (114/100) (line-too-long)
api/settings.py:102:0: C0301: Line too long (111/100) (line-too-long)
api/settings.py:109:0: C0301: Line too long (104/100) (line-too-long)
api/settings.py:112:0: C0301: Line too long (105/100) (line-too-long)
api/settings.py:142:0: C0301: Line too long (111/100) (line-too-long)
api/settings.py:154:0: C0301: Line too long (101/100) (line-too-long)
api/settings.py:158:0: C0301: Line too long (101/100) (line-too-long)
api/settings.py:249:0: C0301: Line too long (111/100) (line-too-long)
api/settings.py:292:0: C0301: Line too long (111/100) (line-too-long)
api/settings.py:378:0: C0301: Line too long (111/100) (line-too-long)
api/settings.py:420:0: C0301: Line too long (111/100) (line-too-long)
api/settings.py:432:0: C0301: Line too long (116/100) (line-too-long)
api/settings.py:435:0: C0301: Line too long (104/100) (line-too-long)
api/settings.py:438:0: C0301: Line too long (125/100) (line-too-long)
api/settings.py:459:0: C0301: Line too long (116/100) (line-too-long)
api/settings.py:461:0: C0301: Line too long (105/100) (line-too-long)
api/settings.py:464:0: C0301: Line too long (121/100) (line-too-long)
api/settings.py:466:0: C0301: Line too long (115/100) (line-too-long)
api/settings.py:503:0: C0301: Line too long (111/100) (line-too-long)
api/settings.py:681:0: C0301: Line too long (117/100) (line-too-long)
api/settings.py:9:0: E0401: Unable to import 'flask' (import-error)
api/settings.py:79:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:31:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:30:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:32:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:35:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:37:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:53:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:60:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:69:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:76:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:80:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:20:0: R0911: Too many return statements (8/6) (too-many-return-statements)
api/settings.py:20:0: R0912: Too many branches (13/12) (too-many-branches)
api/settings.py:119:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:95:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:94:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:96:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:99:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:101:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:116:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:120:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:192:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:135:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:134:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:136:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:139:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:141:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:160:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:188:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:164:12: C0415: Import outside toplevel (modules.socialmedia.twitter_client_manager.get_twitter_manager) (import-outside-toplevel)
api/settings.py:184:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:189:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:193:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:124:0: R0912: Too many branches (13/12) (too-many-branches)
api/settings.py:213:8: W0621: Redefining name 'get_config' from outer scope (line 10) (redefined-outer-name)
api/settings.py:223:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:205:8: C0415: Import outside toplevel (modules.socialmedia.twitter_client_manager.get_twitter_manager) (import-outside-toplevel)
api/settings.py:213:8: W0404: Reimport 'get_config' (imported line 10) (reimported)
api/settings.py:213:8: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
api/settings.py:224:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:269:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:242:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:241:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:243:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:246:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:248:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:266:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:270:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:274:0: R0914: Too many local variables (16/15) (too-many-locals)
api/settings.py:355:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:285:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:284:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:286:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:289:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:291:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:341:19: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:303:16: C0415: Import outside toplevel (services.proxy_service.create_proxy, services.proxy_service.get_all_proxies) (import-outside-toplevel)
api/settings.py:304:16: C0415: Import outside toplevel (urllib.parse.urlparse) (import-outside-toplevel)
api/settings.py:338:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:342:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:349:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:346:12: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
api/settings.py:350:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:352:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:356:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:274:0: R0912: Too many branches (13/12) (too-many-branches)
api/settings.py:397:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:371:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:370:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:372:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:375:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:377:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:389:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:398:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:480:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:413:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:412:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:414:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:417:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:419:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:466:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:481:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:402:0: R0911: Too many return statements (8/6) (too-many-return-statements)
api/settings.py:565:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:496:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:495:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:497:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:500:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:502:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:534:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:547:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:550:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/settings.py:567:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:485:0: R0911: Too many return statements (10/6) (too-many-return-statements)
api/settings.py:485:0: R0912: Too many branches (15/12) (too-many-branches)
api/settings.py:585:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:586:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:607:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:608:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:656:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:650:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:658:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:721:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:715:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:723:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:662:0: R0912: Too many branches (14/12) (too-many-branches)
api/settings.py:767:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/settings.py:741:8: C0415: Import outside toplevel (models.social_account.SocialAccount) (import-outside-toplevel)
api/settings.py:762:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:769:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/settings.py:6:0: W0611: Unused import os (unused-import)
api/settings.py:7:0: W0611: Unused import json (unused-import)
api/settings.py:9:0: W0611: Unused current_app imported from flask (unused-import)
************* Module api.notifications
api/notifications.py:56:0: C0301: Line too long (117/100) (line-too-long)
api/notifications.py:8:0: E0401: Unable to import 'flask' (import-error)
api/notifications.py:76:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/notifications.py:77:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/notifications.py:8:0: W0611: Unused current_app imported from flask (unused-import)
api/notifications.py:9:0: W0611: Unused db imported from models (unused-import)
************* Module api.tasks
api/tasks.py:162:0: C0301: Line too long (134/100) (line-too-long)
api/tasks.py:252:0: C0301: Line too long (114/100) (line-too-long)
api/tasks.py:298:0: C0301: Line too long (156/100) (line-too-long)
api/tasks.py:383:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
api/tasks.py:10:0: E0401: Unable to import 'flask' (import-error)
api/tasks.py:54:0: R0914: Too many local variables (18/15) (too-many-locals)
api/tasks.py:61:4: W0602: Using global for 'task_status' but no assignment is done (global-variable-not-assigned)
api/tasks.py:64:10: W0212: Access to a protected member _get_current_object of a client class (protected-access)
api/tasks.py:181:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/tasks.py:126:23: W0718: Catching too general exception Exception (broad-exception-caught)
api/tasks.py:87:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/tasks.py:92:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/tasks.py:112:20: C0415: Import outside toplevel (main) (import-outside-toplevel)
api/tasks.py:125:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/tasks.py:127:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/tasks.py:163:23: W0718: Catching too general exception Exception (broad-exception-caught)
api/tasks.py:140:20: C0415: Import outside toplevel (main) (import-outside-toplevel)
api/tasks.py:147:20: C0415: Import outside toplevel (models.analysis_result.AnalysisResult) (import-outside-toplevel)
api/tasks.py:164:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/tasks.py:179:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/tasks.py:176:12: C0415: Import outside toplevel (utils.redisClient.redis_client) (import-outside-toplevel)
api/tasks.py:180:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/tasks.py:182:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/tasks.py:54:0: R0915: Too many statements (75/50) (too-many-statements)
api/tasks.py:219:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/tasks.py:237:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/tasks.py:224:12: C0415: Import outside toplevel (utils.redisClient.redis_client) (import-outside-toplevel)
api/tasks.py:230:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/tasks.py:236:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/tasks.py:238:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/tasks.py:259:4: W0602: Using global for 'timeline_task_status' but no assignment is done (global-variable-not-assigned)
api/tasks.py:262:10: W0212: Access to a protected member _get_current_object of a client class (protected-access)
api/tasks.py:317:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/tasks.py:299:19: W0718: Catching too general exception Exception (broad-exception-caught)
api/tasks.py:281:16: C0415: Import outside toplevel (main) (import-outside-toplevel)
api/tasks.py:284:16: C0415: Import outside toplevel (models.analysis_result.AnalysisResult) (import-outside-toplevel)
api/tasks.py:300:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/tasks.py:315:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/tasks.py:312:12: C0415: Import outside toplevel (utils.redisClient.redis_client) (import-outside-toplevel)
api/tasks.py:316:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/tasks.py:318:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/tasks.py:342:8: W0612: Unused variable 'data' (unused-variable)
api/tasks.py:370:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
api/tasks.py:383:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
api/tasks.py:427:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/tasks.py:421:8: C0415: Import outside toplevel (utils.redisClient.redis_client) (import-outside-toplevel)
api/tasks.py:428:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/tasks.py:10:0: W0611: Unused jsonify imported from flask (unused-import)
api/tasks.py:10:0: W0611: Unused session imported from flask (unused-import)
api/tasks.py:13:0: W0611: Unused db imported from models (unused-import)
api/tasks.py:14:0: W0611: Unused validate_json_request imported from api.utils (unused-import)
************* Module api.proxy
api/proxy.py:7:0: E0401: Unable to import 'flask' (import-error)
api/proxy.py:39:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/proxy.py:57:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/proxy.py:101:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/proxy.py:126:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/proxy.py:153:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/proxy.py:172:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/proxy.py:7:0: W0611: Unused jsonify imported from flask (unused-import)
api/proxy.py:7:0: W0611: Unused session imported from flask (unused-import)
************* Module api.ai_provider
api/ai_provider.py:5:0: E0401: Unable to import 'flask' (import-error)
api/ai_provider.py:6:0: E0401: Unable to import 'flask_login' (import-error)
api/ai_provider.py:8:0: E0401: Unable to import 'flask' (import-error)
api/ai_provider.py:27:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/ai_provider.py:28:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/ai_provider.py:50:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/ai_provider.py:51:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/ai_provider.py:104:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/ai_provider.py:98:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/ai_provider.py:106:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/ai_provider.py:165:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/ai_provider.py:159:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/ai_provider.py:167:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/ai_provider.py:114:0: R0912: Too many branches (14/12) (too-many-branches)
api/ai_provider.py:211:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/ai_provider.py:186:8: C0415: Import outside toplevel (models.social_account.SocialAccount) (import-outside-toplevel)
api/ai_provider.py:206:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/ai_provider.py:213:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/ai_provider.py:8:0: C0411: third party import "flask.current_app" should be placed before first party import "models.ai_provider.AIProvider"  (wrong-import-order)
api/ai_provider.py:9:0: C0411: standard import "logging" should be placed before third party imports "flask.Blueprint", "flask_login.login_required", "flask.current_app" and first party import "models.ai_provider.AIProvider"  (wrong-import-order)
api/ai_provider.py:8:0: C0412: Imports from package flask are not grouped (ungrouped-imports)
************* Module modules.bots.apprise_adapter_queue
modules/bots/apprise_adapter_queue.py:165:0: C0301: Line too long (134/100) (line-too-long)
modules/bots/apprise_adapter_queue.py:43:0: R0913: Too many arguments (8/5) (too-many-arguments)
modules/bots/apprise_adapter_queue.py:43:0: R0917: Too many positional arguments (8/5) (too-many-positional-arguments)
modules/bots/apprise_adapter_queue.py:70:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:134:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter_queue.py:87:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/bots/apprise_adapter_queue.py:90:16: C0415: Import outside toplevel (web_app.app) (import-outside-toplevel)
modules/bots/apprise_adapter_queue.py:104:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:110:27: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter_queue.py:109:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:111:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:113:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:116:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:124:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/bots/apprise_adapter_queue.py:139:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:140:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:43:0: R0912: Too many branches (13/12) (too-many-branches)
modules/bots/apprise_adapter_queue.py:165:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:225:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter_queue.py:181:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/bots/apprise_adapter_queue.py:184:16: C0415: Import outside toplevel (web_app.app) (import-outside-toplevel)
modules/bots/apprise_adapter_queue.py:196:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:202:27: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter_queue.py:201:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:203:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:205:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:208:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:216:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/bots/apprise_adapter_queue.py:230:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:231:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter_queue.py:236:4: C0412: Imports from package utils are not grouped (ungrouped-imports)
modules/bots/apprise_adapter_queue.py:6:0: W0611: Unused import os (unused-import)
************* Module modules.bots.apprise_adapter
modules/bots/apprise_adapter.py:110:0: C0301: Line too long (190/100) (line-too-long)
modules/bots/apprise_adapter.py:338:0: C0301: Line too long (108/100) (line-too-long)
modules/bots/apprise_adapter.py:483:0: C0301: Line too long (128/100) (line-too-long)
modules/bots/apprise_adapter.py:571:0: C0301: Line too long (109/100) (line-too-long)
modules/bots/apprise_adapter.py:680:0: C0301: Line too long (114/100) (line-too-long)
modules/bots/apprise_adapter.py:715:0: C0301: Line too long (104/100) (line-too-long)
modules/bots/apprise_adapter.py:993:0: C0301: Line too long (133/100) (line-too-long)
modules/bots/apprise_adapter.py:999:0: C0301: Line too long (110/100) (line-too-long)
modules/bots/apprise_adapter.py:1192:0: C0301: Line too long (101/100) (line-too-long)
modules/bots/apprise_adapter.py:1211:0: C0301: Line too long (105/100) (line-too-long)
modules/bots/apprise_adapter.py:1217:0: C0301: Line too long (111/100) (line-too-long)
modules/bots/apprise_adapter.py:1221:0: C0301: Line too long (104/100) (line-too-long)
modules/bots/apprise_adapter.py:1223:0: C0301: Line too long (121/100) (line-too-long)
modules/bots/apprise_adapter.py:1227:0: C0301: Line too long (110/100) (line-too-long)
modules/bots/apprise_adapter.py:1229:0: C0301: Line too long (127/100) (line-too-long)
modules/bots/apprise_adapter.py:1237:0: C0301: Line too long (105/100) (line-too-long)
modules/bots/apprise_adapter.py:1242:0: C0301: Line too long (111/100) (line-too-long)
modules/bots/apprise_adapter.py:1253:0: C0301: Line too long (116/100) (line-too-long)
modules/bots/apprise_adapter.py:1336:0: C0301: Line too long (120/100) (line-too-long)
modules/bots/apprise_adapter.py:1:0: C0302: Too many lines in module (1471/1000) (too-many-lines)
modules/bots/apprise_adapter.py:1:0: C0114: Missing module docstring (missing-module-docstring)
modules/bots/apprise_adapter.py:2:0: E0401: Unable to import 'apprise' (import-error)
modules/bots/apprise_adapter.py:21:0: C0103: Constant name "apobj" doesn't conform to UPPER_CASE naming style (invalid-name)
modules/bots/apprise_adapter.py:32:0: R0914: Too many local variables (17/15) (too-many-locals)
modules/bots/apprise_adapter.py:36:4: W0603: Using the global statement (global-statement)
modules/bots/apprise_adapter.py:78:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:59:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:59:36: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/bots/apprise_adapter.py:70:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:77:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:77:28: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/bots/apprise_adapter.py:79:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:181:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:84:8: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
modules/bots/apprise_adapter.py:88:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:88:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/bots/apprise_adapter.py:96:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:102:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:162:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:111:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:115:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:123:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:126:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:82:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
modules/bots/apprise_adapter.py:149:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:156:31: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:153:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:157:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:82:4: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
modules/bots/apprise_adapter.py:161:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:163:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:170:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/bots/apprise_adapter.py:171:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:171:24: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/bots/apprise_adapter.py:173:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:182:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:32:0: R0912: Too many branches (21/12) (too-many-branches)
modules/bots/apprise_adapter.py:32:0: R0915: Too many statements (83/50) (too-many-statements)
modules/bots/apprise_adapter.py:217:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:193:8: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
modules/bots/apprise_adapter.py:201:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/bots/apprise_adapter.py:211:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:218:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:250:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:230:21: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
modules/bots/apprise_adapter.py:248:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:251:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:266:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:266:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/bots/apprise_adapter.py:267:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:268:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:269:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:270:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:187:0: R0912: Too many branches (15/12) (too-many-branches)
modules/bots/apprise_adapter.py:187:0: R0915: Too many statements (56/50) (too-many-statements)
modules/bots/apprise_adapter.py:311:21: W0613: Unused argument 'url' (unused-argument)
modules/bots/apprise_adapter.py:315:4: R0912: Too many branches (19/12) (too-many-branches)
modules/bots/apprise_adapter.py:410:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:422:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:422:35: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/bots/apprise_adapter.py:426:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:375:4: R0912: Too many branches (13/12) (too-many-branches)
modules/bots/apprise_adapter.py:441:4: W0602: Using global for 'apobj' but no assignment is done (global-variable-not-assigned)
modules/bots/apprise_adapter.py:451:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:452:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:463:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:464:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:477:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:478:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:434:0: R0911: Too many return statements (7/6) (too-many-return-statements)
modules/bots/apprise_adapter.py:483:0: R0913: Too many arguments (8/5) (too-many-arguments)
modules/bots/apprise_adapter.py:483:0: R0917: Too many positional arguments (8/5) (too-many-positional-arguments)
modules/bots/apprise_adapter.py:483:0: R0914: Too many local variables (32/15) (too-many-locals)
modules/bots/apprise_adapter.py:564:20: W0621: Redefining name 'result' from outer scope (line 1470) (redefined-outer-name)
modules/bots/apprise_adapter.py:500:4: W0602: Using global for 'apobj' but no assignment is done (global-variable-not-assigned)
modules/bots/apprise_adapter.py:500:4: W0602: Using global for 'latest_tweet' but no assignment is done (global-variable-not-assigned)
modules/bots/apprise_adapter.py:506:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:580:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:533:12: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
modules/bots/apprise_adapter.py:537:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:537:24: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/bots/apprise_adapter.py:541:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:550:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:558:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:570:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:567:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:569:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:571:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:574:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/bots/apprise_adapter.py:575:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:578:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:581:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:592:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:600:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:931:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:628:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:907:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:636:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:688:27: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:686:31: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:665:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:681:43: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:676:51: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:674:48: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:677:48: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:680:40: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:682:40: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:687:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:689:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:734:27: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:609:4: R1702: Too many nested blocks (11/5) (too-many-nested-blocks)
modules/bots/apprise_adapter.py:699:28: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
modules/bots/apprise_adapter.py:725:47: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:717:55: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:715:52: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:718:52: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:609:4: R1702: Too many nested blocks (12/5) (too-many-nested-blocks)
modules/bots/apprise_adapter.py:722:48: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:724:48: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:726:44: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:730:28: W0707: Consider explicitly re-raising using 'except TypeError as exc' and 'raise TypeError('servers_attr不是可迭代对象') from exc' (raise-missing-from)
modules/bots/apprise_adapter.py:732:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:735:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:609:4: R1702: Too many nested blocks (11/5) (too-many-nested-blocks)
modules/bots/apprise_adapter.py:754:39: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:753:36: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:755:36: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:764:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:771:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:773:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:784:36: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
modules/bots/apprise_adapter.py:797:36: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:802:36: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:811:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:826:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:834:43: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:833:40: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:835:40: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:845:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:845:36: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/bots/apprise_adapter.py:852:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:854:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:857:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/bots/apprise_adapter.py:858:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:869:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:881:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:891:31: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:887:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:892:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:899:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:904:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:903:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:905:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:908:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:916:27: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:915:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:917:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:919:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:932:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:483:0: R0911: Too many return statements (7/6) (too-many-return-statements)
modules/bots/apprise_adapter.py:483:0: R0912: Too many branches (75/12) (too-many-branches)
modules/bots/apprise_adapter.py:483:0: R0915: Too many statements (237/50) (too-many-statements)
modules/bots/apprise_adapter.py:1039:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:965:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:981:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:981:32: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/bots/apprise_adapter.py:993:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1001:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1011:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1017:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/bots/apprise_adapter.py:1018:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1029:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1040:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:935:0: R0912: Too many branches (14/12) (too-many-branches)
modules/bots/apprise_adapter.py:1043:0: R0914: Too many local variables (20/15) (too-many-locals)
modules/bots/apprise_adapter.py:1164:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:1061:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1061:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/bots/apprise_adapter.py:1107:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1108:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1130:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:1114:12: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
modules/bots/apprise_adapter.py:1125:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1131:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1141:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1155:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/bots/apprise_adapter.py:1156:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1159:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1162:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1165:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1043:0: R0912: Too many branches (14/12) (too-many-branches)
modules/bots/apprise_adapter.py:1043:0: R0915: Too many statements (56/50) (too-many-statements)
modules/bots/apprise_adapter.py:1168:0: R0913: Too many arguments (6/5) (too-many-arguments)
modules/bots/apprise_adapter.py:1168:0: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
modules/bots/apprise_adapter.py:1168:0: R0914: Too many local variables (26/15) (too-many-locals)
modules/bots/apprise_adapter.py:1345:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:1188:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1188:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/bots/apprise_adapter.py:1192:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1197:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1244:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:1206:12: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
modules/bots/apprise_adapter.py:1212:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1218:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1224:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1230:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1238:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1243:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1245:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1254:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:1249:12: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
modules/bots/apprise_adapter.py:1255:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1271:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1271:24: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/bots/apprise_adapter.py:1282:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1282:24: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/bots/apprise_adapter.py:1290:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1305:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1306:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1315:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1338:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:1329:20: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/bots/apprise_adapter.py:1330:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1333:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1336:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1339:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1343:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1343:21: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/bots/apprise_adapter.py:1346:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1168:0: R0912: Too many branches (25/12) (too-many-branches)
modules/bots/apprise_adapter.py:1168:0: R0915: Too many statements (88/50) (too-many-statements)
modules/bots/apprise_adapter.py:1434:8: W0621: Redefining name 'result' from outer scope (line 1470) (redefined-outer-name)
modules/bots/apprise_adapter.py:1374:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1383:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1383:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/bots/apprise_adapter.py:1424:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:1411:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1416:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1422:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1425:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1446:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/bots/apprise_adapter.py:1440:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/bots/apprise_adapter.py:1441:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1444:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1447:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/bots/apprise_adapter.py:1360:0: R0911: Too many return statements (9/6) (too-many-return-statements)
modules/bots/apprise_adapter.py:1470:4: C0103: Constant name "result" doesn't conform to UPPER_CASE naming style (invalid-name)
modules/bots/apprise_adapter.py:3:0: C0411: standard import "logging" should be placed before third party import "apprise" (wrong-import-order)
modules/bots/apprise_adapter.py:5:0: C0411: standard import "json" should be placed before third party imports "apprise", "requests" (wrong-import-order)
modules/bots/apprise_adapter.py:6:0: C0411: standard import "re" should be placed before third party imports "apprise", "requests" (wrong-import-order)
modules/bots/apprise_adapter.py:7:0: C0411: standard import "time" should be placed before third party imports "apprise", "requests" (wrong-import-order)
modules/bots/apprise_adapter.py:279:4: W0611: Unused validate_url imported from utils.url_utils (unused-import)
************* Module modules.langchain.ai_logger
modules/langchain/ai_logger.py:46:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:56:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:57:0: C0301: Line too long (121/100) (line-too-long)
modules/langchain/ai_logger.py:59:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:61:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:76:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:80:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:89:0: C0301: Line too long (128/100) (line-too-long)
modules/langchain/ai_logger.py:92:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:96:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:100:0: C0301: Line too long (101/100) (line-too-long)
modules/langchain/ai_logger.py:103:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:105:0: C0301: Line too long (195/100) (line-too-long)
modules/langchain/ai_logger.py:107:0: C0301: Line too long (107/100) (line-too-long)
modules/langchain/ai_logger.py:108:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:110:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:114:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:115:0: C0301: Line too long (102/100) (line-too-long)
modules/langchain/ai_logger.py:136:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:138:0: C0301: Line too long (123/100) (line-too-long)
modules/langchain/ai_logger.py:140:0: C0301: Line too long (124/100) (line-too-long)
modules/langchain/ai_logger.py:141:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:143:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:153:0: C0301: Line too long (102/100) (line-too-long)
modules/langchain/ai_logger.py:154:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:168:0: C0303: Trailing whitespace (trailing-whitespace)
modules/langchain/ai_logger.py:57:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/ai_logger.py:58:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/ai_logger.py:62:4: R0913: Too many arguments (6/5) (too-many-arguments)
modules/langchain/ai_logger.py:62:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
modules/langchain/ai_logger.py:100:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/ai_logger.py:102:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/ai_logger.py:105:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/ai_logger.py:107:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/ai_logger.py:109:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/ai_logger.py:115:4: R0913: Too many arguments (7/5) (too-many-arguments)
modules/langchain/ai_logger.py:115:4: R0917: Too many positional arguments (7/5) (too-many-positional-arguments)
modules/langchain/ai_logger.py:138:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/ai_logger.py:140:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/ai_logger.py:142:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/ai_logger.py:153:8: W1201: Use lazy % formatting in logging functions (logging-not-lazy)
modules/langchain/ai_logger.py:180:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/ai_logger.py:182:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/ai_logger.py:6:0: W0611: Unused import os (unused-import)
modules/langchain/ai_logger.py:9:0: W0611: Unused import logging (unused-import)
************* Module modules.langchain.llm
modules/langchain/llm.py:116:0: C0301: Line too long (107/100) (line-too-long)
modules/langchain/llm.py:171:0: C0301: Line too long (102/100) (line-too-long)
modules/langchain/llm.py:424:0: C0301: Line too long (128/100) (line-too-long)
modules/langchain/llm.py:541:0: C0301: Line too long (144/100) (line-too-long)
modules/langchain/llm.py:587:0: C0301: Line too long (110/100) (line-too-long)
modules/langchain/llm.py:619:0: C0301: Line too long (113/100) (line-too-long)
modules/langchain/llm.py:684:0: C0301: Line too long (140/100) (line-too-long)
modules/langchain/llm.py:730:0: C0301: Line too long (106/100) (line-too-long)
modules/langchain/llm.py:772:0: C0301: Line too long (112/100) (line-too-long)
modules/langchain/llm.py:800:0: C0301: Line too long (128/100) (line-too-long)
modules/langchain/llm.py:901:0: C0301: Line too long (137/100) (line-too-long)
modules/langchain/llm.py:1:0: C0114: Missing module docstring (missing-module-docstring)
modules/langchain/llm.py:1:0: E0401: Unable to import 'dotenv' (import-error)
modules/langchain/llm.py:10:0: E0401: Unable to import 'langchain_openai' (import-error)
modules/langchain/llm.py:11:0: E0401: Unable to import 'langchain_core.messages' (import-error)
modules/langchain/llm.py:28:4: C0103: Constant name "_use_proxy_manager" doesn't conform to UPPER_CASE naming style (invalid-name)
modules/langchain/llm.py:31:4: C0103: Constant name "_use_proxy_manager" doesn't conform to UPPER_CASE naming style (invalid-name)
modules/langchain/llm.py:39:4: W0107: Unnecessary pass statement (unnecessary-pass)
modules/langchain/llm.py:43:4: W0107: Unnecessary pass statement (unnecessary-pass)
modules/langchain/llm.py:47:4: W0107: Unnecessary pass statement (unnecessary-pass)
modules/langchain/llm.py:51:4: W0107: Unnecessary pass statement (unnecessary-pass)
modules/langchain/llm.py:55:4: W0107: Unnecessary pass statement (unnecessary-pass)
modules/langchain/llm.py:92:28: W0621: Redefining name 'get_proxy_manager' from outer scope (line 26) (redefined-outer-name)
modules/langchain/llm.py:106:31: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:92:28: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
modules/langchain/llm.py:101:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:107:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:110:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:116:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:139:8: R1720: Unnecessary "elif" after "raise", remove the leading "el" from "elif" (no-else-raise)
modules/langchain/llm.py:197:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:161:8: C0415: Import outside toplevel (web_app.app) (import-outside-toplevel)
modules/langchain/llm.py:166:12: C0415: Import outside toplevel (models.ai_provider.AIProvider) (import-outside-toplevel)
modules/langchain/llm.py:168:12: C0415: Import outside toplevel (services.ai_polling_service.is_provider_available) (import-outside-toplevel)
modules/langchain/llm.py:183:20: C0415: Import outside toplevel (web_app.db) (import-outside-toplevel)
modules/langchain/llm.py:186:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:193:12: C0415: Import outside toplevel (web_app.db) (import-outside-toplevel)
modules/langchain/llm.py:198:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:235:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:215:8: C0415: Import outside toplevel (web_app.app) (import-outside-toplevel)
modules/langchain/llm.py:220:12: C0415: Import outside toplevel (models.ai_provider.AIProvider) (import-outside-toplevel)
modules/langchain/llm.py:225:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:231:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:234:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:236:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:239:0: R0914: Too many local variables (44/15) (too-many-locals)
modules/langchain/llm.py:286:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:285:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:287:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:337:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:295:12: C0415: Import outside toplevel (services.config_service.get_config, services.config_service.init_config) (import-outside-toplevel)
modules/langchain/llm.py:305:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:304:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:306:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:312:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:317:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:327:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:331:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:339:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:351:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:647:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:356:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:363:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:365:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:396:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:393:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:397:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:418:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:418:24: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/langchain/llm.py:424:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:432:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:432:25: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/langchain/llm.py:435:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:435:25: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/langchain/llm.py:505:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:473:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:477:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:484:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:489:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:496:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:497:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:511:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:598:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:528:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:535:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:535:40: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/langchain/llm.py:541:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:571:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:575:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:582:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:587:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:599:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:602:12: R1720: Unnecessary "elif" after "raise", remove the leading "el" from "elif" (no-else-raise)
modules/langchain/llm.py:603:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:604:16: W0707: Consider explicitly re-raising using 'raise LLMAuthenticationError(f'API返回了非JSON响应，请检查API密钥和基础URL') from api_error' (raise-missing-from)
modules/langchain/llm.py:604:45: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/langchain/llm.py:608:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:609:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:610:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:622:16: W0707: Consider explicitly re-raising using 'raise LLMAPIError(diagnostic_message) from api_error' (raise-missing-from)
modules/langchain/llm.py:625:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:626:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:639:16: W0707: Consider explicitly re-raising using 'raise LLMAPIError(diagnostic_message) from api_error' (raise-missing-from)
modules/langchain/llm.py:642:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:643:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:644:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:741:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:661:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:678:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:678:36: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/langchain/llm.py:684:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:714:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:718:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:725:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:730:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:742:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:745:8: R1720: Unnecessary "elif" after "raise", remove the leading "el" from "elif" (no-else-raise)
modules/langchain/llm.py:746:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:758:12: W0707: Consider explicitly re-raising using 'raise LLMTimeoutError(diagnostic_message) from e' (raise-missing-from)
modules/langchain/llm.py:760:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:771:12: W0707: Consider explicitly re-raising using 'raise LLMRateLimitError(diagnostic_message) from e' (raise-missing-from)
modules/langchain/llm.py:773:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:785:12: W0707: Consider explicitly re-raising using 'raise LLMAuthenticationError(diagnostic_message) from e' (raise-missing-from)
modules/langchain/llm.py:787:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:799:12: W0707: Consider explicitly re-raising using 'raise LLMServerError(diagnostic_message) from e' (raise-missing-from)
modules/langchain/llm.py:801:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:802:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:803:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:837:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:807:16: C0415: Import outside toplevel (socket) (import-outside-toplevel)
modules/langchain/llm.py:811:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:815:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:814:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:816:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:831:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:828:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:830:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:832:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:838:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:859:12: W0707: Consider explicitly re-raising using 'raise LLMAPIError(diagnostic_message) from e' (raise-missing-from)
modules/langchain/llm.py:861:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:863:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:864:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:865:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:882:12: W0707: Consider explicitly re-raising using 'raise LLMAPIError(diagnostic_message) from e' (raise-missing-from)
modules/langchain/llm.py:239:0: R0912: Too many branches (85/12) (too-many-branches)
modules/langchain/llm.py:239:0: R0915: Too many statements (286/50) (too-many-statements)
modules/langchain/llm.py:264:4: W0612: Unused variable 'request_id' (unused-variable)
modules/langchain/llm.py:369:8: W0612: Unused variable 'chat_params_extra' (unused-variable)
modules/langchain/llm.py:888:21: W0613: Unused argument 'prompt_hash' (unused-argument)
modules/langchain/llm.py:901:0: R0913: Too many arguments (6/5) (too-many-arguments)
modules/langchain/llm.py:901:0: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
modules/langchain/llm.py:901:0: R0914: Too many local variables (16/15) (too-many-locals)
modules/langchain/llm.py:935:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:934:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:936:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:967:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:956:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:981:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/langchain/llm.py:982:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/langchain/llm.py:901:0: R0912: Too many branches (13/12) (too-many-branches)
modules/langchain/llm.py:963:16: W0612: Unused variable 'request_id' (unused-variable)
modules/langchain/llm.py:2:0: C0411: standard import "os" should be placed before third party import "dotenv.load_dotenv" (wrong-import-order)
modules/langchain/llm.py:3:0: C0411: standard import "time" should be placed before third party import "dotenv.load_dotenv" (wrong-import-order)
modules/langchain/llm.py:4:0: C0411: standard import "logging" should be placed before third party import "dotenv.load_dotenv" (wrong-import-order)
modules/langchain/llm.py:5:0: C0411: standard import "random" should be placed before third party import "dotenv.load_dotenv" (wrong-import-order)
modules/langchain/llm.py:6:0: C0411: standard import "hashlib" should be placed before third party import "dotenv.load_dotenv" (wrong-import-order)
modules/langchain/llm.py:7:0: C0411: standard import "datetime.datetime" should be placed before third party import "dotenv.load_dotenv" (wrong-import-order)
modules/langchain/llm.py:8:0: C0411: standard import "functools.wraps" should be placed before third party import "dotenv.load_dotenv" (wrong-import-order)
modules/langchain/llm.py:9:0: C0411: standard import "typing.Dict" should be placed before third party import "dotenv.load_dotenv" (wrong-import-order)
modules/langchain/llm.py:9:0: W0611: Unused Optional imported from typing (unused-import)
modules/langchain/llm.py:9:0: W0611: Unused Tuple imported from typing (unused-import)
************* Module modules.socialmedia.twitter
modules/socialmedia/twitter.py:105:0: C0301: Line too long (110/100) (line-too-long)
modules/socialmedia/twitter.py:108:0: C0301: Line too long (105/100) (line-too-long)
modules/socialmedia/twitter.py:367:0: C0301: Line too long (144/100) (line-too-long)
modules/socialmedia/twitter.py:368:0: C0301: Line too long (103/100) (line-too-long)
modules/socialmedia/twitter.py:398:0: C0301: Line too long (116/100) (line-too-long)
modules/socialmedia/twitter.py:604:0: C0301: Line too long (122/100) (line-too-long)
modules/socialmedia/twitter.py:605:0: C0301: Line too long (122/100) (line-too-long)
modules/socialmedia/twitter.py:606:0: C0301: Line too long (128/100) (line-too-long)
modules/socialmedia/twitter.py:608:0: C0301: Line too long (128/100) (line-too-long)
modules/socialmedia/twitter.py:609:0: C0301: Line too long (111/100) (line-too-long)
modules/socialmedia/twitter.py:613:0: C0301: Line too long (156/100) (line-too-long)
modules/socialmedia/twitter.py:924:0: C0301: Line too long (114/100) (line-too-long)
modules/socialmedia/twitter.py:1071:0: C0301: Line too long (104/100) (line-too-long)
modules/socialmedia/twitter.py:1126:0: C0301: Line too long (151/100) (line-too-long)
modules/socialmedia/twitter.py:1162:0: C0301: Line too long (122/100) (line-too-long)
modules/socialmedia/twitter.py:1185:0: C0301: Line too long (113/100) (line-too-long)
modules/socialmedia/twitter.py:1235:0: C0301: Line too long (105/100) (line-too-long)
modules/socialmedia/twitter.py:1241:0: C0301: Line too long (126/100) (line-too-long)
modules/socialmedia/twitter.py:1264:0: C0301: Line too long (112/100) (line-too-long)
modules/socialmedia/twitter.py:1273:0: C0301: Line too long (126/100) (line-too-long)
modules/socialmedia/twitter.py:1280:0: C0301: Line too long (115/100) (line-too-long)
modules/socialmedia/twitter.py:1303:0: C0301: Line too long (108/100) (line-too-long)
modules/socialmedia/twitter.py:1309:0: C0301: Line too long (117/100) (line-too-long)
modules/socialmedia/twitter.py:1316:0: C0301: Line too long (106/100) (line-too-long)
modules/socialmedia/twitter.py:1622:0: C0301: Line too long (104/100) (line-too-long)
modules/socialmedia/twitter.py:1653:0: C0301: Line too long (104/100) (line-too-long)
modules/socialmedia/twitter.py:1667:0: C0301: Line too long (129/100) (line-too-long)
modules/socialmedia/twitter.py:1686:0: C0301: Line too long (109/100) (line-too-long)
modules/socialmedia/twitter.py:1688:0: C0301: Line too long (125/100) (line-too-long)
modules/socialmedia/twitter.py:1698:0: C0301: Line too long (111/100) (line-too-long)
modules/socialmedia/twitter.py:1703:0: C0301: Line too long (121/100) (line-too-long)
modules/socialmedia/twitter.py:1714:0: C0301: Line too long (113/100) (line-too-long)
modules/socialmedia/twitter.py:1720:0: C0301: Line too long (124/100) (line-too-long)
modules/socialmedia/twitter.py:1723:0: C0301: Line too long (140/100) (line-too-long)
modules/socialmedia/twitter.py:1726:0: C0301: Line too long (136/100) (line-too-long)
modules/socialmedia/twitter.py:1734:0: C0301: Line too long (120/100) (line-too-long)
modules/socialmedia/twitter.py:1735:0: C0301: Line too long (112/100) (line-too-long)
modules/socialmedia/twitter.py:1740:0: C0301: Line too long (101/100) (line-too-long)
modules/socialmedia/twitter.py:1750:0: C0301: Line too long (113/100) (line-too-long)
modules/socialmedia/twitter.py:1755:0: C0301: Line too long (114/100) (line-too-long)
modules/socialmedia/twitter.py:1770:0: C0301: Line too long (117/100) (line-too-long)
modules/socialmedia/twitter.py:1780:0: C0301: Line too long (115/100) (line-too-long)
modules/socialmedia/twitter.py:1783:0: C0301: Line too long (111/100) (line-too-long)
modules/socialmedia/twitter.py:1785:0: C0301: Line too long (125/100) (line-too-long)
modules/socialmedia/twitter.py:1796:0: C0301: Line too long (117/100) (line-too-long)
modules/socialmedia/twitter.py:1816:0: C0301: Line too long (131/100) (line-too-long)
modules/socialmedia/twitter.py:1817:0: C0301: Line too long (123/100) (line-too-long)
modules/socialmedia/twitter.py:1822:0: C0301: Line too long (105/100) (line-too-long)
modules/socialmedia/twitter.py:1832:0: C0301: Line too long (117/100) (line-too-long)
modules/socialmedia/twitter.py:1837:0: C0301: Line too long (118/100) (line-too-long)
modules/socialmedia/twitter.py:1849:0: C0301: Line too long (113/100) (line-too-long)
modules/socialmedia/twitter.py:1851:0: C0301: Line too long (129/100) (line-too-long)
modules/socialmedia/twitter.py:1861:0: C0301: Line too long (115/100) (line-too-long)
modules/socialmedia/twitter.py:1874:0: C0301: Line too long (117/100) (line-too-long)
modules/socialmedia/twitter.py:1880:0: C0301: Line too long (128/100) (line-too-long)
modules/socialmedia/twitter.py:1883:0: C0301: Line too long (144/100) (line-too-long)
modules/socialmedia/twitter.py:1886:0: C0301: Line too long (140/100) (line-too-long)
modules/socialmedia/twitter.py:1894:0: C0301: Line too long (124/100) (line-too-long)
modules/socialmedia/twitter.py:1895:0: C0301: Line too long (116/100) (line-too-long)
modules/socialmedia/twitter.py:1900:0: C0301: Line too long (105/100) (line-too-long)
modules/socialmedia/twitter.py:1910:0: C0301: Line too long (117/100) (line-too-long)
modules/socialmedia/twitter.py:1915:0: C0301: Line too long (118/100) (line-too-long)
modules/socialmedia/twitter.py:1927:0: C0301: Line too long (131/100) (line-too-long)
modules/socialmedia/twitter.py:1945:0: C0301: Line too long (104/100) (line-too-long)
modules/socialmedia/twitter.py:2055:0: C0301: Line too long (108/100) (line-too-long)
modules/socialmedia/twitter.py:2149:0: C0301: Line too long (102/100) (line-too-long)
modules/socialmedia/twitter.py:2301:0: C0301: Line too long (124/100) (line-too-long)
modules/socialmedia/twitter.py:2449:0: C0301: Line too long (101/100) (line-too-long)
modules/socialmedia/twitter.py:2843:0: C0301: Line too long (125/100) (line-too-long)
modules/socialmedia/twitter.py:2877:0: C0301: Line too long (115/100) (line-too-long)
modules/socialmedia/twitter.py:3028:0: C0301: Line too long (120/100) (line-too-long)
modules/socialmedia/twitter.py:3039:0: C0301: Line too long (114/100) (line-too-long)
modules/socialmedia/twitter.py:3091:0: C0301: Line too long (120/100) (line-too-long)
modules/socialmedia/twitter.py:3102:0: C0301: Line too long (125/100) (line-too-long)
modules/socialmedia/twitter.py:3105:0: C0301: Line too long (162/100) (line-too-long)
modules/socialmedia/twitter.py:3140:0: C0301: Line too long (125/100) (line-too-long)
modules/socialmedia/twitter.py:3147:0: C0301: Line too long (136/100) (line-too-long)
modules/socialmedia/twitter.py:1:0: C0302: Too many lines in module (3329/1000) (too-many-lines)
modules/socialmedia/twitter.py:1:0: C0114: Missing module docstring (missing-module-docstring)
modules/socialmedia/twitter.py:8:0: E0401: Unable to import 'tweety' (import-error)
modules/socialmedia/twitter.py:9:0: E0401: Unable to import 'tweety.types' (import-error)
modules/socialmedia/twitter.py:21:0: E0401: Unable to import 'dotenv' (import-error)
modules/socialmedia/twitter.py:27:0: C0413: Import "from modules.socialmedia.async_utils import safe_asyncio_run, safe_call_async_method" should be placed at the top of the module (wrong-import-position)
modules/socialmedia/twitter.py:75:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:72:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:76:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:112:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:97:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:98:12: C0415: Import outside toplevel (subprocess) (import-outside-toplevel)
modules/socialmedia/twitter.py:99:12: C0415: Import outside toplevel (sys) (import-outside-toplevel)
modules/socialmedia/twitter.py:113:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:125:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/twitter.py:126:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:147:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:154:0: R0914: Too many local variables (22/15) (too-many-locals)
modules/socialmedia/twitter.py:175:8: W0621: Redefining name 'datetime' from outer scope (line 7) (redefined-outer-name)
modules/socialmedia/twitter.py:175:8: W0621: Redefining name 'timezone' from outer scope (line 7) (redefined-outer-name)
modules/socialmedia/twitter.py:248:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:174:8: C0415: Import outside toplevel (requests) (import-outside-toplevel)
modules/socialmedia/twitter.py:175:8: W0404: Reimport 'datetime' (imported line 7) (reimported)
modules/socialmedia/twitter.py:175:8: W0404: Reimport 'timezone' (imported line 7) (reimported)
modules/socialmedia/twitter.py:175:8: C0415: Import outside toplevel (datetime.datetime, datetime.timezone) (import-outside-toplevel)
modules/socialmedia/twitter.py:176:8: C0415: Import outside toplevel (email.utils) (import-outside-toplevel)
modules/socialmedia/twitter.py:236:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:250:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:261:4: C0415: Import outside toplevel (ssl) (import-outside-toplevel)
modules/socialmedia/twitter.py:262:4: C0415: Import outside toplevel (urllib3) (import-outside-toplevel)
modules/socialmedia/twitter.py:263:4: C0415: Import outside toplevel (requests) (import-outside-toplevel)
modules/socialmedia/twitter.py:264:4: C0415: Import outside toplevel (requests.adapters.HTTPAdapter) (import-outside-toplevel)
modules/socialmedia/twitter.py:265:4: C0415: Import outside toplevel (urllib3.util.retry.Retry) (import-outside-toplevel)
modules/socialmedia/twitter.py:282:4: C0115: Missing class docstring (missing-class-docstring)
modules/socialmedia/twitter.py:301:0: R0914: Too many local variables (16/15) (too-many-locals)
modules/socialmedia/twitter.py:464:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:316:8: C0415: Import outside toplevel (requests) (import-outside-toplevel)
modules/socialmedia/twitter.py:317:8: C0415: Import outside toplevel (socket) (import-outside-toplevel)
modules/socialmedia/twitter.py:326:8: W0702: No exception type(s) specified (bare-except)
modules/socialmedia/twitter.py:333:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:346:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:343:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:348:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:457:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:363:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:419:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:405:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:407:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:413:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:415:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:417:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:420:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:315:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:426:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:439:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:456:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:459:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:466:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:301:0: R0912: Too many branches (25/12) (too-many-branches)
modules/socialmedia/twitter.py:301:0: R0915: Too many statements (102/50) (too-many-statements)
modules/socialmedia/twitter.py:513:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:493:8: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
modules/socialmedia/twitter.py:499:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
modules/socialmedia/twitter.py:508:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:514:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:529:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:566:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:549:8: C0415: Import outside toplevel (services.proxy_service.find_working_proxy) (import-outside-toplevel)
modules/socialmedia/twitter.py:556:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/twitter.py:557:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:567:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:588:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:573:12: C0415: Import outside toplevel (urllib.parse.urlparse) (import-outside-toplevel)
modules/socialmedia/twitter.py:586:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:589:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:594:0: R0914: Too many local variables (17/15) (too-many-locals)
modules/socialmedia/twitter.py:598:4: C0415: Import outside toplevel (random) (import-outside-toplevel)
modules/socialmedia/twitter.py:599:4: C0415: Import outside toplevel (yaml) (import-outside-toplevel)
modules/socialmedia/twitter.py:599:4: E0401: Unable to import 'yaml' (import-error)
modules/socialmedia/twitter.py:647:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:641:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:648:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:682:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:748:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:703:22: W0212: Access to a protected member _session of a client class (protected-access)
modules/socialmedia/twitter.py:714:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:718:8: C0415: Import outside toplevel (requests) (import-outside-toplevel)
modules/socialmedia/twitter.py:721:8: C0115: Missing class docstring (missing-class-docstring)
modules/socialmedia/twitter.py:726:12: W0221: Number of parameters was 7 in 'HTTPAdapter.send' and is now 3 in overriding 'HeaderAdapter.send' method (arguments-differ)
modules/socialmedia/twitter.py:745:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:746:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:749:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:750:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:766:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:763:8: W0702: No exception type(s) specified (bare-except)
modules/socialmedia/twitter.py:760:12: C0415: Import outside toplevel (urllib3) (import-outside-toplevel)
modules/socialmedia/twitter.py:762:12: E1120: No value for argument 'self' in unbound method call (no-value-for-parameter)
modules/socialmedia/twitter.py:767:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:685:0: R0912: Too many branches (13/12) (too-many-branches)
modules/socialmedia/twitter.py:783:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:784:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:785:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:786:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:769:0: R0915: Too many statements (53/50) (too-many-statements)
modules/socialmedia/twitter.py:851:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:852:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:853:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:854:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:921:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:837:0: R0915: Too many statements (84/50) (too-many-statements)
modules/socialmedia/twitter.py:946:4: W0621: Redefining name 'time' from outer scope (line 3) (redefined-outer-name)
modules/socialmedia/twitter.py:945:4: C0415: Import outside toplevel (random) (import-outside-toplevel)
modules/socialmedia/twitter.py:946:4: W0404: Reimport 'time' (imported line 3) (reimported)
modules/socialmedia/twitter.py:946:4: C0415: Import outside toplevel (time) (import-outside-toplevel)
modules/socialmedia/twitter.py:947:4: C0415: Import outside toplevel (yaml) (import-outside-toplevel)
modules/socialmedia/twitter.py:947:4: E0401: Unable to import 'yaml' (import-error)
modules/socialmedia/twitter.py:965:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:966:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:971:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:976:0: R0914: Too many local variables (37/15) (too-many-locals)
modules/socialmedia/twitter.py:1062:16: W0621: Redefining name 'json' from outer scope (line 2) (redefined-outer-name)
modules/socialmedia/twitter.py:1143:20: W0621: Redefining name 'app' from outer scope (line 1405) (redefined-outer-name)
modules/socialmedia/twitter.py:991:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1004:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:995:8: C0415: Import outside toplevel (ssl) (import-outside-toplevel)
modules/socialmedia/twitter.py:1002:8: W0212: Access to a protected member _create_default_https_context of a client class (protected-access)
modules/socialmedia/twitter.py:1002:44: W0212: Access to a protected member _create_unverified_context of a client class (protected-access)
modules/socialmedia/twitter.py:1005:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1051:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1055:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1191:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1062:16: W0404: Reimport 'json' (imported line 2) (reimported)
modules/socialmedia/twitter.py:1062:16: C0415: Import outside toplevel (json) (import-outside-toplevel)
modules/socialmedia/twitter.py:1073:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1091:24: W0707: Consider explicitly re-raising using 'except Exception as exc' and 'raise ValueError('无效的会话数据格式') from exc' (raise-missing-from)
modules/socialmedia/twitter.py:1094:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1097:16: W0707: Consider explicitly re-raising using 'raise ValueError(f'JSON格式错误: {str(e)}') from e' (raise-missing-from)
modules/socialmedia/twitter.py:1099:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1134:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1111:16: W0404: Reimport 'json' (imported line 2) (reimported)
modules/socialmedia/twitter.py:1111:16: C0415: Import outside toplevel (json) (import-outside-toplevel)
modules/socialmedia/twitter.py:1132:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1135:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1137:21: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
modules/socialmedia/twitter.py:1168:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1161:20: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/twitter.py:1162:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1169:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1184:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/twitter.py:1185:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1193:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1213:27: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1214:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1235:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1241:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1320:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1284:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1272:24: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/twitter.py:1273:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1280:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1285:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1240:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1308:20: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/twitter.py:1309:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1316:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1322:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1370:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1375:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1376:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1378:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1385:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1392:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1400:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:976:0: R0911: Too many return statements (8/6) (too-many-return-statements)
modules/socialmedia/twitter.py:976:0: R0912: Too many branches (75/12) (too-many-branches)
modules/socialmedia/twitter.py:976:0: R0915: Too many statements (287/50) (too-many-statements)
modules/socialmedia/twitter.py:1405:0: C0103: Constant name "app" doesn't conform to UPPER_CASE naming style (invalid-name)
modules/socialmedia/twitter.py:1406:0: C0103: Constant name "async_app" doesn't conform to UPPER_CASE naming style (invalid-name)
modules/socialmedia/twitter.py:1419:4: W0603: Using the global statement (global-statement)
modules/socialmedia/twitter.py:1421:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/twitter.py:1427:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1428:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1437:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1438:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1453:4: W0603: Using the global statement (global-statement)
modules/socialmedia/twitter.py:1464:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1456:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/twitter.py:1465:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1496:8: W0621: Redefining name 'safe_asyncio_run' from outer scope (line 27) (redefined-outer-name)
modules/socialmedia/twitter.py:1490:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1493:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1504:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1496:8: W0404: Reimport 'safe_asyncio_run' (imported line 27) (reimported)
modules/socialmedia/twitter.py:1496:8: C0415: Import outside toplevel (modules.socialmedia.async_utils.safe_asyncio_run) (import-outside-toplevel)
modules/socialmedia/twitter.py:1498:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/twitter.py:1499:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1505:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1509:0: R0914: Too many local variables (30/15) (too-many-locals)
modules/socialmedia/twitter.py:1526:4: W0621: Redefining name 'time' from outer scope (line 3) (redefined-outer-name)
modules/socialmedia/twitter.py:1527:4: W0621: Redefining name 'json' from outer scope (line 2) (redefined-outer-name)
modules/socialmedia/twitter.py:1597:16: W0621: Redefining name 'safe_call_async_method' from outer scope (line 27) (redefined-outer-name)
modules/socialmedia/twitter.py:1694:28: W0621: Redefining name 'datetime' from outer scope (line 7) (redefined-outer-name)
modules/socialmedia/twitter.py:1526:4: W0404: Reimport 'time' (imported line 3) (reimported)
modules/socialmedia/twitter.py:1526:4: C0415: Import outside toplevel (time) (import-outside-toplevel)
modules/socialmedia/twitter.py:1527:4: W0404: Reimport 'json' (imported line 2) (reimported)
modules/socialmedia/twitter.py:1527:4: C0415: Import outside toplevel (json) (import-outside-toplevel)
modules/socialmedia/twitter.py:1528:4: W0602: Using global for 'app' but no assignment is done (global-variable-not-assigned)
modules/socialmedia/twitter.py:1528:4: W0602: Using global for 'async_app' but no assignment is done (global-variable-not-assigned)
modules/socialmedia/twitter.py:1566:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1564:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1559:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1565:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1567:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1585:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1541:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1586:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1590:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1940:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1599:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1597:16: W0404: Reimport 'safe_call_async_method' (imported line 27) (reimported)
modules/socialmedia/twitter.py:1597:16: C0415: Import outside toplevel (modules.socialmedia.async_utils.safe_call_async_method) (import-outside-toplevel)
modules/socialmedia/twitter.py:1603:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1608:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1613:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1616:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1623:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1624:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1630:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1634:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1639:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1644:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1647:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1654:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1655:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1664:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1669:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1675:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1677:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1928:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1685:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1688:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1764:31: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1692:28: C0415: Import outside toplevel (models.social_account.SocialAccount) (import-outside-toplevel)
modules/socialmedia/twitter.py:1693:28: C0415: Import outside toplevel (models.db) (import-outside-toplevel)
modules/socialmedia/twitter.py:1694:28: W0404: Reimport 'datetime' (imported line 7) (reimported)
modules/socialmedia/twitter.py:1694:28: C0415: Import outside toplevel (datetime.datetime) (import-outside-toplevel)
modules/socialmedia/twitter.py:1695:28: C0415: Import outside toplevel (re) (import-outside-toplevel)
modules/socialmedia/twitter.py:1709:36: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1660:8: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1739:43: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1733:44: W0404: Reimport 'time' (imported line 1526) (reimported)
modules/socialmedia/twitter.py:1733:44: W0404: Reimport 'time' (imported line 3) (reimported)
modules/socialmedia/twitter.py:1733:44: C0415: Import outside toplevel (time) (import-outside-toplevel)
modules/socialmedia/twitter.py:1740:40: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1660:8: R1702: Too many nested blocks (9/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1660:8: R1702: Too many nested blocks (9/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1660:8: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1761:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1763:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1765:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1660:8: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1770:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1846:35: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1774:32: C0415: Import outside toplevel (models.social_account.SocialAccount) (import-outside-toplevel)
modules/socialmedia/twitter.py:1775:32: C0415: Import outside toplevel (models.db) (import-outside-toplevel)
modules/socialmedia/twitter.py:1776:32: W0404: Reimport 'datetime' (imported line 7) (reimported)
modules/socialmedia/twitter.py:1776:32: C0415: Import outside toplevel (datetime.datetime) (import-outside-toplevel)
modules/socialmedia/twitter.py:1777:32: C0415: Import outside toplevel (re) (import-outside-toplevel)
modules/socialmedia/twitter.py:1791:40: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1660:8: R1702: Too many nested blocks (9/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1821:47: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1815:48: W0404: Reimport 'time' (imported line 1526) (reimported)
modules/socialmedia/twitter.py:1815:48: W0404: Reimport 'time' (imported line 3) (reimported)
modules/socialmedia/twitter.py:1815:48: C0415: Import outside toplevel (time) (import-outside-toplevel)
modules/socialmedia/twitter.py:1822:44: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1660:8: R1702: Too many nested blocks (10/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1660:8: R1702: Too many nested blocks (10/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1660:8: R1702: Too many nested blocks (9/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1843:36: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1845:36: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1847:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1660:8: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1851:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1924:35: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1855:32: C0415: Import outside toplevel (models.social_account.SocialAccount) (import-outside-toplevel)
modules/socialmedia/twitter.py:1856:32: C0415: Import outside toplevel (models.db) (import-outside-toplevel)
modules/socialmedia/twitter.py:1857:32: W0404: Reimport 'datetime' (imported line 7) (reimported)
modules/socialmedia/twitter.py:1857:32: C0415: Import outside toplevel (datetime.datetime) (import-outside-toplevel)
modules/socialmedia/twitter.py:1858:32: C0415: Import outside toplevel (re) (import-outside-toplevel)
modules/socialmedia/twitter.py:1869:40: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1660:8: R1702: Too many nested blocks (9/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1899:47: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1893:48: W0404: Reimport 'time' (imported line 1526) (reimported)
modules/socialmedia/twitter.py:1893:48: W0404: Reimport 'time' (imported line 3) (reimported)
modules/socialmedia/twitter.py:1893:48: C0415: Import outside toplevel (time) (import-outside-toplevel)
modules/socialmedia/twitter.py:1900:44: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1660:8: R1702: Too many nested blocks (10/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1660:8: R1702: Too many nested blocks (10/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1660:8: R1702: Too many nested blocks (9/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1921:36: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1923:36: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1925:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1927:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1929:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1936:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:1660:8: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:1937:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1941:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1509:0: R0911: Too many return statements (8/6) (too-many-return-statements)
modules/socialmedia/twitter.py:1509:0: R0912: Too many branches (105/12) (too-many-branches)
modules/socialmedia/twitter.py:1509:0: R0915: Too many statements (291/50) (too-many-statements)
modules/socialmedia/twitter.py:1945:0: R0914: Too many local variables (37/15) (too-many-locals)
modules/socialmedia/twitter.py:2043:4: W0621: Redefining name 'posts' from outer scope (line 3327) (redefined-outer-name)
modules/socialmedia/twitter.py:2277:8: W0621: Redefining name 'post' from outer scope (line 3328) (redefined-outer-name)
modules/socialmedia/twitter.py:2345:24: W0621: Redefining name 'datetime' from outer scope (line 7) (redefined-outer-name)
modules/socialmedia/twitter.py:1958:4: W0602: Using global for 'app' but no assignment is done (global-variable-not-assigned)
modules/socialmedia/twitter.py:1958:4: W0602: Using global for 'async_app' but no assignment is done (global-variable-not-assigned)
modules/socialmedia/twitter.py:1961:4: C0103: Variable name "MAX_RETRIES" doesn't conform to snake_case naming style (invalid-name)
modules/socialmedia/twitter.py:1963:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1981:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2019:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2000:20: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
modules/socialmedia/twitter.py:2009:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2012:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2012:40: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/socialmedia/twitter.py:2020:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2023:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1985:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:2027:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2034:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2040:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2112:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2048:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2057:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2065:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2073:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2078:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2098:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2083:20: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
modules/socialmedia/twitter.py:2092:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2095:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2095:40: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/socialmedia/twitter.py:2099:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2106:12: C0415: Import outside toplevel (inspect) (import-outside-toplevel)
modules/socialmedia/twitter.py:2045:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:2111:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2113:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2133:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2118:16: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
modules/socialmedia/twitter.py:2127:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2130:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2130:36: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/socialmedia/twitter.py:2134:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2213:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2142:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2150:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2157:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2164:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2169:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2189:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2174:20: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
modules/socialmedia/twitter.py:2183:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2186:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2186:40: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/socialmedia/twitter.py:2190:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2193:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/twitter.py:2194:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2197:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2207:12: C0415: Import outside toplevel (inspect) (import-outside-toplevel)
modules/socialmedia/twitter.py:2212:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2214:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2234:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2219:16: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
modules/socialmedia/twitter.py:2228:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2231:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2231:36: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/socialmedia/twitter.py:2235:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2238:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/twitter.py:2239:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2242:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2252:4: C0103: Variable name "noneEmptyPosts" doesn't conform to snake_case naming style (invalid-name)
modules/socialmedia/twitter.py:2260:4: C0415: Import outside toplevel (inspect) (import-outside-toplevel)
modules/socialmedia/twitter.py:2273:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2272:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2274:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2368:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2286:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2295:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2295:35: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/socialmedia/twitter.py:2308:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2328:27: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2329:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2277:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:2365:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2339:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2344:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2345:24: W0404: Reimport 'datetime' (imported line 7) (reimported)
modules/socialmedia/twitter.py:2345:24: C0415: Import outside toplevel (datetime.datetime) (import-outside-toplevel)
modules/socialmedia/twitter.py:2366:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2369:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2382:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2375:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2380:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2383:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2385:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:1945:0: R0911: Too many return statements (23/6) (too-many-return-statements)
modules/socialmedia/twitter.py:1945:0: R0912: Too many branches (79/12) (too-many-branches)
modules/socialmedia/twitter.py:1945:0: R0915: Too many statements (249/50) (too-many-statements)
modules/socialmedia/twitter.py:2452:20: W0621: Redefining name 'time' from outer scope (line 3) (redefined-outer-name)
modules/socialmedia/twitter.py:2401:4: W0602: Using global for 'app' but no assignment is done (global-variable-not-assigned)
modules/socialmedia/twitter.py:2401:4: W0602: Using global for 'async_app' but no assignment is done (global-variable-not-assigned)
modules/socialmedia/twitter.py:2409:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2428:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2429:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2448:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2446:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2449:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2451:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2452:20: W0404: Reimport 'time' (imported line 3) (reimported)
modules/socialmedia/twitter.py:2452:20: C0415: Import outside toplevel (time) (import-outside-toplevel)
modules/socialmedia/twitter.py:2457:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2472:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2470:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2473:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2475:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2476:20: W0404: Reimport 'time' (imported line 3) (reimported)
modules/socialmedia/twitter.py:2476:20: C0415: Import outside toplevel (time) (import-outside-toplevel)
modules/socialmedia/twitter.py:2481:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2389:0: R0911: Too many return statements (11/6) (too-many-return-statements)
modules/socialmedia/twitter.py:2389:0: R0912: Too many branches (19/12) (too-many-branches)
modules/socialmedia/twitter.py:2389:0: R0915: Too many statements (52/50) (too-many-statements)
modules/socialmedia/twitter.py:2565:20: W0621: Redefining name 'time' from outer scope (line 3) (redefined-outer-name)
modules/socialmedia/twitter.py:2508:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2545:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2546:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2604:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2558:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2564:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2565:20: W0404: Reimport 'time' (imported line 3) (reimported)
modules/socialmedia/twitter.py:2565:20: C0415: Import outside toplevel (time) (import-outside-toplevel)
modules/socialmedia/twitter.py:2578:16: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/twitter.py:2588:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2588:31: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/socialmedia/twitter.py:2596:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2597:16: W0404: Reimport 'time' (imported line 3) (reimported)
modules/socialmedia/twitter.py:2597:16: C0415: Import outside toplevel (time) (import-outside-toplevel)
modules/socialmedia/twitter.py:2605:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2607:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2608:16: W0404: Reimport 'time' (imported line 3) (reimported)
modules/socialmedia/twitter.py:2608:16: C0415: Import outside toplevel (time) (import-outside-toplevel)
modules/socialmedia/twitter.py:2487:0: R0911: Too many return statements (8/6) (too-many-return-statements)
modules/socialmedia/twitter.py:2487:0: R0912: Too many branches (19/12) (too-many-branches)
modules/socialmedia/twitter.py:2487:0: R0915: Too many statements (64/50) (too-many-statements)
modules/socialmedia/twitter.py:2617:15: W0621: Redefining name 'post' from outer scope (line 3328) (redefined-outer-name)
modules/socialmedia/twitter.py:2639:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2647:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2655:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2653:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2656:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2670:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2663:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2668:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2671:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2675:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2685:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2681:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2686:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2689:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2617:0: R0911: Too many return statements (8/6) (too-many-return-statements)
modules/socialmedia/twitter.py:2694:0: R0914: Too many local variables (48/15) (too-many-locals)
modules/socialmedia/twitter.py:2762:8: W0621: Redefining name 'async_app' from outer scope (line 1406) (redefined-outer-name)
modules/socialmedia/twitter.py:2876:24: W0621: Redefining name 'post' from outer scope (line 3328) (redefined-outer-name)
modules/socialmedia/twitter.py:3030:24: W0621: Redefining name 'posts' from outer scope (line 3327) (redefined-outer-name)
modules/socialmedia/twitter.py:2832:24: W0621: Redefining name 'datetime' from outer scope (line 7) (redefined-outer-name)
modules/socialmedia/twitter.py:2705:4: W0602: Using global for 'app' but no assignment is done (global-variable-not-assigned)
modules/socialmedia/twitter.py:2708:4: C0103: Variable name "MAX_RETRIES" doesn't conform to snake_case naming style (invalid-name)
modules/socialmedia/twitter.py:2710:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2749:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2726:16: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
modules/socialmedia/twitter.py:2735:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2738:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2738:36: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/socialmedia/twitter.py:2750:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2756:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2757:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2891:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2774:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2775:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2791:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2790:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2792:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2812:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2797:20: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
modules/socialmedia/twitter.py:2806:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2809:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2809:40: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/socialmedia/twitter.py:2813:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2885:27: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2832:24: W0404: Reimport 'datetime' (imported line 7) (reimported)
modules/socialmedia/twitter.py:2832:24: C0415: Import outside toplevel (datetime.datetime) (import-outside-toplevel)
modules/socialmedia/twitter.py:2816:12: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:2886:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2889:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2892:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3164:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2921:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2906:16: C0415: Import outside toplevel (inspect) (import-outside-toplevel)
modules/socialmedia/twitter.py:2944:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2929:20: C0415: Import outside toplevel (inspect) (import-outside-toplevel)
modules/socialmedia/twitter.py:2897:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:2949:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2969:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2954:16: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
modules/socialmedia/twitter.py:2963:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2966:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2966:36: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/socialmedia/twitter.py:2970:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2990:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2989:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2991:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3007:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:3000:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3003:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3008:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3019:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3038:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:3024:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3032:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3037:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3039:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3049:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3053:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3068:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:3067:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3069:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3158:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:3081:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2897:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:3113:31: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:3114:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:2897:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:3155:27: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:3125:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3129:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3130:28: W0404: Reimport 'datetime' (imported line 7) (reimported)
modules/socialmedia/twitter.py:3130:28: C0415: Import outside toplevel (datetime.datetime) (import-outside-toplevel)
modules/socialmedia/twitter.py:3156:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3159:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3162:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3165:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3185:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:2897:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
modules/socialmedia/twitter.py:3170:12: C0415: Import outside toplevel (utils.api_utils.get_proxy_manager) (import-outside-toplevel)
modules/socialmedia/twitter.py:3179:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3182:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3182:32: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/socialmedia/twitter.py:3186:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3189:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/twitter.py:3190:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3193:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3193:25: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/socialmedia/twitter.py:2694:0: R0911: Too many return statements (18/6) (too-many-return-statements)
modules/socialmedia/twitter.py:2694:0: R0912: Too many branches (88/12) (too-many-branches)
modules/socialmedia/twitter.py:2694:0: R0915: Too many statements (296/50) (too-many-statements)
modules/socialmedia/twitter.py:3211:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3224:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3226:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3239:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3241:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3295:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:3265:17: E0602: Undefined variable 'get_config' (undefined-variable)
modules/socialmedia/twitter.py:3266:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter.py:3269:11: R1714: Consider merging these comparisons with 'in' by using 'config in ('auto', 'tweety')'. Use a set instead if elements are hashable. (consider-using-in)
modules/socialmedia/twitter.py:3277:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:3281:11: R1714: Consider merging these comparisons with 'in' by using 'config in ('auto', 'twikit')'. Use a set instead if elements are hashable. (consider-using-in)
modules/socialmedia/twitter.py:3289:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:3309:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:3323:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter.py:21:0: C0411: third party import "dotenv.load_dotenv" should be placed before first party imports "utils.redisClient.redis_client", "modules.socialmedia.post.Post", "modules.langchain.llm.get_llm_response", "utils.logger.get_logger", "modules.socialmedia.twitter_utils.extract_media_info"  (wrong-import-order)
modules/socialmedia/twitter.py:13:0: C0412: Imports from package utils are not grouped (ungrouped-imports)
modules/socialmedia/twitter.py:14:0: C0412: Imports from package modules are not grouped (ungrouped-imports)
modules/socialmedia/twitter.py:27:0: C0412: Imports from package modules are not grouped (ungrouped-imports)
modules/socialmedia/twitter.py:3:0: W0611: Unused import time (unused-import)
modules/socialmedia/twitter.py:5:0: W0611: Unused import traceback (unused-import)
modules/socialmedia/twitter.py:6:0: W0611: Unused import asyncio (unused-import)
modules/socialmedia/twitter.py:7:0: W0611: Unused datetime imported from datetime (unused-import)
modules/socialmedia/twitter.py:7:0: W0611: Unused timezone imported from datetime (unused-import)
modules/socialmedia/twitter.py:14:0: W0611: Unused extract_author_info imported from modules.socialmedia.twitter_utils (unused-import)
modules/socialmedia/twitter.py:14:0: W0611: Unused create_post_from_tweet imported from modules.socialmedia.twitter_utils (unused-import)
modules/socialmedia/twitter.py:14:0: W0611: Unused set_timeline_metadata imported from modules.socialmedia.twitter_utils (unused-import)
modules/socialmedia/twitter.py:14:0: W0611: Unused batch_create_posts imported from modules.socialmedia.twitter_utils (unused-import)
************* Module modules.socialmedia.twitter_twikit
modules/socialmedia/twitter_twikit.py:134:0: C0301: Line too long (130/100) (line-too-long)
modules/socialmedia/twitter_twikit.py:233:0: C0301: Line too long (115/100) (line-too-long)
modules/socialmedia/twitter_twikit.py:237:0: C0301: Line too long (111/100) (line-too-long)
modules/socialmedia/twitter_twikit.py:542:0: C0301: Line too long (105/100) (line-too-long)
modules/socialmedia/twitter_twikit.py:595:0: C0301: Line too long (114/100) (line-too-long)
modules/socialmedia/twitter_twikit.py:644:0: C0301: Line too long (114/100) (line-too-long)
modules/socialmedia/twitter_twikit.py:84:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_twikit.py:56:12: C0415: Import outside toplevel (services.proxy_service.find_working_proxy) (import-outside-toplevel)
modules/socialmedia/twitter_twikit.py:60:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/twitter_twikit.py:77:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:85:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:94:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:107:12: W0621: Redefining name 'os' from outer scope (line 8) (redefined-outer-name)
modules/socialmedia/twitter_twikit.py:142:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_twikit.py:106:12: C0415: Import outside toplevel (ssl) (import-outside-toplevel)
modules/socialmedia/twitter_twikit.py:107:12: W0404: Reimport 'os' (imported line 8) (reimported)
modules/socialmedia/twitter_twikit.py:107:12: C0415: Import outside toplevel (os) (import-outside-toplevel)
modules/socialmedia/twitter_twikit.py:113:12: W0212: Access to a protected member _create_default_https_context of a client class (protected-access)
modules/socialmedia/twitter_twikit.py:113:48: W0212: Access to a protected member _create_unverified_context of a client class (protected-access)
modules/socialmedia/twitter_twikit.py:116:12: C0415: Import outside toplevel (twikit) (import-outside-toplevel)
modules/socialmedia/twitter_twikit.py:116:12: E0401: Unable to import 'twikit' (import-error)
modules/socialmedia/twitter_twikit.py:127:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:143:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:180:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_twikit.py:158:12: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
modules/socialmedia/twitter_twikit.py:165:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
modules/socialmedia/twitter_twikit.py:175:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:181:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:198:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:229:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_twikit.py:217:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_twikit.py:218:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:223:20: W0702: No exception type(s) specified (bare-except)
modules/socialmedia/twitter_twikit.py:230:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:237:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:273:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_twikit.py:245:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:260:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_twikit.py:261:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:275:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:295:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:338:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:385:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_twikit.py:361:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:366:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:369:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:376:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:382:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:387:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:396:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:399:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:405:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:343:4: R0911: Too many return statements (9/6) (too-many-return-statements)
modules/socialmedia/twitter_twikit.py:423:8: W0702: No exception type(s) specified (bare-except)
modules/socialmedia/twitter_twikit.py:416:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
modules/socialmedia/twitter_twikit.py:451:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_twikit.py:437:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:448:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:452:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:487:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_twikit.py:468:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:484:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:489:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:504:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:455:4: R0911: Too many return statements (7/6) (too-many-return-statements)
modules/socialmedia/twitter_twikit.py:601:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_twikit.py:594:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:594:29: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/socialmedia/twitter_twikit.py:595:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:602:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:650:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_twikit.py:643:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:643:29: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules/socialmedia/twitter_twikit.py:644:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:651:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_twikit.py:9:0: W0611: Unused import json (unused-import)
modules/socialmedia/twitter_twikit.py:15:0: W0611: Unused Optional imported from typing (unused-import)
modules/socialmedia/twitter_twikit.py:18:0: W0611: Unused extract_media_info imported from modules.socialmedia.twitter_utils (unused-import)
modules/socialmedia/twitter_twikit.py:18:0: W0611: Unused extract_author_info imported from modules.socialmedia.twitter_utils (unused-import)
modules/socialmedia/twitter_twikit.py:18:0: W0611: Unused create_post_from_tweet imported from modules.socialmedia.twitter_utils (unused-import)
modules/socialmedia/twitter_twikit.py:18:0: W0611: Unused set_timeline_metadata imported from modules.socialmedia.twitter_utils (unused-import)
modules/socialmedia/twitter_twikit.py:25:0: W0611: Unused safe_asyncio_run imported from modules.socialmedia.async_utils (unused-import)
************* Module modules.socialmedia.__init__
modules/socialmedia/__init__.py:22:28: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:40:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:49:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:57:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:59:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:68:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:71:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:82:0: C0301: Line too long (101/100) (line-too-long)
modules/socialmedia/__init__.py:83:0: C0301: Line too long (106/100) (line-too-long)
modules/socialmedia/__init__.py:98:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:102:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:104:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:115:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:125:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:130:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:177:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:182:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:186:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:195:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:202:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:206:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/__init__.py:211:0: C0303: Trailing whitespace (trailing-whitespace)
************* Module modules.socialmedia
modules/socialmedia/__init__.py:48:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/__init__.py:56:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/__init__.py:58:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/__init__.py:61:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/__init__.py:113:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/__init__.py:114:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/__init__.py:123:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/__init__.py:124:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/__init__.py:147:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/__init__.py:150:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/__init__.py:165:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/__init__.py:168:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module modules.socialmedia.twitter_utils
modules/socialmedia/twitter_utils.py:55:0: C0301: Line too long (105/100) (line-too-long)
modules/socialmedia/twitter_utils.py:129:0: C0301: Line too long (101/100) (line-too-long)
modules/socialmedia/twitter_utils.py:49:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_utils.py:50:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_utils.py:94:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_utils.py:95:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_utils.py:173:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_utils.py:131:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_utils.py:174:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_utils.py:218:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_utils.py:208:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
modules/socialmedia/twitter_utils.py:212:12: E0401: Unable to import 'dateutil' (import-error)
modules/socialmedia/twitter_utils.py:212:12: C0415: Import outside toplevel (dateutil.parser) (import-outside-toplevel)
modules/socialmedia/twitter_utils.py:216:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_utils.py:219:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_utils.py:260:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_utils.py:261:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module modules.socialmedia.async_utils
modules/socialmedia/async_utils.py:150:0: C0301: Line too long (101/100) (line-too-long)
modules/socialmedia/async_utils.py:46:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/async_utils.py:52:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/async_utils.py:66:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/async_utils.py:29:8: W0612: Unused variable 'loop' (unused-variable)
modules/socialmedia/async_utils.py:80:4: C0415: Import outside toplevel (inspect) (import-outside-toplevel)
modules/socialmedia/async_utils.py:106:4: C0415: Import outside toplevel (inspect) (import-outside-toplevel)
modules/socialmedia/async_utils.py:107:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/async_utils.py:109:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/async_utils.py:113:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/async_utils.py:142:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/async_utils.py:144:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/async_utils.py:154:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/async_utils.py:153:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/async_utils.py:155:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module modules.socialmedia.smart_fetch
modules/socialmedia/smart_fetch.py:18:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:23:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:27:0: C0301: Line too long (124/100) (line-too-long)
modules/socialmedia/smart_fetch.py:28:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:36:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:39:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:40:0: C0301: Line too long (110/100) (line-too-long)
modules/socialmedia/smart_fetch.py:56:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:59:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:63:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:65:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:81:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:84:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:88:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:90:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:102:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:114:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:118:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:122:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:124:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:129:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:132:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:136:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:140:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:142:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:147:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:150:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:168:0: C0301: Line too long (117/100) (line-too-long)
modules/socialmedia/smart_fetch.py:187:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:195:0: C0303: Trailing whitespace (trailing-whitespace)
modules/socialmedia/smart_fetch.py:31:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/smart_fetch.py:34:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/smart_fetch.py:99:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/smart_fetch.py:96:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/smart_fetch.py:100:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/smart_fetch.py:111:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/smart_fetch.py:108:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/smart_fetch.py:112:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/smart_fetch.py:123:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/smart_fetch.py:141:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/smart_fetch.py:196:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/smart_fetch.py:188:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules/socialmedia/smart_fetch.py:197:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/smart_fetch.py:9:0: W0611: Unused safe_asyncio_run imported from modules.socialmedia.async_utils (unused-import)
************* Module modules.socialmedia.twitter_client_manager
modules/socialmedia/twitter_client_manager.py:31:12: C0415: Import outside toplevel (tweety) (import-outside-toplevel)
modules/socialmedia/twitter_client_manager.py:38:12: C0415: Import outside toplevel (twikit) (import-outside-toplevel)
modules/socialmedia/twitter_client_manager.py:31:12: W0611: Unused import tweety (unused-import)
modules/socialmedia/twitter_client_manager.py:38:12: W0611: Unused import twikit (unused-import)
modules/socialmedia/twitter_client_manager.py:54:12: W0621: Redefining name 'os' from outer scope (line 6) (redefined-outer-name)
modules/socialmedia/twitter_client_manager.py:79:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_client_manager.py:49:12: C0415: Import outside toplevel (modules.socialmedia.twitter) (import-outside-toplevel)
modules/socialmedia/twitter_client_manager.py:54:12: W0404: Reimport 'os' (imported line 6) (reimported)
modules/socialmedia/twitter_client_manager.py:54:12: C0415: Import outside toplevel (os) (import-outside-toplevel)
modules/socialmedia/twitter_client_manager.py:61:27: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_client_manager.py:60:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_client_manager.py:62:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_client_manager.py:64:12: C0415: Import outside toplevel (modules.socialmedia.twitter.init_twitter_client) (import-outside-toplevel)
modules/socialmedia/twitter_client_manager.py:75:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_client_manager.py:80:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_client_manager.py:98:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_client_manager.py:86:12: C0415: Import outside toplevel (modules.socialmedia.twitter_twikit) (import-outside-toplevel)
modules/socialmedia/twitter_client_manager.py:99:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_client_manager.py:120:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_client_manager.py:153:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_client_manager.py:141:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
modules/socialmedia/twitter_client_manager.py:142:16: C0415: Import outside toplevel (modules.socialmedia.twitter.fetch) (import-outside-toplevel)
modules/socialmedia/twitter_client_manager.py:146:16: C0415: Import outside toplevel (modules.socialmedia.twitter_twikit) (import-outside-toplevel)
modules/socialmedia/twitter_client_manager.py:150:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_client_manager.py:154:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_client_manager.py:176:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_client_manager.py:164:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
modules/socialmedia/twitter_client_manager.py:165:16: C0415: Import outside toplevel (modules.socialmedia.twitter.fetch_timeline) (import-outside-toplevel)
modules/socialmedia/twitter_client_manager.py:169:16: C0415: Import outside toplevel (modules.socialmedia.twitter_twikit) (import-outside-toplevel)
modules/socialmedia/twitter_client_manager.py:173:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_client_manager.py:177:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_client_manager.py:199:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules/socialmedia/twitter_client_manager.py:187:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
modules/socialmedia/twitter_client_manager.py:188:16: C0415: Import outside toplevel (modules.socialmedia.twitter.reply_to_post) (import-outside-toplevel)
modules/socialmedia/twitter_client_manager.py:196:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_client_manager.py:200:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_client_manager.py:217:16: C0415: Import outside toplevel (modules.socialmedia.twitter_twikit) (import-outside-toplevel)
modules/socialmedia/twitter_client_manager.py:225:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_client_manager.py:228:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_client_manager.py:230:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
modules/socialmedia/twitter_client_manager.py:235:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules/socialmedia/twitter_client_manager.py:7:0: W0611: Unused Optional imported from typing (unused-import)
modules/socialmedia/twitter_client_manager.py:9:0: W0611: Unused safe_call_async_method imported from modules.socialmedia.async_utils (unused-import)
************* Module modules.socialmedia.post
modules/socialmedia/post.py:76:0: C0301: Line too long (174/100) (line-too-long)
modules/socialmedia/post.py:1:0: C0114: Missing module docstring (missing-module-docstring)
modules/socialmedia/post.py:2:0: E0401: Unable to import 'pytz' (import-error)
modules/socialmedia/post.py:7:0: C0115: Missing class docstring (missing-class-docstring)
modules/socialmedia/post.py:7:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
modules/socialmedia/post.py:8:4: R0913: Too many arguments (10/5) (too-many-arguments)
modules/socialmedia/post.py:8:4: R0917: Too many positional arguments (10/5) (too-many-positional-arguments)
modules/socialmedia/post.py:10:8: W0622: Redefining built-in 'id' (redefined-builtin)
modules/socialmedia/post.py:3:0: C0411: standard import "time" should be placed before third party import "pytz" (wrong-import-order)
modules/socialmedia/post.py:4:0: C0411: standard import "os" should be placed before third party import "pytz" (wrong-import-order)
************* Module models.push_notification
models/push_notification.py:25:0: C0301: Line too long (110/100) (line-too-long)
models/push_notification.py:35:0: C0301: Line too long (144/100) (line-too-long)
models/push_notification.py:91:0: C0301: Line too long (112/100) (line-too-long)
models/push_notification.py:162:0: C0301: Line too long (102/100) (line-too-long)
models/push_notification.py:8:0: E0401: Unable to import 'sqlalchemy.dialects.sqlite' (import-error)
models/push_notification.py:81:16: C0415: Import outside toplevel (re) (import-outside-toplevel)
models/push_notification.py:8:0: C0411: third party import "sqlalchemy.dialects.sqlite.JSON" should be placed before first party import "web_app.db"  (wrong-import-order)
************* Module models.analysis_result
models/analysis_result.py:85:0: C0301: Line too long (101/100) (line-too-long)
models/analysis_result.py:86:0: C0301: Line too long (105/100) (line-too-long)
models/analysis_result.py:71:23: W0718: Catching too general exception Exception (broad-exception-caught)
models/analysis_result.py:68:20: C0415: Import outside toplevel (json) (import-outside-toplevel)
************* Module models.system_config
models/system_config.py:17:0: C0301: Line too long (128/100) (line-too-long)
models/system_config.py:18:0: C0303: Trailing whitespace (trailing-whitespace)
models/system_config.py:29:0: C0303: Trailing whitespace (trailing-whitespace)
models/system_config.py:36:0: C0303: Trailing whitespace (trailing-whitespace)
models/system_config.py:38:0: C0303: Trailing whitespace (trailing-whitespace)
************* Module models.system_state
models/system_state.py:20:0: C0301: Line too long (128/100) (line-too-long)
models/system_state.py:36:0: C0303: Trailing whitespace (trailing-whitespace)
models/system_state.py:47:0: C0303: Trailing whitespace (trailing-whitespace)
models/system_state.py:32:15: W0718: Catching too general exception Exception (broad-exception-caught)
models/system_state.py:33:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module models.social_account
models/social_account.py:30:0: C0301: Line too long (103/100) (line-too-long)
models/social_account.py:31:0: C0301: Line too long (107/100) (line-too-long)
models/social_account.py:32:0: C0301: Line too long (108/100) (line-too-long)
models/social_account.py:33:0: C0301: Line too long (108/100) (line-too-long)
models/social_account.py:34:0: C0301: Line too long (107/100) (line-too-long)
models/social_account.py:36:0: C0301: Line too long (128/100) (line-too-long)
************* Module models
models/__init__.py:6:0: E0401: Unable to import 'flask_sqlalchemy' (import-error)
models/__init__.py:12:0: C0413: Import "from .user import User" should be placed at the top of the module (wrong-import-position)
models/__init__.py:13:0: C0413: Import "from .social_account import SocialAccount" should be placed at the top of the module (wrong-import-position)
models/__init__.py:14:0: C0413: Import "from .analysis_result import AnalysisResult" should be placed at the top of the module (wrong-import-position)
models/__init__.py:15:0: C0413: Import "from .system_config import SystemConfig" should be placed at the top of the module (wrong-import-position)
models/__init__.py:16:0: C0413: Import "from .system_state import SystemState" should be placed at the top of the module (wrong-import-position)
models/__init__.py:17:0: C0413: Import "from .notification_service import NotificationService" should be placed at the top of the module (wrong-import-position)
models/__init__.py:18:0: C0413: Import "from .ai_provider import AIProvider" should be placed at the top of the module (wrong-import-position)
models/__init__.py:19:0: C0413: Import "from .proxy_config import ProxyConfig" should be placed at the top of the module (wrong-import-position)
************* Module models.user
models/user.py:6:0: E0401: Unable to import 'werkzeug.security' (import-error)
models/user.py:7:0: E0401: Unable to import 'flask_login' (import-error)
************* Module models.ai_request_log
models/ai_request_log.py:16:0: C0301: Line too long (127/100) (line-too-long)
models/ai_request_log.py:61:12: W0702: No exception type(s) specified (bare-except)
models/ai_request_log.py:66:4: R0913: Too many arguments (12/5) (too-many-arguments)
models/ai_request_log.py:66:4: R0917: Too many positional arguments (12/5) (too-many-positional-arguments)
models/ai_request_log.py:8:0: C0411: standard import "json" should be placed before first party import "web_app.db"  (wrong-import-order)
************* Module models.notification_service
models/notification_service.py:7:0: C0411: standard import "datetime.datetime" should be placed before local import ".db" (wrong-import-order)
************* Module models.ai_provider
models/ai_provider.py:6:0: W0611: Unused timezone imported from datetime (unused-import)
************* Module models.proxy_config
models/proxy_config.py:28:87: C0303: Trailing whitespace (trailing-whitespace)
models/proxy_config.py:9:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
models/proxy_config.py:28:4: R0913: Too many arguments (9/5) (too-many-arguments)
models/proxy_config.py:28:4: R0917: Too many positional arguments (9/5) (too-many-positional-arguments)
************* Module migrations.add_poster_name_field
migrations/add_poster_name_field.py:100:11: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/add_poster_name_field.py:29:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_poster_name_field.py:60:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
migrations/add_poster_name_field.py:89:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_poster_name_field.py:101:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_poster_name_field.py:77:39: W0641: Possibly unused variable 'social_network' (possibly-unused-variable)
migrations/add_poster_name_field.py:110:4: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
************* Module migrations.add_bypass_ai_field
migrations/add_bypass_ai_field.py:40:0: C0301: Line too long (111/100) (line-too-long)
migrations/add_bypass_ai_field.py:14:0: C0413: Import "from web_app import app, db" should be placed at the top of the module (wrong-import-position)
migrations/add_bypass_ai_field.py:15:0: C0413: Import "from models.social_account import SocialAccount" should be placed at the top of the module (wrong-import-position)
migrations/add_bypass_ai_field.py:16:0: E0401: Unable to import 'sqlalchemy' (import-error)
migrations/add_bypass_ai_field.py:16:0: C0413: Import "from sqlalchemy import text" should be placed at the top of the module (wrong-import-position)
migrations/add_bypass_ai_field.py:55:11: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/add_bypass_ai_field.py:50:12: C0415: Import outside toplevel (utils.yaml_utils.sync_accounts_to_yaml) (import-outside-toplevel)
migrations/add_bypass_ai_field.py:56:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_bypass_ai_field.py:63:4: C0103: Constant name "success" doesn't conform to UPPER_CASE naming style (invalid-name)
migrations/add_bypass_ai_field.py:69:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_bypass_ai_field.py:71:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_bypass_ai_field.py:16:0: C0411: third party import "sqlalchemy.text" should be placed before first party imports "web_app.app", "models.social_account.SocialAccount"  (wrong-import-order)
migrations/add_bypass_ai_field.py:15:0: W0611: Unused SocialAccount imported from models.social_account (unused-import)
************* Module migrations.add_confidence_reason_fields
migrations/add_confidence_reason_fields.py:44:0: C0301: Line too long (102/100) (line-too-long)
migrations/add_confidence_reason_fields.py:75:0: C0301: Line too long (114/100) (line-too-long)
migrations/add_confidence_reason_fields.py:76:0: C0301: Line too long (112/100) (line-too-long)
migrations/add_confidence_reason_fields.py:79:0: C0301: Line too long (111/100) (line-too-long)
migrations/add_confidence_reason_fields.py:80:0: C0301: Line too long (112/100) (line-too-long)
migrations/add_confidence_reason_fields.py:88:0: C0301: Line too long (103/100) (line-too-long)
migrations/add_confidence_reason_fields.py:14:0: C0413: Import "from utils.logger import get_logger" should be placed at the top of the module (wrong-import-position)
migrations/add_confidence_reason_fields.py:15:0: E0401: Unable to import 'dotenv' (import-error)
migrations/add_confidence_reason_fields.py:15:0: C0413: Import "from dotenv import load_dotenv" should be placed at the top of the module (wrong-import-position)
migrations/add_confidence_reason_fields.py:31:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_confidence_reason_fields.py:35:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_confidence_reason_fields.py:98:11: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/add_confidence_reason_fields.py:91:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_confidence_reason_fields.py:99:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_confidence_reason_fields.py:104:4: C0103: Constant name "success" doesn't conform to UPPER_CASE naming style (invalid-name)
migrations/add_confidence_reason_fields.py:15:0: C0411: third party import "dotenv.load_dotenv" should be placed before first party import "utils.logger.get_logger"  (wrong-import-order)
migrations/add_confidence_reason_fields.py:9:0: W0611: Unused datetime imported from datetime (unused-import)
************* Module migrations.add_ai_provider_fields
migrations/add_ai_provider_fields.py:51:0: C0301: Line too long (107/100) (line-too-long)
migrations/add_ai_provider_fields.py:73:0: C0301: Line too long (110/100) (line-too-long)
migrations/add_ai_provider_fields.py:79:0: C0301: Line too long (113/100) (line-too-long)
migrations/add_ai_provider_fields.py:88:0: C0301: Line too long (109/100) (line-too-long)
migrations/add_ai_provider_fields.py:108:0: C0301: Line too long (111/100) (line-too-long)
migrations/add_ai_provider_fields.py:113:0: C0301: Line too long (107/100) (line-too-long)
migrations/add_ai_provider_fields.py:117:0: C0301: Line too long (101/100) (line-too-long)
migrations/add_ai_provider_fields.py:121:0: C0301: Line too long (103/100) (line-too-long)
migrations/add_ai_provider_fields.py:14:0: C0413: Import "from web_app import app, db" should be placed at the top of the module (wrong-import-position)
migrations/add_ai_provider_fields.py:15:0: C0413: Import "from models.ai_provider import AIProvider" should be placed at the top of the module (wrong-import-position)
migrations/add_ai_provider_fields.py:16:0: C0413: Import "from models.social_account import SocialAccount" should be placed at the top of the module (wrong-import-position)
migrations/add_ai_provider_fields.py:17:0: C0413: Import "from services.config_service import get_config" should be placed at the top of the module (wrong-import-position)
migrations/add_ai_provider_fields.py:131:15: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/add_ai_provider_fields.py:29:12: E0401: Unable to import 'sqlalchemy' (import-error)
migrations/add_ai_provider_fields.py:29:12: C0415: Import outside toplevel (sqlalchemy.text) (import-outside-toplevel)
migrations/add_ai_provider_fields.py:35:12: E0401: Unable to import 'sqlalchemy' (import-error)
migrations/add_ai_provider_fields.py:35:12: C0415: Import outside toplevel (sqlalchemy.inspect) (import-outside-toplevel)
migrations/add_ai_provider_fields.py:68:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_ai_provider_fields.py:72:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_ai_provider_fields.py:78:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_ai_provider_fields.py:103:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_ai_provider_fields.py:107:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_ai_provider_fields.py:132:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_ai_provider_fields.py:22:0: R0912: Too many branches (23/12) (too-many-branches)
migrations/add_ai_provider_fields.py:22:0: R0915: Too many statements (73/50) (too-many-statements)
migrations/add_ai_provider_fields.py:185:11: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/add_ai_provider_fields.py:186:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_ai_provider_fields.py:189:8: W0702: No exception type(s) specified (bare-except)
migrations/add_ai_provider_fields.py:201:4: C0103: Constant name "success" doesn't conform to UPPER_CASE naming style (invalid-name)
migrations/add_ai_provider_fields.py:8:0: W0611: Unused datetime imported from datetime (unused-import)
migrations/add_ai_provider_fields.py:8:0: W0611: Unused timezone imported from datetime (unused-import)
migrations/add_ai_provider_fields.py:16:0: W0611: Unused SocialAccount imported from models.social_account (unused-import)
migrations/add_ai_provider_fields.py:17:0: W0611: Unused get_config imported from services.config_service (unused-import)
************* Module migrations.add_notification_services_table
migrations/add_notification_services_table.py:26:0: C0301: Line too long (108/100) (line-too-long)
migrations/add_notification_services_table.py:52:11: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/add_notification_services_table.py:53:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_notification_services_table.py:61:4: C0103: Constant name "success" doesn't conform to UPPER_CASE naming style (invalid-name)
************* Module add_push_notifications_table
migrations/versions/add_push_notifications_table.py:36:0: C0301: Line too long (108/100) (line-too-long)
migrations/versions/add_push_notifications_table.py:37:0: C0301: Line too long (108/100) (line-too-long)
migrations/versions/add_push_notifications_table.py:47:0: C0301: Line too long (105/100) (line-too-long)
migrations/versions/add_push_notifications_table.py:48:0: C0301: Line too long (113/100) (line-too-long)
migrations/versions/add_push_notifications_table.py:49:0: C0301: Line too long (113/100) (line-too-long)
migrations/versions/add_push_notifications_table.py:9:0: E0401: Unable to import 'alembic' (import-error)
migrations/versions/add_push_notifications_table.py:10:0: E0401: Unable to import 'sqlalchemy' (import-error)
migrations/versions/add_push_notifications_table.py:11:0: E0401: Unable to import 'sqlalchemy.dialects.sqlite' (import-error)
migrations/versions/add_push_notifications_table.py:15:0: C0103: Constant name "revision" doesn't conform to UPPER_CASE naming style (invalid-name)
migrations/versions/add_push_notifications_table.py:16:0: C0103: Constant name "down_revision" doesn't conform to UPPER_CASE naming style (invalid-name)
migrations/versions/add_push_notifications_table.py:17:0: C0103: Constant name "branch_labels" doesn't conform to UPPER_CASE naming style (invalid-name)
migrations/versions/add_push_notifications_table.py:18:0: C0103: Constant name "depends_on" doesn't conform to UPPER_CASE naming style (invalid-name)
************* Module migrations.add_ai_request_logs
migrations/add_ai_request_logs.py:49:0: C0303: Trailing whitespace (trailing-whitespace)
migrations/add_ai_request_logs.py:52:0: C0303: Trailing whitespace (trailing-whitespace)
migrations/add_ai_request_logs.py:55:68: C0303: Trailing whitespace (trailing-whitespace)
migrations/add_ai_request_logs.py:56:61: C0303: Trailing whitespace (trailing-whitespace)
migrations/add_ai_request_logs.py:60:0: C0303: Trailing whitespace (trailing-whitespace)
migrations/add_ai_request_logs.py:63:0: C0303: Trailing whitespace (trailing-whitespace)
migrations/add_ai_request_logs.py:67:0: C0301: Line too long (114/100) (line-too-long)
migrations/add_ai_request_logs.py:68:0: C0303: Trailing whitespace (trailing-whitespace)
migrations/add_ai_request_logs.py:71:0: C0303: Trailing whitespace (trailing-whitespace)
migrations/add_ai_request_logs.py:74:0: C0303: Trailing whitespace (trailing-whitespace)
migrations/add_ai_request_logs.py:87:0: C0303: Trailing whitespace (trailing-whitespace)
migrations/add_ai_request_logs.py:90:0: C0303: Trailing whitespace (trailing-whitespace)
migrations/add_ai_request_logs.py:92:0: C0303: Trailing whitespace (trailing-whitespace)
migrations/add_ai_request_logs.py:14:0: C0413: Import "from web_app import app, db" should be placed at the top of the module (wrong-import-position)
migrations/add_ai_request_logs.py:15:0: C0413: Import "from models.ai_provider import AIProvider" should be placed at the top of the module (wrong-import-position)
migrations/add_ai_request_logs.py:16:0: C0413: Import "from models.ai_request_log import AIRequestLog" should be placed at the top of the module (wrong-import-position)
migrations/add_ai_request_logs.py:97:15: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/add_ai_request_logs.py:28:12: E0401: Unable to import 'sqlalchemy' (import-error)
migrations/add_ai_request_logs.py:28:12: C0415: Import outside toplevel (sqlalchemy.text) (import-outside-toplevel)
migrations/add_ai_request_logs.py:34:12: E0401: Unable to import 'sqlalchemy' (import-error)
migrations/add_ai_request_logs.py:34:12: C0415: Import outside toplevel (sqlalchemy.inspect) (import-outside-toplevel)
migrations/add_ai_request_logs.py:98:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_ai_request_logs.py:109:4: C0103: Constant name "success" doesn't conform to UPPER_CASE naming style (invalid-name)
migrations/add_ai_request_logs.py:8:0: W0611: Unused datetime imported from datetime (unused-import)
migrations/add_ai_request_logs.py:8:0: W0611: Unused timezone imported from datetime (unused-import)
migrations/add_ai_request_logs.py:15:0: W0611: Unused AIProvider imported from models.ai_provider (unused-import)
migrations/add_ai_request_logs.py:16:0: W0611: Unused AIRequestLog imported from models.ai_request_log (unused-import)
************* Module migrations.add_proxy_config_table
migrations/add_proxy_config_table.py:76:0: C0301: Line too long (102/100) (line-too-long)
migrations/add_proxy_config_table.py:29:0: R0914: Too many local variables (20/15) (too-many-locals)
migrations/add_proxy_config_table.py:37:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_proxy_config_table.py:183:11: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/add_proxy_config_table.py:165:15: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/add_proxy_config_table.py:81:12: C0415: Import outside toplevel (services.config_service.get_config) (import-outside-toplevel)
migrations/add_proxy_config_table.py:86:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_proxy_config_table.py:89:16: C0415: Import outside toplevel (re) (import-outside-toplevel)
migrations/add_proxy_config_table.py:90:16: C0415: Import outside toplevel (urllib.parse.urlparse) (import-outside-toplevel)
migrations/add_proxy_config_table.py:117:23: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/add_proxy_config_table.py:116:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_proxy_config_table.py:118:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_proxy_config_table.py:141:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_proxy_config_table.py:143:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_proxy_config_table.py:160:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_proxy_config_table.py:162:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_proxy_config_table.py:166:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_proxy_config_table.py:180:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_proxy_config_table.py:184:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_proxy_config_table.py:29:0: R0915: Too many statements (68/50) (too-many-statements)
migrations/add_proxy_config_table.py:89:16: W0611: Unused import re (unused-import)
migrations/add_proxy_config_table.py:188:4: C0103: Constant name "success" doesn't conform to UPPER_CASE naming style (invalid-name)
************* Module migrations.add_unique_constraint
migrations/add_unique_constraint.py:94:0: C0301: Line too long (103/100) (line-too-long)
migrations/add_unique_constraint.py:133:0: C0301: Line too long (114/100) (line-too-long)
migrations/add_unique_constraint.py:134:0: C0301: Line too long (116/100) (line-too-long)
migrations/add_unique_constraint.py:135:0: C0301: Line too long (110/100) (line-too-long)
migrations/add_unique_constraint.py:137:0: C0301: Line too long (103/100) (line-too-long)
migrations/add_unique_constraint.py:191:0: C0301: Line too long (102/100) (line-too-long)
migrations/add_unique_constraint.py:35:0: R0914: Too many local variables (17/15) (too-many-locals)
migrations/add_unique_constraint.py:39:8: C0415: Import outside toplevel (utils.db_utils.handle_duplicate_records) (import-outside-toplevel)
migrations/add_unique_constraint.py:63:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_unique_constraint.py:73:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_unique_constraint.py:97:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_unique_constraint.py:100:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_unique_constraint.py:165:11: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/add_unique_constraint.py:167:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_unique_constraint.py:201:8: W0621: Redefining name 'success' from outer scope (line 218) (redefined-outer-name)
migrations/add_unique_constraint.py:178:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_unique_constraint.py:182:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_unique_constraint.py:212:11: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/add_unique_constraint.py:206:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
migrations/add_unique_constraint.py:213:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/add_unique_constraint.py:218:4: C0103: Constant name "success" doesn't conform to UPPER_CASE naming style (invalid-name)
migrations/add_unique_constraint.py:9:0: W0611: Unused datetime imported from datetime (unused-import)
migrations/add_unique_constraint.py:10:0: W0611: Unused import json (unused-import)
************* Module migrations.db_migrations
migrations/db_migrations.py:179:0: C0301: Line too long (108/100) (line-too-long)
migrations/db_migrations.py:242:0: C0301: Line too long (101/100) (line-too-long)
migrations/db_migrations.py:271:0: C0301: Line too long (102/100) (line-too-long)
migrations/db_migrations.py:304:0: C0301: Line too long (102/100) (line-too-long)
migrations/db_migrations.py:360:0: C0301: Line too long (107/100) (line-too-long)
migrations/db_migrations.py:398:0: C0301: Line too long (118/100) (line-too-long)
migrations/db_migrations.py:399:0: C0301: Line too long (120/100) (line-too-long)
migrations/db_migrations.py:400:0: C0301: Line too long (114/100) (line-too-long)
migrations/db_migrations.py:402:0: C0301: Line too long (107/100) (line-too-long)
migrations/db_migrations.py:406:0: C0301: Line too long (101/100) (line-too-long)
migrations/db_migrations.py:408:0: C0301: Line too long (101/100) (line-too-long)
migrations/db_migrations.py:550:0: C0301: Line too long (101/100) (line-too-long)
migrations/db_migrations.py:645:0: C0301: Line too long (101/100) (line-too-long)
migrations/db_migrations.py:663:0: C0301: Line too long (101/100) (line-too-long)
migrations/db_migrations.py:41:11: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/db_migrations.py:39:8: E0401: Unable to import 'dotenv' (import-error)
migrations/db_migrations.py:56:11: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/db_migrations.py:54:8: E0401: Unable to import 'sqlalchemy' (import-error)
migrations/db_migrations.py:73:11: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/db_migrations.py:70:8: E0401: Unable to import 'alembic' (import-error)
migrations/db_migrations.py:71:8: E0401: Unable to import 'sqlalchemy' (import-error)
migrations/db_migrations.py:100:23: W0622: Redefining built-in 'id' (redefined-builtin)
migrations/db_migrations.py:120:15: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/db_migrations.py:113:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:116:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:118:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:122:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:270:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:275:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:277:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:280:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:284:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:300:4: R0914: Too many local variables (19/15) (too-many-locals)
migrations/db_migrations.py:313:12: C0415: Import outside toplevel (utils.db_utils.handle_duplicate_records) (import-outside-toplevel)
migrations/db_migrations.py:334:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:339:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:363:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:367:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:433:15: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/db_migrations.py:435:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:300:4: R0915: Too many statements (56/50) (too-many-statements)
migrations/db_migrations.py:473:15: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/db_migrations.py:467:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
migrations/db_migrations.py:471:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:474:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:540:15: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/db_migrations.py:526:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:534:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
migrations/db_migrations.py:538:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:541:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:515:43: W0612: Unused variable 'social_network' (unused-variable)
migrations/db_migrations.py:552:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:565:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:680:12: W0621: Redefining name 'success' from outer scope (line 705) (redefined-outer-name)
migrations/db_migrations.py:617:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:700:11: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/db_migrations.py:629:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:658:15: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/db_migrations.py:644:12: C0415: Import outside toplevel (migrations.add_ai_provider_fields.run_migration) (import-outside-toplevel)
migrations/db_migrations.py:645:12: C0415: Import outside toplevel (migrations.add_ai_request_logs.run_migration) (import-outside-toplevel)
migrations/db_migrations.py:659:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:670:15: W0718: Catching too general exception Exception (broad-exception-caught)
migrations/db_migrations.py:663:12: C0415: Import outside toplevel (migrations.add_proxy_config_table.run_migration) (import-outside-toplevel)
migrations/db_migrations.py:671:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:677:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:685:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:695:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:697:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:701:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
migrations/db_migrations.py:609:0: R0912: Too many branches (14/12) (too-many-branches)
migrations/db_migrations.py:609:0: R0915: Too many statements (54/50) (too-many-statements)
migrations/db_migrations.py:705:4: C0103: Constant name "success" doesn't conform to UPPER_CASE naming style (invalid-name)
migrations/db_migrations.py:70:8: C0412: Imports from package alembic are not grouped (ungrouped-imports)
migrations/db_migrations.py:71:8: C0412: Imports from package sqlalchemy are not grouped (ungrouped-imports)
migrations/db_migrations.py:23:0: W0611: Unused import importlib (unused-import)
migrations/db_migrations.py:25:0: W0611: Unused Dict imported from typing (unused-import)
migrations/db_migrations.py:25:0: W0611: Unused Any imported from typing (unused-import)
migrations/db_migrations.py:25:0: W0611: Unused Tuple imported from typing (unused-import)
migrations/db_migrations.py:25:0: W0611: Unused Optional imported from typing (unused-import)
migrations/db_migrations.py:47:4: W0611: Unused text imported from sqlalchemy (unused-import)
migrations/db_migrations.py:47:4: W0611: Unused inspect imported from sqlalchemy (unused-import)
migrations/db_migrations.py:62:4: W0611: Unused op imported from alembic (unused-import)
migrations/db_migrations.py:63:4: W0611: Unused sqlalchemy imported as sa (unused-import)
************* Module run_web
run_web.py:20:15: W0718: Catching too general exception Exception (broad-exception-caught)
run_web.py:31:15: W0718: Catching too general exception Exception (broad-exception-caught)
************* Module run_push_queue
run_push_queue.py:35:0: C0301: Line too long (106/100) (line-too-long)
run_push_queue.py:10:0: E0401: Unable to import 'schedule' (import-error)
run_push_queue.py:26:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_push_queue.py:49:11: W0718: Catching too general exception Exception (broad-exception-caught)
run_push_queue.py:30:8: C0415: Import outside toplevel (web_app.app) (import-outside-toplevel)
run_push_queue.py:35:12: C0415: Import outside toplevel (services.push_queue_service.process_notification_queue, services.push_queue_service.retry_failed_notifications) (import-outside-toplevel)
run_push_queue.py:40:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_push_queue.py:46:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_push_queue.py:50:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_push_queue.py:63:12: W0621: Redefining name 'clean_old_notifications' from outer scope (line 52) (redefined-outer-name)
run_push_queue.py:54:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_push_queue.py:69:11: W0718: Catching too general exception Exception (broad-exception-caught)
run_push_queue.py:58:8: C0415: Import outside toplevel (web_app.app) (import-outside-toplevel)
run_push_queue.py:63:12: C0415: Import outside toplevel (services.push_queue_service.clean_old_notifications) (import-outside-toplevel)
run_push_queue.py:68:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_push_queue.py:70:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_push_queue.py:74:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_push_queue.py:94:11: W0718: Catching too general exception Exception (broad-exception-caught)
run_push_queue.py:78:8: C0415: Import outside toplevel (web_app.app) (import-outside-toplevel)
run_push_queue.py:83:12: C0415: Import outside toplevel (models.push_notification.PushNotification) (import-outside-toplevel)
run_push_queue.py:93:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_push_queue.py:95:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_push_queue.py:98:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_push_queue.py:116:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==run_all:[125:180]
==services.config_service:[544:601]
            db_path = os.environ.get('DATABASE_PATH', '/data/tweetAnalyst.db')

            # 检查是否存在小写版本的数据库文件
            db_dir = os.path.dirname(db_path)
            db_name = os.path.basename(db_path)
            lowercase_db_name = db_name.lower()
            lowercase_db_path = os.path.join(db_dir, lowercase_db_name)

            # 检查文件名大小写问题（特别是在Windows上）
            if lowercase_db_path != db_path and os.path.exists(db_path):
                # 检查实际文件名的大小写
                try:
                    actual_files = os.listdir(db_dir)
                    actual_db_name = None
                    for file in actual_files:
                        if file.lower() == lowercase_db_name:
                            actual_db_name = file
                            break

                    if actual_db_name and actual_db_name != db_name:
                        logger.warning(f"检测到数据库文件名大小写不匹配: 实际={actual_db_name}, 期望={db_name}")
                        logger.info(f"正在修正数据库文件名大小写")

                        # 在Windows上，需要通过临时文件名来重命名
                        temp_db_path = os.path.join(db_dir, f"temp_{db_name}")
                        actual_db_path = os.path.join(db_dir, actual_db_name)

                        try:
                            # 先重命名为临时文件名
                            os.rename(actual_db_path, temp_db_path)
                            # 再重命名为正确的文件名
                            os.rename(temp_db_path, db_path)
                            logger.info(f"数据库文件名大小写修正成功: {actual_db_name} -> {db_name}")
                        except Exception as e:
                            logger.error(f"数据库文件名大小写修正失败: {str(e)}")
                            # 如果修正失败，恢复原文件名
                            try:
                                if os.path.exists(temp_db_path):
                                    os.rename(temp_db_path, actual_db_path)
                            except:
                                pass
                except Exception as e:
                    logger.error(f"检查数据库文件名大小写时出错: {str(e)}")

            elif os.path.exists(lowercase_db_path) and not os.path.exists(db_path) and lowercase_db_path != db_path:
                logger.warning(f"检测到小写数据库文件: {lowercase_db_path}，但配置使用: {db_path}")
                logger.info(f"正在重命名数据库文件: {lowercase_db_path} -> {db_path}")
                try:
                    os.rename(lowercase_db_path, db_path)
                    logger.info(f"数据库文件重命名成功")
                except Exception as e:
                    logger.error(f"数据库文件重命名失败: {str(e)}")
                    # 如果重命名失败，使用小写版本的数据库文件
                    logger.warning(f"将使用小写版本的数据库文件: {lowercase_db_path}")
                    db_path = lowercase_db_path

            # 确保数据库路径存在 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==migrations.add_ai_provider_fields:[151:192]
==web_app:[251:303]
            default_provider = AIProvider(
                name="默认提供商",
                model=api_model,
                api_key=api_key,
                api_base=api_base,
                priority=0,
                is_active=True,
                supports_text=True,
                supports_image=False,
                supports_video=False,
                supports_gif=False
            )

            # 创建多模态AI提供商
            multimodal_provider = AIProvider(
                name="多模态提供商",
                model="gpt-4-vision-preview",
                api_key=api_key,
                api_base=api_base,
                priority=1,
                is_active=True,
                supports_text=True,
                supports_image=True,
                supports_video=False,
                supports_gif=True
            )

            db.session.add(default_provider)
            db.session.add(multimodal_provider)
            db.session.commit()

            logger.info("已创建默认AI提供商")
            return True
    except Exception as e:
        logger.error(f"创建默认AI提供商时出错: {str(e)}")
        try:
            db.session.rollback()
        except:
            pass
        return False
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.accounts:[139:162]
==web_app:[995:1017]
        new_account = SocialAccount(
            type=account_type,
            account_id=account_id,
            tag=tag,
            enable_auto_reply=enable_auto_reply,
            bypass_ai=bypass_ai,
            prompt_template=prompt_template,
            auto_reply_template=auto_reply_template,
            ai_provider_id=ai_provider_id,
            text_provider_id=text_provider_id,
            image_provider_id=image_provider_id,
            video_provider_id=video_provider_id,
            gif_provider_id=gif_provider_id
        )

        db.session.add(new_account)
        db.session.commit()

        # 同步到配置文件
        sync_accounts_to_yaml()

        logger.info(f"已添加新账号: {account_type}:{account_id}")
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.ai_provider:[138:156]
==api.settings:[686:712]
            provider.api_key = data['api_key']
        if 'api_base' in data:
            provider.api_base = data['api_base']
        if 'model' in data:
            provider.model = data['model']
        if 'priority' in data:
            provider.priority = data['priority']
        if 'is_active' in data:
            provider.is_active = data['is_active']
        if 'supports_text' in data:
            provider.supports_text = data['supports_text']
        if 'supports_image' in data:
            provider.supports_image = data['supports_image']
        if 'supports_video' in data:
            provider.supports_video = data['supports_video']
        if 'supports_gif' in data:
            provider.supports_gif = data['supports_gif']
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==migrations.add_confidence_reason_fields:[25:50]
==migrations.add_unique_constraint:[172:197]
    db_path = os.getenv('DATABASE_PATH', 'instance/tweetAnalyst.db')
    # 确保路径是绝对路径
    if not os.path.isabs(db_path):
        db_path = os.path.join(os.getcwd(), db_path)

    logger.info(f"开始迁移数据库: {db_path}")

    # 检查数据库文件是否存在
    if not os.path.exists(db_path):
        logger.error(f"数据库文件不存在: {db_path}")
        return False

    try:
        # 连接数据库
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()

        # 检查表是否存在
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='analysis_result'")
        if not cursor.fetchone():
            logger.error("analysis_result表不存在")
            conn.close()
            return False

        # 检查字段是否已存在 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==modules.bots.apprise_adapter:[287:310]
==modules.bots.apprise_adapter_queue:[248:270]
        if not url:
            return ''

        # 对于Telegram URL，隐藏token
        if url.startswith('tgram://'):
            parts = url.replace('tgram://', '').split('/')
            if len(parts) >= 2:
                return f"tgram://****/{parts[1]}"

        # 对于Bark URL，隐藏token
        elif url.startswith('bark://') or url.startswith('barks://'):
            protocol = 'bark://' if url.startswith('bark://') else 'barks://'
            parts = url.replace('bark://', '').replace('barks://', '').split('/')
            if len(parts) >= 2:
                return f"{protocol}{parts[0]}/****"

        # 对于其他URL，只显示服务类型
        parts = url.split('://')
        if len(parts) >= 2:
            return f"{parts[0]}://****"

        return "****" (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==run_all:[62:81]
==services.config_service:[126:148]
            db_path = os.environ.get('DATABASE_PATH', '/data/tweetAnalyst.db')

            # 检查是否存在小写版本的数据库文件
            db_dir = os.path.dirname(db_path)
            db_name = os.path.basename(db_path)
            lowercase_db_name = db_name.lower()
            lowercase_db_path = os.path.join(db_dir, lowercase_db_name)

            if os.path.exists(lowercase_db_path) and not os.path.exists(db_path) and lowercase_db_path != db_path:
                logger.warning(f"检测到小写数据库文件: {lowercase_db_path}，但配置使用: {db_path}")
                logger.info(f"正在重命名数据库文件: {lowercase_db_path} -> {db_path}")
                try:
                    os.rename(lowercase_db_path, db_path)
                    logger.info(f"数据库文件重命名成功")
                except Exception as e:
                    logger.error(f"数据库文件重命名失败: {str(e)}")
                    # 如果重命名失败，使用小写版本的数据库文件
                    logger.warning(f"将使用小写版本的数据库文件: {lowercase_db_path}")
                    db_path = lowercase_db_path (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[233:250]
==api.test:[1230:1248]
    if 'user_id' not in session:
        return jsonify({"success": False, "message": "未登录"}), 401

    try:
        # 获取请求参数
        try:
            data = request.get_json() or {}
            logger.debug(f"收到JSON数据: {data}")
        except Exception as e:
            logger.error(f"解析JSON数据时出错: {str(e)}")
            if request.content_type == 'application/x-www-form-urlencoded':
                data = request.form.to_dict()
                logger.debug(f"收到表单数据: {data}")
            else:
                logger.error(f"不支持的Content-Type: {request.content_type}")
                return jsonify({"success": False, "message": f"不支持的Content-Type: {request.content_type}"}), 415
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[362:379]
==api.test:[1021:1039]
    if 'user_id' not in session:
        return jsonify({"success": False, "message": "未登录"}), 401

    try:
        # 获取请求参数
        try:
            data = request.get_json() or {}
            logger.debug(f"收到JSON数据: {data}")
        except Exception as e:
            logger.error(f"解析JSON数据时出错: {str(e)}")
            if request.content_type == 'application/x-www-form-urlencoded':
                data = request.form.to_dict()
                logger.debug(f"收到表单数据: {data}")
            else:
                logger.error(f"不支持的Content-Type: {request.content_type}")
                return jsonify({"success": False, "message": f"不支持的Content-Type: {request.content_type}"}), 415
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[276:293]
==api.test:[876:894]
    if 'user_id' not in session:
        return jsonify({"success": False, "message": "未登录"}), 401

    try:
        # 获取请求参数
        try:
            data = request.get_json() or {}
            logger.debug(f"收到JSON数据: {data}")
        except Exception as e:
            logger.error(f"解析JSON数据时出错: {str(e)}")
            if request.content_type == 'application/x-www-form-urlencoded':
                data = request.form.to_dict()
                logger.debug(f"收到表单数据: {data}")
            else:
                logger.error(f"不支持的Content-Type: {request.content_type}")
                return jsonify({"success": False, "message": f"不支持的Content-Type: {request.content_type}"}), 415
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[126:143]
==api.test:[738:756]
    if 'user_id' not in session:
        return jsonify({"success": False, "message": "未登录"}), 401

    try:
        # 获取请求参数
        try:
            data = request.get_json() or {}
            logger.debug(f"收到JSON数据: {data}")
        except Exception as e:
            logger.error(f"解析JSON数据时出错: {str(e)}")
            if request.content_type == 'application/x-www-form-urlencoded':
                data = request.form.to_dict()
                logger.debug(f"收到表单数据: {data}")
            else:
                logger.error(f"不支持的Content-Type: {request.content_type}")
                return jsonify({"success": False, "message": f"不支持的Content-Type: {request.content_type}"}), 415

        # 获取导出类型和范围 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[86:103]
==api.test:[647:665]
    if 'user_id' not in session:
        return jsonify({"success": False, "message": "未登录"}), 401

    try:
        # 获取请求参数
        try:
            data = request.get_json() or {}
            logger.debug(f"收到JSON数据: {data}")
        except Exception as e:
            logger.error(f"解析JSON数据时出错: {str(e)}")
            if request.content_type == 'application/x-www-form-urlencoded':
                data = request.form.to_dict()
                logger.debug(f"收到表单数据: {data}")
            else:
                logger.error(f"不支持的Content-Type: {request.content_type}")
                return jsonify({"success": False, "message": f"不支持的Content-Type: {request.content_type}"}), 415
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[22:40]
==api.test:[400:416]
    if 'user_id' not in session:
        return jsonify({"success": False, "message": "未登录"}), 401

    try:
        # 获取请求参数
        try:
            data = request.get_json() or {}
            logger.debug(f"收到JSON数据: {data}")
        except Exception as e:
            logger.error(f"解析JSON数据时出错: {str(e)}")
            if request.content_type == 'application/x-www-form-urlencoded':
                data = request.form.to_dict()
                logger.debug(f"收到表单数据: {data}")
            else:
                logger.error(f"不支持的Content-Type: {request.content_type}")
                return jsonify({"success": False, "message": f"不支持的Content-Type: {request.content_type}"}), 415 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.ai_provider:[81:94]
==api.settings:[633:646]
        provider = AIProvider(
            name=data['name'],
            api_key=data['api_key'],
            api_base=data['api_base'],
            model=data['model'],
            priority=data.get('priority', 0),
            is_active=data.get('is_active', True),
            supports_text=data.get('supports_text', True),
            supports_image=data.get('supports_image', False),
            supports_video=data.get('supports_video', False),
            supports_gif=data.get('supports_gif', False)
        )
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[25:40]
==api.test:[592:607]
    try:
        # 获取请求参数
        try:
            data = request.get_json() or {}
            logger.debug(f"收到JSON数据: {data}")
        except Exception as e:
            logger.error(f"解析JSON数据时出错: {str(e)}")
            if request.content_type == 'application/x-www-form-urlencoded':
                data = request.form.to_dict()
                logger.debug(f"收到表单数据: {data}")
            else:
                logger.error(f"不支持的Content-Type: {request.content_type}")
                return jsonify({"success": False, "message": f"不支持的Content-Type: {request.content_type}"}), 415

        # 获取并验证参数 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==services.ai_polling_service:[653:671]
==services.push_queue_worker:[87:105]
            elapsed = time.time() - start_time
            wait_time = max(0, interval_seconds - elapsed)

            # 等待指定时间
            if wait_time > 0:
                # 使用小的时间间隔检查_worker_running，以便能够及时响应停止请求
                check_interval = 1.0  # 1秒
                for _ in range(int(wait_time / check_interval)):
                    if not _worker_running:
                        break
                    time.sleep(check_interval)

                # 处理剩余的等待时间
                remaining = wait_time % check_interval
                if remaining > 0 and _worker_running:
                    time.sleep(remaining)

        except Exception as e: (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==migrations.add_notification_services_table:[29:42]
==migrations.db_migrations:[181:553]
            return True

        # 创建表
        cursor.execute('''
        CREATE TABLE notification_services (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT NOT NULL,
            service_type TEXT NOT NULL,
            config_url TEXT NOT NULL,
            is_active BOOLEAN DEFAULT 1,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
        ''')

        conn.commit()
        logger.info("成功创建notification_services表")
        return True

class AddAvatarUrlField(Migration):
    """添加avatar_url字段到SocialAccount表"""

    def __init__(self):
        super().__init__(
            id="003_add_avatar_url_field",
            name="添加avatar_url字段到SocialAccount表",
            description="为SocialAccount表添加avatar_url字段，用于存储用户头像URL"
        )

    def _execute(self, conn: sqlite3.Connection) -> bool:
        cursor = conn.cursor()

        # 检查字段是否已存在
        cursor.execute("PRAGMA table_info(social_account)")
        columns = [column[1] for column in cursor.fetchall()]

        if 'avatar_url' not in columns:
            logger.info("添加avatar_url字段到social_account表")
            cursor.execute('ALTER TABLE social_account ADD COLUMN avatar_url TEXT')
            conn.commit()
            logger.info("成功添加avatar_url字段")
        else:
            logger.info("avatar_url字段已存在，无需迁移")

        return True

class AddAccountDetailsFields(Migration):
    """添加社交账号详细信息字段"""

    def __init__(self):
        super().__init__(
            id="004_add_account_details_fields",
            name="添加社交账号详细信息字段",
            description="为SocialAccount表添加display_name, bio, verified等详细信息字段"
        )

    def _execute(self, conn: sqlite3.Connection) -> bool:
        cursor = conn.cursor()

        # 检查表是否存在
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='social_account'")
        if not cursor.fetchone():
            logger.warning("social_account表不存在，跳过添加详细信息字段")
            return True

        # 获取现有字段
        cursor.execute("PRAGMA table_info(social_account)")
        existing_columns = [column[1] for column in cursor.fetchall()]

        # 定义需要添加的字段（与models/social_account.py保持一致）
        fields_to_add = [
            ('display_name', 'TEXT'),
            ('bio', 'TEXT'),
            ('verified', 'BOOLEAN DEFAULT 0'),
            ('followers_count', 'INTEGER DEFAULT 0'),
            ('following_count', 'INTEGER DEFAULT 0'),
            ('posts_count', 'INTEGER DEFAULT 0'),  # 帖子数
            ('join_date', 'TIMESTAMP'),  # 与模型保持一致，使用join_date而不是joined_date
            ('location', 'TEXT'),
            ('website', 'TEXT'),
            ('profession', 'TEXT')  # 添加模型中存在的profession字段
        ]

        # 添加缺失的字段
        added_fields = []
        for field_name, field_type in fields_to_add:
            if field_name not in existing_columns:
                try:
                    logger.info(f"添加字段 {field_name} 到 social_account 表")
                    cursor.execute(f'ALTER TABLE social_account ADD COLUMN {field_name} {field_type}')
                    added_fields.append(field_name)
                except sqlite3.OperationalError as e:
                    if "duplicate column name" in str(e).lower():
                        logger.info(f"字段 {field_name} 已存在，跳过")
                    else:
                        logger.error(f"添加字段 {field_name} 时出错: {str(e)}")
                        return False
            else:
                logger.info(f"字段 {field_name} 已存在，跳过")

        if added_fields:
            conn.commit()
            logger.info(f"成功添加字段: {', '.join(added_fields)}")
        else:
            logger.info("所有字段都已存在，无需添加")

        return True

class AddUniqueConstraintToAnalysisResult(Migration):
    """添加唯一性约束到AnalysisResult表"""

    def __init__(self):
        super().__init__(
            id="005_add_unique_constraint_to_analysis_result",
            name="添加唯一性约束到AnalysisResult表",
            description="为AnalysisResult表添加social_network, account_id, post_id的唯一性约束，防止重复记录"
        )

    def _execute(self, conn: sqlite3.Connection) -> bool:
        cursor = conn.cursor()

        # 检查表是否存在
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='analysis_result'")
        if not cursor.fetchone():
            logger.warning("analysis_result表不存在，跳过添加唯一性约束")
            return True

        # 处理重复记录（使用公共数据库工具）
        logger.info("检查并处理重复记录...")
        try:
            # 导入公共数据库工具
            from utils.db_utils import handle_duplicate_records

            # 使用公共函数处理重复记录
            unique_columns = ['social_network', 'account_id', 'post_id']
            priority_columns = ['is_relevant DESC', 'confidence DESC', 'created_at DESC']

            total_removed = handle_duplicate_records(
                cursor, conn, 'analysis_result', unique_columns, priority_columns
            )
        except ImportError:
            # 如果无法导入公共工具，使用原始实现
            logger.warning("无法导入公共数据库工具，使用原始实现")

            cursor.execute("""
            SELECT social_network, account_id, post_id, COUNT(*) as count
            FROM analysis_result
            GROUP BY social_network, account_id, post_id
            HAVING COUNT(*) > 1
            """)

            duplicates = cursor.fetchall()
            logger.info(f"找到 {len(duplicates)} 组重复记录")

            total_removed = 0
            for dup in duplicates:
                social_network, account_id, post_id, count = dup
                logger.info(f"处理重复记录: {social_network}, {account_id}, {post_id}, 共 {count} 条")

                # 获取所有重复记录
                cursor.execute("""
                SELECT id, is_relevant, confidence, created_at
                FROM analysis_result
                WHERE social_network = ? AND account_id = ? AND post_id = ?
                ORDER BY
                    is_relevant DESC,  -- 优先保留相关的记录
                    confidence DESC,   -- 其次是置信度高的
                    created_at DESC    -- 最后是最新创建的
                """, (social_network, account_id, post_id))

                records = cursor.fetchall()

                # 保留第一条记录，删除其余记录
                keep_id = records[0][0]
                delete_ids = [r[0] for r in records[1:]]

                if delete_ids:
                    placeholders = ','.join(['?'] * len(delete_ids))
                    cursor.execute(f"DELETE FROM analysis_result WHERE id IN ({placeholders})", delete_ids)
                    removed = len(delete_ids)
                    total_removed += removed
                    logger.info(f"保留记录ID: {keep_id}, 删除 {removed} 条重复记录")

            if total_removed > 0:
                conn.commit()
                logger.info(f"共删除 {total_removed} 条重复记录")

        # 添加唯一性约束
        # SQLite不支持直接添加约束，需要创建新表并迁移数据
        logger.info("开始添加唯一性约束...")

        try:
            # 1. 创建临时表
            cursor.execute("""
            CREATE TABLE analysis_result_temp (
                id INTEGER PRIMARY KEY,
                social_network TEXT NOT NULL,
                account_id TEXT NOT NULL,
                post_id TEXT NOT NULL,
                post_time TIMESTAMP NOT NULL,
                content TEXT NOT NULL,
                analysis TEXT NOT NULL,
                is_relevant BOOLEAN NOT NULL,
                confidence INTEGER,
                reason TEXT,
                poster_avatar_url TEXT,
                has_media BOOLEAN DEFAULT 0,
                media_content TEXT,
                ai_provider TEXT,
                ai_model TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(social_network, account_id, post_id)
            )
            """)

            # 2. 创建索引
            cursor.execute("CREATE INDEX idx_account_relevant_temp ON analysis_result_temp (account_id, is_relevant)")
            cursor.execute("CREATE INDEX idx_network_account_temp ON analysis_result_temp (social_network, account_id)")
            cursor.execute("CREATE INDEX idx_time_relevant_temp ON analysis_result_temp (post_time, is_relevant)")
            cursor.execute("CREATE INDEX idx_confidence_temp ON analysis_result_temp (confidence)")
            cursor.execute("CREATE INDEX idx_social_network_temp ON analysis_result_temp (social_network)")
            cursor.execute("CREATE INDEX idx_account_id_temp ON analysis_result_temp (account_id)")
            cursor.execute("CREATE INDEX idx_post_id_temp ON analysis_result_temp (post_id)")
            cursor.execute("CREATE INDEX idx_post_time_temp ON analysis_result_temp (post_time)")
            cursor.execute("CREATE INDEX idx_is_relevant_temp ON analysis_result_temp (is_relevant)")
            cursor.execute("CREATE INDEX idx_has_media_temp ON analysis_result_temp (has_media)")
            cursor.execute("CREATE INDEX idx_ai_provider_temp ON analysis_result_temp (ai_provider)")
            cursor.execute("CREATE INDEX idx_ai_model_temp ON analysis_result_temp (ai_model)")
            cursor.execute("CREATE INDEX idx_created_at_temp ON analysis_result_temp (created_at)")

            # 3. 迁移数据
            cursor.execute("""
            INSERT INTO analysis_result_temp
            SELECT id, social_network, account_id, post_id, post_time, content, analysis,
                   is_relevant, confidence, reason,
                   CASE WHEN EXISTS(SELECT 1 FROM pragma_table_info('analysis_result') WHERE name='poster_avatar_url')
                        THEN poster_avatar_url ELSE NULL END as poster_avatar_url,
                   has_media, media_content, ai_provider,
                   ai_model, created_at
            FROM analysis_result
            """)

            # 4. 删除旧表
            cursor.execute("DROP TABLE analysis_result")

            # 5. 重命名新表
            cursor.execute("ALTER TABLE analysis_result_temp RENAME TO analysis_result")

            conn.commit()
            logger.info("成功添加唯一性约束")
            return True
        except Exception as e:
            conn.rollback()
            logger.error(f"添加唯一性约束时出错: {str(e)}")
            return False


class AddPosterAvatarUrlField(Migration):
    """确保analysis_result表包含poster_avatar_url字段"""

    def __init__(self):
        super().__init__(
            id="006_add_poster_avatar_url_field",
            name="确保analysis_result表包含poster_avatar_url字段",
            description="检查并添加poster_avatar_url字段到analysis_result表，用于存储发布者头像URL"
        )

    def _execute(self, conn: sqlite3.Connection) -> bool:
        cursor = conn.cursor()

        try:
            # 检查字段是否已存在
            cursor.execute("PRAGMA table_info(analysis_result)")
            columns = [column[1] for column in cursor.fetchall()]

            if 'poster_avatar_url' not in columns:
                logger.info("添加poster_avatar_url字段到analysis_result表")
                cursor.execute('ALTER TABLE analysis_result ADD COLUMN poster_avatar_url TEXT')
                conn.commit()
                logger.info("成功添加poster_avatar_url字段")
            else:
                logger.info("poster_avatar_url字段已存在，无需添加")

            return True
        except sqlite3.OperationalError as e:
            if "duplicate column name" in str(e).lower():
                logger.info("poster_avatar_url字段已存在，无需添加")
                return True
            else:
                logger.error(f"添加poster_avatar_url字段时出错: {str(e)}")
                return False
        except Exception as e:
            logger.error(f"执行poster_avatar_url字段迁移时出错: {str(e)}")
            return False


class AddPosterNameField(Migration):
    """添加poster_name字段到analysis_result表"""

    def __init__(self):
        super().__init__(
            id="007_add_poster_name_field",
            name="添加poster_name字段到analysis_result表",
            description="为analysis_result表添加poster_name字段，用于存储推文发布者的真实用户名"
        )

    def _execute(self, conn: sqlite3.Connection) -> bool:
        cursor = conn.cursor()

        try:
            # 检查字段是否已存在
            cursor.execute("PRAGMA table_info(analysis_result)")
            columns = [column[1] for column in cursor.fetchall()]

            if 'poster_name' not in columns:
                logger.info("添加poster_name字段到analysis_result表")
                cursor.execute('ALTER TABLE analysis_result ADD COLUMN poster_name VARCHAR(200)')
                conn.commit()
                logger.info("成功添加poster_name字段")

                # 尝试从现有数据中提取用户名信息
                logger.info("开始更新现有数据的poster_name字段...")

                # 查询所有没有poster_name的记录
                cursor.execute("""
                    SELECT id, account_id, social_network
                    FROM analysis_result
                    WHERE poster_name IS NULL
                """)

                records = cursor.fetchall()
                updated_count = 0

                for record_id, account_id, social_network in records:
                    # 对于时间线推文，account_id通常就是真实用户名
                    cursor.execute("""
                        UPDATE analysis_result
                        SET poster_name = ?
                        WHERE id = ?
                    """, (account_id, record_id))
                    updated_count += 1

                if updated_count > 0:
                    conn.commit()
                    logger.info(f"成功更新了{updated_count}条记录的poster_name字段")
                else:
                    logger.info("没有需要更新的记录")
            else:
                logger.info("poster_name字段已存在，无需添加")

            return True
        except sqlite3.OperationalError as e:
            if "duplicate column name" in str(e).lower():
                logger.info("poster_name字段已存在，无需添加")
                return True
            else:
                logger.error(f"添加poster_name字段时出错: {str(e)}")
                return False
        except Exception as e:
            logger.error(f"执行poster_name字段迁移时出错: {str(e)}")
            return False


def init_migration_table(conn: sqlite3.Connection) -> None:
    """初始化迁移记录表"""
    cursor = conn.cursor()

    # 检查迁移记录表是否存在
    cursor.execute(f"SELECT name FROM sqlite_master WHERE type='table' AND name='{MIGRATION_TABLE}'")
    if not cursor.fetchone():
        logger.info(f"创建{MIGRATION_TABLE}表")
        cursor.execute(f''' (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==migrations.add_confidence_reason_fields:[97:110]
==migrations.add_unique_constraint:[211:224]
    except Exception as e:
        logger.error(f"数据库迁移失败: {str(e)}")
        return False

if __name__ == "__main__":
    # 执行迁移
    success = migrate()
    if success:
        print("数据库迁移成功")
        sys.exit(0)
    else:
        print("数据库迁移失败")
        sys.exit(1) (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[131:143]
==api.test:[133:144]
        try:
            data = request.get_json() or {}
            logger.debug(f"收到JSON数据: {data}")
        except Exception as e:
            logger.error(f"解析JSON数据时出错: {str(e)}")
            if request.content_type == 'application/x-www-form-urlencoded':
                data = request.form.to_dict()
                logger.debug(f"收到表单数据: {data}")
            else:
                logger.error(f"不支持的Content-Type: {request.content_type}")
                return jsonify({"success": False, "message": f"不支持的Content-Type: {request.content_type}"}), 415
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[91:103]
==api.test:[100:111]
        try:
            data = request.get_json() or {}
            logger.debug(f"收到JSON数据: {data}")
        except Exception as e:
            logger.error(f"解析JSON数据时出错: {str(e)}")
            if request.content_type == 'application/x-www-form-urlencoded':
                data = request.form.to_dict()
                logger.debug(f"收到表单数据: {data}")
            else:
                logger.error(f"不支持的Content-Type: {request.content_type}")
                return jsonify({"success": False, "message": f"不支持的Content-Type: {request.content_type}"}), 415
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[27:40]
==api.test:[68:79]
    try:
        data = request.get_json() or {}
        logger.debug(f"收到JSON数据: {data}")
    except Exception as e:
        logger.error(f"解析JSON数据时出错: {str(e)}")
        if request.content_type == 'application/x-www-form-urlencoded':
            data = request.form.to_dict()
            logger.debug(f"收到表单数据: {data}")
        else:
            logger.error(f"不支持的Content-Type: {request.content_type}")
            return jsonify({"success": False, "message": f"不支持的Content-Type: {request.content_type}"}), 415 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.accounts:[69:81]
==web_app:[1054:1066]
        try:
            id_as_int = int(account_id)
            account = SocialAccount.query.get(id_as_int)
            if account:
                logger.info(f"通过ID查找账号: {id_as_int}")
            else:
                # 如果找不到，尝试通过account_id查找
                account = SocialAccount.query.filter_by(account_id=account_id).first()
                if account:
                    logger.info(f"通过account_id查找账号: {account_id}")
                else:
                    logger.error(f"未找到账号: {account_id}") (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==modules.bots.apprise_adapter_queue:[248:265]
==utils.url_utils:[22:39]
        if not url:
            return ''

        # 对于Telegram URL，隐藏token
        if url.startswith('tgram://'):
            parts = url.replace('tgram://', '').split('/')
            if len(parts) >= 2:
                return f"tgram://****/{parts[1]}"

        # 对于Bark URL，隐藏token
        elif url.startswith('bark://') or url.startswith('barks://'):
            protocol = 'bark://' if url.startswith('bark://') else 'barks://'
            parts = url.replace('bark://', '').replace('barks://', '').split('/')
            if len(parts) >= 2:
                return f"{protocol}{parts[0]}/****"

        # 对于其他URL，只显示服务类型 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.test:[269:283]
==services.test_service:[253:267]
            working_proxy = proxy_manager.find_working_proxy(force_check=True)

            if not working_proxy:
                return {
                    "success": False,
                    "message": "未找到可用的代理",
                    "data": {
                        "url": test_url,
                        "status": "no_proxy"
                    }
                }

            # 使用代理发送请求
            start_time = time.time() (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==modules.socialmedia.twitter:[183:195]
==modules.socialmedia.twitter_twikit:[59:72]
            if proxy_info:
                # 构建代理URL
                protocol = proxy_info.get('protocol', 'http')
                host = proxy_info['host']
                port = proxy_info['port']
                username = proxy_info.get('username')
                password = proxy_info.get('password')

                if username and password:
                    proxy_url = f"{protocol}://{username}:{password}@{host}:{port}"
                else:
                    proxy_url = f"{protocol}://{host}:{port}"
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.ai_provider:[186:197]
==api.settings:[741:752]
        accounts_using_provider = SocialAccount.query.filter(
            (SocialAccount.ai_provider_id == provider_id) |
            (SocialAccount.text_provider_id == provider_id) |
            (SocialAccount.image_provider_id == provider_id) |
            (SocialAccount.video_provider_id == provider_id) |
            (SocialAccount.gif_provider_id == provider_id)
        ).all()

        if accounts_using_provider:
            account_names = [f"@{account.account_id}" for account in accounts_using_provider]
            return jsonify({ (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.test:[302:312]
==utils.test_utils:[386:396]
                    "response_time": f"{response_time:.2f}秒",
                    "proxy": working_proxy.name
                }
            }
        except Exception as e:
            logger.error(f"代理测试失败: {str(e)}")
            return {
                "success": False,
                "message": f"代理连接测试失败: {str(e)}",
                "data": { (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==modules.socialmedia.twitter:[1025:1038]
==modules.socialmedia.twitter_twikit:[61:72]
                protocol = proxy_info.get('protocol', 'http')
                host = proxy_info['host']
                port = proxy_info['port']
                username = proxy_info.get('username')
                password = proxy_info.get('password')

                if username and password:
                    proxy_url = f"{protocol}://{username}:{password}@{host}:{port}"
                else:
                    proxy_url = f"{protocol}://{host}:{port}"
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==migrations.add_ai_provider_fields:[132:151]
==web_app:[213:232]
            return False

def create_default_ai_providers():
    """创建默认AI提供商"""
    try:
        # 确保在应用上下文中运行
        with app.app_context():
            # 检查是否已存在AI提供商
            if AIProvider.query.first() is not None:
                logger.debug("已存在AI提供商，不创建默认提供商")
                return False

            # 从配置中获取API密钥和基础URL
            # 直接从环境变量获取，避免循环依赖
            api_key = os.environ.get('LLM_API_KEY', '')
            api_base = os.environ.get('LLM_API_BASE', 'https://api.openai.com/v1')
            api_model = os.environ.get('LLM_API_MODEL', 'gpt-4')

            # 创建默认AI提供商 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[638:649]
==routes.ai_settings:[115:127]
            priority=data.get('priority', 0),
            is_active=data.get('is_active', True),
            supports_text=data.get('supports_text', True),
            supports_image=data.get('supports_image', False),
            supports_video=data.get('supports_video', False),
            supports_gif=data.get('supports_gif', False)
        )

        db.session.add(provider)
        db.session.commit()
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==models.proxy_config:[40:49]
==utils.api_utils:[104:113]
            return {
                'id': self.id,
                'name': self.name,
                'host': self.host,
                'port': self.port,
                'protocol': self.protocol,
                'username': self.username,
                'password': '******' if self.password else None,
                'priority': self.priority, (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==run_all:[71:81]
==services.config_service:[589:601]
                logger.warning(f"检测到小写数据库文件: {lowercase_db_path}，但配置使用: {db_path}")
                logger.info(f"正在重命名数据库文件: {lowercase_db_path} -> {db_path}")
                try:
                    os.rename(lowercase_db_path, db_path)
                    logger.info(f"数据库文件重命名成功")
                except Exception as e:
                    logger.error(f"数据库文件重命名失败: {str(e)}")
                    # 如果重命名失败，使用小写版本的数据库文件
                    logger.warning(f"将使用小写版本的数据库文件: {lowercase_db_path}")
                    db_path = lowercase_db_path (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==run_all:[170:180]
==services.config_service:[135:148]
                logger.warning(f"检测到小写数据库文件: {lowercase_db_path}，但配置使用: {db_path}")
                logger.info(f"正在重命名数据库文件: {lowercase_db_path} -> {db_path}")
                try:
                    os.rename(lowercase_db_path, db_path)
                    logger.info(f"数据库文件重命名成功")
                except Exception as e:
                    logger.error(f"数据库文件重命名失败: {str(e)}")
                    # 如果重命名失败，使用小写版本的数据库文件
                    logger.warning(f"将使用小写版本的数据库文件: {lowercase_db_path}")
                    db_path = lowercase_db_path

            # 创建SQLite连接
            import sqlite3 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==modules.socialmedia.twitter:[560:571]
==modules.socialmedia.twitter_twikit:[78:89]
            else:
                logger.info("数据库中未找到可用的代理，尝试使用环境变量")

        except ImportError:
            logger.info("代理服务不可用，尝试使用环境变量")
        except Exception as e:
            logger.warning(f"从数据库获取代理配置时出错: {str(e)}，回退到环境变量")

        # 回退到环境变量
        proxy_url = os.getenv('HTTP_PROXY', '')
        if proxy_url: (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.twitter:[179:189]
==modules.socialmedia.twitter_client_manager:[54:65]
        session_files = ['session.tw_session', 'session', '.tw_session']
        for session_file in session_files:
            if os.path.exists(session_file):
                try:
                    os.remove(session_file)
                    logger.info(f"已删除旧的会话文件: {session_file}")
                except Exception as e:
                    logger.warning(f"删除会话文件 {session_file} 失败: {str(e)}")

        # 清除相关缓存 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.test:[292:301]
==utils.test_utils:[376:385]
            end_time = time.time()
            response_time = end_time - start_time

            return {
                "success": True,
                "message": "代理连接测试成功",
                "data": {
                    "url": test_url or proxy_manager.test_url,
                    "status": "connected", (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==models.ai_provider:[93:102]
==services.ai_polling_service:[79:89]
        if media_type == 'text':
            query = query.filter_by(supports_text=True)
        elif media_type == 'image':
            query = query.filter_by(supports_image=True)
        elif media_type == 'video':
            query = query.filter_by(supports_video=True)
        elif media_type == 'gif':
            query = query.filter_by(supports_gif=True)
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==migrations.add_ai_provider_fields:[25:38]
==migrations.add_ai_request_logs:[24:37]
    with app.app_context():
        try:
            # 检查数据库连接
            from sqlalchemy import text
            with db.engine.connect() as conn:
                conn.execute(text("SELECT 1")).fetchall()
            logger.info("数据库连接正常")

            # 检查AI请求日志表是否存在
            from sqlalchemy import inspect
            inspector = inspect(db.engine)
            existing_tables = inspector.get_table_names()
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==modules.socialmedia.twitter:[495:503]
==modules.socialmedia.twitter_twikit:[161:169]
        db_password = get_config('TWITTER_PASSWORD')
        db_session = get_config('TWITTER_SESSION')

        if db_session and db_session.strip():
            credentials['session'] = db_session
            credentials['source'] = 'database'
            logger.info("使用数据库中的Twitter会话数据")
            return credentials (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.ai_provider:[86:94]
==routes.ai_settings:[115:123]
            priority=data.get('priority', 0),
            is_active=data.get('is_active', True),
            supports_text=data.get('supports_text', True),
            supports_image=data.get('supports_image', False),
            supports_video=data.get('supports_video', False),
            supports_gif=data.get('supports_gif', False)
        )
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==modules.langchain.llm:[407:416]
==services.test_service:[150:159]
        chat_params = {
            "model": model,
            "openai_api_base": api_base,
            "openai_api_key": api_key,
            "temperature": 0,
            "request_timeout": 60
        }

        # 根据API类型和模型添加特定参数 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==migrations.add_bypass_ai_field:[18:29]
==migrations.add_unique_constraint:[21:30]
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger('migration')

def run_migration():
    """
    执行迁移：添加bypass_ai字段到SocialAccount表
    """
    try: (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==modules.socialmedia.twitter:[517:524]
==modules.socialmedia.twitter_twikit:[185:192]
    env_password = os.getenv('TWITTER_PASSWORD')
    env_session = os.getenv('TWITTER_SESSION')

    if env_session and env_session.strip():
        credentials['session'] = env_session
        credentials['source'] = 'environment'
        logger.info("使用环境变量中的Twitter会话") (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==modules.socialmedia.twitter:[485:495]
==modules.socialmedia.twitter_twikit:[150:160]
        'password': None,
        'session': None,
        'source': None
    }

    try:
        # 优先从数据库的system_config表获取Twitter登录凭据
        from services.config_service import get_config

        db_username = get_config('TWITTER_USERNAME') (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[164:174]
==api.twitter:[159:169]
            twitter_manager = get_twitter_manager()

            # 重置客户端状态
            twitter_manager.tweety_client = None
            twitter_manager.tweety_async_client = None
            twitter_manager.twikit_client = None
            twitter_manager.current_library = None
            twitter_manager.initialized = False

            # 获取库偏好设置 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[174:183]
==api.twitter:[121:130]
            library_preference = get_config('TWITTER_LIBRARY', 'auto')

            # 重新初始化
            if library_preference == 'auto':
                success = twitter_manager.auto_initialize()
            else:
                success = twitter_manager.switch_library(library_preference)

            if success: (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[307:315]
==api.test:[207:215]
                protocol = parsed.scheme
                host = parsed.hostname
                port = parsed.port
                username = parsed.username
                password = parsed.password

                if host and port and protocol:
                    # 创建临时代理配置 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.ai_provider:[31:42]
==routes.ai_settings:[140:151]
        }), 500

@ai_settings_bp.route('/api/ai_settings/providers/<int:provider_id>', methods=['GET'])
@login_required
def get_ai_provider(provider_id):
    """获取AI提供商详情"""
    try:
        provider = AIProvider.query.get(provider_id)
        if not provider:
            return jsonify({
                'success': False, (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==models.proxy_config:[30:36]
==utils.api_utils:[74:80]
        self.host = host
        self.port = port
        self.protocol = protocol.lower()
        self.username = username
        self.password = password
        self.priority = priority (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.logs:[557:567]
==utils.logger:[266:276]
            file_name = os.path.basename(log_file)

            # 检查是否是核心日志文件
            is_core_log = False
            for core_log in CORE_LOG_FILES:
                if file_name == core_log or re.match(f"{core_log}\\.\\d+$", file_name):
                    is_core_log = True
                    break

            # 根据模式决定是否删除 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==modules.socialmedia.twitter:[284:294]
==utils.ssl_fix:[120:128]
            ssl_context = ssl.create_default_context()
            ssl_context.check_hostname = False
            ssl_context.verify_mode = ssl.CERT_NONE

            # 设置SSL版本和密码套件
            ssl_context.set_ciphers('DEFAULT@SECLEVEL=1')

            kwargs['ssl_context'] = ssl_context
            return super().init_poolmanager(*args, **kwargs)
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.test:[452:458]
==utils.test_utils:[633:639]
            url = url.strip()
            if url:
                try:
                    added = apobj.add(url)
                    if added:
                        valid_urls += 1 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==services.ai_polling_service:[123:142]
==web_app:[286:304]
        try:
            from web_app import db
            db.session.rollback()
        except:
            pass
        return False

def is_provider_available(provider_id: int) -> bool:
    """
    检查 AI 提供商是否可用

    Args:
        provider_id: 提供商 ID

    Returns:
        bool: 是否可用
    """
    try:
        # 获取提供商的最近几次请求记录 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.test:[269:276]
==services.test_service:[295:302]
            working_proxy = proxy_manager.find_working_proxy(force_check=True)

            if not working_proxy:
                return {
                    "success": False,
                    "message": "未找到可用的代理",
                    "data": { (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==services.test_service:[268:275]
==utils.test_utils:[376:383]
                end_time = time.time()
                response_time = end_time - start_time

                return {
                    "success": True,
                    "message": "代理连接测试成功",
                    "data": { (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==services.test_service:[253:260]
==utils.test_utils:[354:361]
                working_proxy = proxy_manager.find_working_proxy(force_check=True)

                if not working_proxy:
                    return {
                        "success": False,
                        "message": "未找到可用的代理",
                        "data": { (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==modules.socialmedia.twitter:[505:510]
==modules.socialmedia.twitter_twikit:[172:177]
            credentials['password'] = db_password
            credentials['source'] = 'database'
            logger.info(f"使用数据库中的Twitter账号: {db_username}")
            return credentials
        else: (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==modules.socialmedia.twitter:[993:1002]
==modules.socialmedia.twitter_twikit:[103:113]
        try:
            # 设置SSL环境以解决连接问题
            import ssl
            import os
            os.environ['PYTHONHTTPSVERIFY'] = '0'
            os.environ['CURL_CA_BUNDLE'] = ''
            os.environ['REQUESTS_CA_BUNDLE'] = ''

            # 设置SSL默认上下文
            ssl._create_default_https_context = ssl._create_unverified_context (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[202:215]
==api.twitter:[22:35]
    try:
        # 获取Twitter客户端管理器
        from modules.socialmedia.twitter_client_manager import get_twitter_manager
        twitter_manager = get_twitter_manager()

        # 获取当前库和可用库信息
        current_library = twitter_manager.current_library if twitter_manager.initialized else 'none'
        available_libraries = twitter_manager.get_available_libraries()

        # 获取配置的偏好设置
        from services.config_service import get_config
        library_preference = get_config('TWITTER_LIBRARY', 'auto')
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.settings:[227:250]
==api.test:[394:416]
        }), 500

@test_api.route('/notification', methods=['POST'])
def test_notification():
    """测试推送"""
    # 检查用户是否已登录
    if 'user_id' not in session:
        return jsonify({"success": False, "message": "未登录"}), 401

    try:
        # 获取请求参数
        try:
            data = request.get_json() or {}
            logger.debug(f"收到JSON数据: {data}")
        except Exception as e:
            logger.error(f"解析JSON数据时出错: {str(e)}")
            if request.content_type == 'application/x-www-form-urlencoded':
                data = request.form.to_dict()
                logger.debug(f"收到表单数据: {data}")
            else:
                logger.error(f"不支持的Content-Type: {request.content_type}")
                return jsonify({"success": False, "message": f"不支持的Content-Type: {request.content_type}"}), 415 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.accounts:[283:294]
==web_app:[1163:1175]
        account_info = f"{account.type}:{account.account_id}"

        # 删除账号
        db.session.delete(account)
        db.session.commit()

        # 同步到配置文件
        sync_accounts_to_yaml()

        logger.info(f"已删除账号: {account_info}")
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.accounts:[82:89]
==web_app:[1068:1075]
    except ValueError:
        # 如果不是整数，直接通过account_id查找
        account = SocialAccount.query.filter_by(account_id=account_id).first()
        if account:
            logger.info(f"通过account_id查找账号: {account_id}")
        else:
            logger.error(f"未找到账号: {account_id}") (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.accounts:[76:81]
==web_app:[1070:1075]
                account = SocialAccount.query.filter_by(account_id=account_id).first()
                if account:
                    logger.info(f"通过account_id查找账号: {account_id}")
                else:
                    logger.error(f"未找到账号: {account_id}") (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.accounts:[84:89]
==web_app:[1061:1066]
            account = SocialAccount.query.filter_by(account_id=account_id).first()
            if account:
                logger.info(f"通过account_id查找账号: {account_id}")
            else:
                logger.error(f"未找到账号: {account_id}") (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==modules.bots.apprise_adapter:[1111:1124]
==utils.api_utils:[701:706]
            try:
                proxy_manager = get_proxy_manager()
                working_proxy = proxy_manager.find_working_proxy()
                if working_proxy:
                    proxies = working_proxy.get_proxy_dict() (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.test:[216:221]
==utils.api_utils:[147:152]
            host=host,
            port=port,
            protocol=protocol,
            username=username,
            password=password, (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==api.test:[308:313]
==utils.test_utils:[405:410]
            return {
                "success": False,
                "message": f"代理连接测试失败: {str(e)}",
                "data": {
                    "url": test_url, (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==main:[54:62]
==utils.test_utils:[89:95]
    try:
        # 优先从数据库获取配置
        from services.config_service import get_config

        library_preference = get_config('TWITTER_LIBRARY')
        if library_preference and library_preference.strip():
            preference = library_preference.strip().lower()
            if preference in ['tweety', 'twikit', 'auto']: (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==utils.yaml_utils:[130:142]
==web_app:[985:991]
        existing = SocialAccount.query.filter_by(
            type=account_type,
            account_id=account_id
        ).first()

        if existing: (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==run_all:[62:70]
==services.config_service:[544:553]
            db_path = os.environ.get('DATABASE_PATH', '/data/tweetAnalyst.db')

            # 检查是否存在小写版本的数据库文件
            db_dir = os.path.dirname(db_path)
            db_name = os.path.basename(db_path)
            lowercase_db_name = db_name.lower()
            lowercase_db_path = os.path.join(db_dir, lowercase_db_name)
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==run_all:[125:134]
==services.config_service:[126:134]
            db_path = os.environ.get('DATABASE_PATH', '/data/tweetAnalyst.db')

            # 检查是否存在小写版本的数据库文件
            db_dir = os.path.dirname(db_path)
            db_name = os.path.basename(db_path)
            lowercase_db_name = db_name.lower()
            lowercase_db_path = os.path.join(db_dir, lowercase_db_name)
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==migrations.add_ai_provider_fields:[186:192]
==services.ai_polling_service:[123:140]
        try:
            db.session.rollback()
        except:
            pass
        return False
 (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==modules.langchain.llm:[379:388]
==services.ai_polling_service:[499:511]
            try:
                # 获取代理管理器
                proxy_manager = get_proxy_manager()

                # 检查是否有代理配置
                if proxy_manager and proxy_manager.proxy_configs:
                    # 有代理配置，使用代理
                    working_proxy = proxy_manager.find_working_proxy()
                    if working_proxy: (duplicate-code)
run_push_queue.py:1:0: R0801: Similar lines in 2 files
==run_push_queue:[32:44]
==services.push_queue_worker:[63:73]
                with app.app_context():
                    # 先重试失败的通知
                    retry_count = retry_failed_notifications(max_age_hours=24, limit=5)
                    if retry_count > 0:
                        logger.info(f"已将 {retry_count} 条失败的通知重新加入队列")

                    # 处理队列
                    processed, success = process_notification_queue(limit=10)

                # 更新统计信息 (duplicate-code)
run_push_queue.py:1:0: R0401: Cyclic import (models -> models.user) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (main -> modules.socialmedia.twitter -> modules.langchain.llm -> services.ai_polling_service -> web_app -> services.system_status_service) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (main -> modules.socialmedia.twitter -> modules.langchain.llm -> services.ai_polling_service -> models.ai_request_log -> web_app -> services.system_status_service) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (migrations.add_ai_request_logs -> models.ai_request_log -> web_app -> migrations.db_migrations) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (main -> modules.bots.apprise_adapter_queue -> services.push_queue_service -> models.push_notification -> web_app -> services.system_status_service) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (models.push_notification -> web_app -> routes.push_notifications) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (models.push_notification -> web_app -> routes.push_notifications -> services.push_queue_worker -> services.push_queue_service) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (api -> api.accounts -> modules.socialmedia.twitter -> modules.langchain.llm -> services.ai_polling_service -> web_app) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (api -> api.test -> utils.test_utils -> modules.langchain.llm -> services.ai_polling_service -> web_app) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (api -> api.tasks -> main -> modules.socialmedia.twitter -> modules.langchain.llm -> services.ai_polling_service -> web_app) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (services.ai_polling_service -> web_app) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (models -> models.ai_provider) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (main -> modules.socialmedia.twitter -> modules.langchain.llm -> web_app -> services.system_status_service) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (main -> modules.langchain.llm -> services.ai_polling_service -> web_app -> services.system_status_service) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (main -> web_app -> services.system_status_service) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (api -> api.test -> utils.test_utils -> modules.socialmedia.twitter -> modules.langchain.llm -> services.ai_polling_service -> web_app) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (routes.ai_settings -> services.ai_polling_service -> web_app) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (services.system_status_service -> web_app) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (modules.langchain.llm -> services.ai_polling_service -> web_app -> services.system_status_service -> modules.socialmedia.twitter) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (modules.langchain.llm -> services.ai_polling_service -> web_app -> services.system_status_service) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (api -> api.test -> services.system_status_service -> main -> modules.socialmedia.twitter -> modules.langchain.llm -> services.ai_polling_service -> web_app) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (main -> modules.socialmedia.smart_fetch -> modules.socialmedia.twitter_client_manager -> modules.socialmedia.twitter -> modules.langchain.llm -> services.ai_polling_service -> web_app -> services.system_status_service) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (api -> api.twitter -> modules.socialmedia.twitter_client_manager -> modules.socialmedia.twitter -> modules.langchain.llm -> services.ai_polling_service -> web_app) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (api -> api.system -> services.system_status_service -> main -> modules.socialmedia.twitter -> modules.langchain.llm -> services.ai_polling_service -> web_app) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (api -> api.settings -> modules.socialmedia.twitter_client_manager -> modules.socialmedia.twitter -> modules.langchain.llm -> services.ai_polling_service -> web_app) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (models.push_notification -> web_app -> routes.push_notifications -> services.push_queue_service) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (models -> models.analysis_result) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (models -> models.system_config) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (models -> models.system_state) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (models -> models.social_account) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (models -> models.notification_service) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (models -> models.proxy_config) (cyclic-import)
run_push_queue.py:1:0: R0401: Cyclic import (migrations.add_ai_provider_fields -> web_app -> migrations.db_migrations) (cyclic-import)

-----------------------------------
Your code has been rated at 6.80/10

